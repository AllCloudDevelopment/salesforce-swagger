{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "Swagger Salesforce API"
  },
  "host": "localhost:10010",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accepted_event_relation/{id}": {
      "x-swagger-router-controller": "accepted_event_relation",
      "get": {
        "description": "Returns accepted_event_relation instances by id",
        "operationId": "findAccepted_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the accepted_event_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an accepted_event_relation instance",
        "operationId": "updateAccepted_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the accepted_event_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an accepted_event_relation instance",
        "operationId": "deleteAccepted_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the accepted_event_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/accepted_event_relation": {
      "x-swagger-router-controller": "accepted_event_relation",
      "post": {
        "description": "creates a new instance of accepted_event_relation entity",
        "operationId": "createNewAccepted_event_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account/{id}": {
      "x-swagger-router-controller": "account",
      "get": {
        "description": "Returns account instances by id",
        "operationId": "findAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account instance",
        "operationId": "updateAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account instance",
        "operationId": "deleteAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account": {
      "x-swagger-router-controller": "account",
      "post": {
        "description": "creates a new instance of account entity",
        "operationId": "createNewAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_change_event/{id}": {
      "x-swagger-router-controller": "account_change_event",
      "get": {
        "description": "Returns account_change_event instances by id",
        "operationId": "findAccount_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_change_event instance",
        "operationId": "updateAccount_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_change_event instance",
        "operationId": "deleteAccount_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_change_event": {
      "x-swagger-router-controller": "account_change_event",
      "post": {
        "description": "creates a new instance of account_change_event entity",
        "operationId": "createNewAccount_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_clean_info/{id}": {
      "x-swagger-router-controller": "account_clean_info",
      "get": {
        "description": "Returns account_clean_info instances by id",
        "operationId": "findAccount_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_clean_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_clean_info instance",
        "operationId": "updateAccount_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_clean_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_clean_info instance",
        "operationId": "deleteAccount_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_clean_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_clean_info": {
      "x-swagger-router-controller": "account_clean_info",
      "post": {
        "description": "creates a new instance of account_clean_info entity",
        "operationId": "createNewAccount_clean_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_contact_role/{id}": {
      "x-swagger-router-controller": "account_contact_role",
      "get": {
        "description": "Returns account_contact_role instances by id",
        "operationId": "findAccount_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_contact_role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_contact_role instance",
        "operationId": "updateAccount_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_contact_role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_contact_role instance",
        "operationId": "deleteAccount_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_contact_role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_contact_role": {
      "x-swagger-router-controller": "account_contact_role",
      "post": {
        "description": "creates a new instance of account_contact_role entity",
        "operationId": "createNewAccount_contact_role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_feed/{id}": {
      "x-swagger-router-controller": "account_feed",
      "get": {
        "description": "Returns account_feed instances by id",
        "operationId": "findAccount_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_feed instance",
        "operationId": "updateAccount_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_feed instance",
        "operationId": "deleteAccount_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_feed": {
      "x-swagger-router-controller": "account_feed",
      "post": {
        "description": "creates a new instance of account_feed entity",
        "operationId": "createNewAccount_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_history/{id}": {
      "x-swagger-router-controller": "account_history",
      "get": {
        "description": "Returns account_history instances by id",
        "operationId": "findAccount_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_history instance",
        "operationId": "updateAccount_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_history instance",
        "operationId": "deleteAccount_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_history": {
      "x-swagger-router-controller": "account_history",
      "post": {
        "description": "creates a new instance of account_history entity",
        "operationId": "createNewAccount_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_partner/{id}": {
      "x-swagger-router-controller": "account_partner",
      "get": {
        "description": "Returns account_partner instances by id",
        "operationId": "findAccount_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_partner to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_partner instance",
        "operationId": "updateAccount_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_partner to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_partner instance",
        "operationId": "deleteAccount_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_partner to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_partner": {
      "x-swagger-router-controller": "account_partner",
      "post": {
        "description": "creates a new instance of account_partner entity",
        "operationId": "createNewAccount_partner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_share/{id}": {
      "x-swagger-router-controller": "account_share",
      "get": {
        "description": "Returns account_share instances by id",
        "operationId": "findAccount_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an account_share instance",
        "operationId": "updateAccount_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an account_share instance",
        "operationId": "deleteAccount_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/account_share": {
      "x-swagger-router-controller": "account_share",
      "post": {
        "description": "creates a new instance of account_share entity",
        "operationId": "createNewAccount_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/action_link_group_template/{id}": {
      "x-swagger-router-controller": "action_link_group_template",
      "get": {
        "description": "Returns action_link_group_template instances by id",
        "operationId": "findAction_link_group_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_group_template to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an action_link_group_template instance",
        "operationId": "updateAction_link_group_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_group_template to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an action_link_group_template instance",
        "operationId": "deleteAction_link_group_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_group_template to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/action_link_group_template": {
      "x-swagger-router-controller": "action_link_group_template",
      "post": {
        "description": "creates a new instance of action_link_group_template entity",
        "operationId": "createNewAction_link_group_template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/action_link_template/{id}": {
      "x-swagger-router-controller": "action_link_template",
      "get": {
        "description": "Returns action_link_template instances by id",
        "operationId": "findAction_link_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_template to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an action_link_template instance",
        "operationId": "updateAction_link_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_template to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an action_link_template instance",
        "operationId": "deleteAction_link_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the action_link_template to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/action_link_template": {
      "x-swagger-router-controller": "action_link_template",
      "post": {
        "description": "creates a new instance of action_link_template entity",
        "operationId": "createNewAction_link_template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/activity_history/{id}": {
      "x-swagger-router-controller": "activity_history",
      "get": {
        "description": "Returns activity_history instances by id",
        "operationId": "findActivity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the activity_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an activity_history instance",
        "operationId": "updateActivity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the activity_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an activity_history instance",
        "operationId": "deleteActivity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the activity_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/activity_history": {
      "x-swagger-router-controller": "activity_history",
      "post": {
        "description": "creates a new instance of activity_history entity",
        "operationId": "createNewActivity_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/additional_directory_number/{id}": {
      "x-swagger-router-controller": "additional_directory_number",
      "get": {
        "description": "Returns additional_directory_number instances by id",
        "operationId": "findAdditional_directory_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the additional_directory_number to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an additional_directory_number instance",
        "operationId": "updateAdditional_directory_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the additional_directory_number to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an additional_directory_number instance",
        "operationId": "deleteAdditional_directory_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the additional_directory_number to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/additional_directory_number": {
      "x-swagger-router-controller": "additional_directory_number",
      "post": {
        "description": "creates a new instance of additional_directory_number entity",
        "operationId": "createNewAdditional_directory_number",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/aggregate_result/{id}": {
      "x-swagger-router-controller": "aggregate_result",
      "get": {
        "description": "Returns aggregate_result instances by id",
        "operationId": "findAggregate_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aggregate_result to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an aggregate_result instance",
        "operationId": "updateAggregate_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aggregate_result to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an aggregate_result instance",
        "operationId": "deleteAggregate_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aggregate_result to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/aggregate_result": {
      "x-swagger-router-controller": "aggregate_result",
      "post": {
        "description": "creates a new instance of aggregate_result entity",
        "operationId": "createNewAggregate_result",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/announcement/{id}": {
      "x-swagger-router-controller": "announcement",
      "get": {
        "description": "Returns announcement instances by id",
        "operationId": "findAnnouncementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the announcement to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an announcement instance",
        "operationId": "updateAnnouncementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the announcement to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an announcement instance",
        "operationId": "deleteAnnouncementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the announcement to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/announcement": {
      "x-swagger-router-controller": "announcement",
      "post": {
        "description": "creates a new instance of announcement entity",
        "operationId": "createNewAnnouncement",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_class/{id}": {
      "x-swagger-router-controller": "apex_class",
      "get": {
        "description": "Returns apex_class instances by id",
        "operationId": "findApex_classById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_class to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_class instance",
        "operationId": "updateApex_classById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_class to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_class instance",
        "operationId": "deleteApex_classById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_class to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_class": {
      "x-swagger-router-controller": "apex_class",
      "post": {
        "description": "creates a new instance of apex_class entity",
        "operationId": "createNewApex_class",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_component/{id}": {
      "x-swagger-router-controller": "visualforce_component",
      "get": {
        "description": "Returns visualforce_component instances by id",
        "operationId": "findVisualforce_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_component to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an visualforce_component instance",
        "operationId": "updateVisualforce_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_component to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an visualforce_component instance",
        "operationId": "deleteVisualforce_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_component to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_component": {
      "x-swagger-router-controller": "visualforce_component",
      "post": {
        "description": "creates a new instance of visualforce_component entity",
        "operationId": "createNewVisualforce_component",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_email_notification/{id}": {
      "x-swagger-router-controller": "apex_email_notification",
      "get": {
        "description": "Returns apex_email_notification instances by id",
        "operationId": "findApex_email_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_email_notification to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_email_notification instance",
        "operationId": "updateApex_email_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_email_notification to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_email_notification instance",
        "operationId": "deleteApex_email_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_email_notification to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_email_notification": {
      "x-swagger-router-controller": "apex_email_notification",
      "post": {
        "description": "creates a new instance of apex_email_notification entity",
        "operationId": "createNewApex_email_notification",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_debug_log/{id}": {
      "x-swagger-router-controller": "apex_debug_log",
      "get": {
        "description": "Returns apex_debug_log instances by id",
        "operationId": "findApex_debug_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_debug_log to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_debug_log instance",
        "operationId": "updateApex_debug_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_debug_log to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_debug_log instance",
        "operationId": "deleteApex_debug_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_debug_log to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_debug_log": {
      "x-swagger-router-controller": "apex_debug_log",
      "post": {
        "description": "creates a new instance of apex_debug_log entity",
        "operationId": "createNewApex_debug_log",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_page/{id}": {
      "x-swagger-router-controller": "visualforce_page",
      "get": {
        "description": "Returns visualforce_page instances by id",
        "operationId": "findVisualforce_pageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_page to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an visualforce_page instance",
        "operationId": "updateVisualforce_pageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_page to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an visualforce_page instance",
        "operationId": "deleteVisualforce_pageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_page to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_page": {
      "x-swagger-router-controller": "visualforce_page",
      "post": {
        "description": "creates a new instance of visualforce_page entity",
        "operationId": "createNewVisualforce_page",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_page_info/{id}": {
      "x-swagger-router-controller": "apex_page_info",
      "get": {
        "description": "Returns apex_page_info instances by id",
        "operationId": "findApex_page_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_page_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_page_info instance",
        "operationId": "updateApex_page_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_page_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_page_info instance",
        "operationId": "deleteApex_page_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_page_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_page_info": {
      "x-swagger-router-controller": "apex_page_info",
      "post": {
        "description": "creates a new instance of apex_page_info entity",
        "operationId": "createNewApex_page_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_queue_item/{id}": {
      "x-swagger-router-controller": "apex_test_queue_item",
      "get": {
        "description": "Returns apex_test_queue_item instances by id",
        "operationId": "findApex_test_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_queue_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_test_queue_item instance",
        "operationId": "updateApex_test_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_queue_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_test_queue_item instance",
        "operationId": "deleteApex_test_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_queue_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_queue_item": {
      "x-swagger-router-controller": "apex_test_queue_item",
      "post": {
        "description": "creates a new instance of apex_test_queue_item entity",
        "operationId": "createNewApex_test_queue_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_result/{id}": {
      "x-swagger-router-controller": "apex_test_result",
      "get": {
        "description": "Returns apex_test_result instances by id",
        "operationId": "findApex_test_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_test_result instance",
        "operationId": "updateApex_test_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_test_result instance",
        "operationId": "deleteApex_test_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_result": {
      "x-swagger-router-controller": "apex_test_result",
      "post": {
        "description": "creates a new instance of apex_test_result entity",
        "operationId": "createNewApex_test_result",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_result_limit/{id}": {
      "x-swagger-router-controller": "apex_test_result_limit",
      "get": {
        "description": "Returns apex_test_result_limit instances by id",
        "operationId": "findApex_test_result_limitById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result_limit to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_test_result_limit instance",
        "operationId": "updateApex_test_result_limitById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result_limit to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_test_result_limit instance",
        "operationId": "deleteApex_test_result_limitById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_result_limit to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_result_limit": {
      "x-swagger-router-controller": "apex_test_result_limit",
      "post": {
        "description": "creates a new instance of apex_test_result_limit entity",
        "operationId": "createNewApex_test_result_limit",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_run_result/{id}": {
      "x-swagger-router-controller": "apex_test_run_result",
      "get": {
        "description": "Returns apex_test_run_result instances by id",
        "operationId": "findApex_test_run_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_run_result to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_test_run_result instance",
        "operationId": "updateApex_test_run_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_run_result to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_test_run_result instance",
        "operationId": "deleteApex_test_run_resultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_run_result to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_run_result": {
      "x-swagger-router-controller": "apex_test_run_result",
      "post": {
        "description": "creates a new instance of apex_test_run_result entity",
        "operationId": "createNewApex_test_run_result",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_suite/{id}": {
      "x-swagger-router-controller": "apex_test_suite",
      "get": {
        "description": "Returns apex_test_suite instances by id",
        "operationId": "findApex_test_suiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_suite to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_test_suite instance",
        "operationId": "updateApex_test_suiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_suite to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_test_suite instance",
        "operationId": "deleteApex_test_suiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_test_suite to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_test_suite": {
      "x-swagger-router-controller": "apex_test_suite",
      "post": {
        "description": "creates a new instance of apex_test_suite entity",
        "operationId": "createNewApex_test_suite",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_trigger/{id}": {
      "x-swagger-router-controller": "apex_trigger",
      "get": {
        "description": "Returns apex_trigger instances by id",
        "operationId": "findApex_triggerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_trigger to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_trigger instance",
        "operationId": "updateApex_triggerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_trigger to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_trigger instance",
        "operationId": "deleteApex_triggerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_trigger to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_trigger": {
      "x-swagger-router-controller": "apex_trigger",
      "post": {
        "description": "creates a new instance of apex_trigger entity",
        "operationId": "createNewApex_trigger",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/appmenuitem/{id}": {
      "x-swagger-router-controller": "appmenuitem",
      "get": {
        "description": "Returns appmenuitem instances by id",
        "operationId": "findAppmenuitemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the appmenuitem to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an appmenuitem instance",
        "operationId": "updateAppmenuitemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the appmenuitem to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an appmenuitem instance",
        "operationId": "deleteAppmenuitemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the appmenuitem to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/appmenuitem": {
      "x-swagger-router-controller": "appmenuitem",
      "post": {
        "description": "creates a new instance of appmenuitem entity",
        "operationId": "createNewAppmenuitem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset/{id}": {
      "x-swagger-router-controller": "asset",
      "get": {
        "description": "Returns asset instances by id",
        "operationId": "findAssetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset instance",
        "operationId": "updateAssetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset instance",
        "operationId": "deleteAssetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset": {
      "x-swagger-router-controller": "asset",
      "post": {
        "description": "creates a new instance of asset entity",
        "operationId": "createNewAsset",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_change_event/{id}": {
      "x-swagger-router-controller": "asset_change_event",
      "get": {
        "description": "Returns asset_change_event instances by id",
        "operationId": "findAsset_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_change_event instance",
        "operationId": "updateAsset_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_change_event instance",
        "operationId": "deleteAsset_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_change_event": {
      "x-swagger-router-controller": "asset_change_event",
      "post": {
        "description": "creates a new instance of asset_change_event entity",
        "operationId": "createNewAsset_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_feed/{id}": {
      "x-swagger-router-controller": "asset_feed",
      "get": {
        "description": "Returns asset_feed instances by id",
        "operationId": "findAsset_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_feed instance",
        "operationId": "updateAsset_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_feed instance",
        "operationId": "deleteAsset_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_feed": {
      "x-swagger-router-controller": "asset_feed",
      "post": {
        "description": "creates a new instance of asset_feed entity",
        "operationId": "createNewAsset_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_history/{id}": {
      "x-swagger-router-controller": "asset_history",
      "get": {
        "description": "Returns asset_history instances by id",
        "operationId": "findAsset_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_history instance",
        "operationId": "updateAsset_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_history instance",
        "operationId": "deleteAsset_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_history": {
      "x-swagger-router-controller": "asset_history",
      "post": {
        "description": "creates a new instance of asset_history entity",
        "operationId": "createNewAsset_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship/{id}": {
      "x-swagger-router-controller": "asset_relationship",
      "get": {
        "description": "Returns asset_relationship instances by id",
        "operationId": "findAsset_relationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_relationship instance",
        "operationId": "updateAsset_relationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_relationship instance",
        "operationId": "deleteAsset_relationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship": {
      "x-swagger-router-controller": "asset_relationship",
      "post": {
        "description": "creates a new instance of asset_relationship entity",
        "operationId": "createNewAsset_relationship",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship_feed/{id}": {
      "x-swagger-router-controller": "asset_relationship_feed",
      "get": {
        "description": "Returns asset_relationship_feed instances by id",
        "operationId": "findAsset_relationship_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_relationship_feed instance",
        "operationId": "updateAsset_relationship_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_relationship_feed instance",
        "operationId": "deleteAsset_relationship_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship_feed": {
      "x-swagger-router-controller": "asset_relationship_feed",
      "post": {
        "description": "creates a new instance of asset_relationship_feed entity",
        "operationId": "createNewAsset_relationship_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship_history/{id}": {
      "x-swagger-router-controller": "asset_relationship_history",
      "get": {
        "description": "Returns asset_relationship_history instances by id",
        "operationId": "findAsset_relationship_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_relationship_history instance",
        "operationId": "updateAsset_relationship_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_relationship_history instance",
        "operationId": "deleteAsset_relationship_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_relationship_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_relationship_history": {
      "x-swagger-router-controller": "asset_relationship_history",
      "post": {
        "description": "creates a new instance of asset_relationship_history entity",
        "operationId": "createNewAsset_relationship_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_share/{id}": {
      "x-swagger-router-controller": "asset_share",
      "get": {
        "description": "Returns asset_share instances by id",
        "operationId": "findAsset_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_share instance",
        "operationId": "updateAsset_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_share instance",
        "operationId": "deleteAsset_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_share": {
      "x-swagger-router-controller": "asset_share",
      "post": {
        "description": "creates a new instance of asset_share entity",
        "operationId": "createNewAsset_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_token_event/{id}": {
      "x-swagger-router-controller": "asset_token_event",
      "get": {
        "description": "Returns asset_token_event instances by id",
        "operationId": "findAsset_token_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_token_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_token_event instance",
        "operationId": "updateAsset_token_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_token_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_token_event instance",
        "operationId": "deleteAsset_token_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_token_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_token_event": {
      "x-swagger-router-controller": "asset_token_event",
      "post": {
        "description": "creates a new instance of asset_token_event entity",
        "operationId": "createNewAsset_token_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assigned_resource/{id}": {
      "x-swagger-router-controller": "assigned_resource",
      "get": {
        "description": "Returns assigned_resource instances by id",
        "operationId": "findAssigned_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an assigned_resource instance",
        "operationId": "updateAssigned_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an assigned_resource instance",
        "operationId": "deleteAssigned_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assigned_resource": {
      "x-swagger-router-controller": "assigned_resource",
      "post": {
        "description": "creates a new instance of assigned_resource entity",
        "operationId": "createNewAssigned_resource",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assigned_resource_feed/{id}": {
      "x-swagger-router-controller": "assigned_resource_feed",
      "get": {
        "description": "Returns assigned_resource_feed instances by id",
        "operationId": "findAssigned_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an assigned_resource_feed instance",
        "operationId": "updateAssigned_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an assigned_resource_feed instance",
        "operationId": "deleteAssigned_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assigned_resource_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assigned_resource_feed": {
      "x-swagger-router-controller": "assigned_resource_feed",
      "post": {
        "description": "creates a new instance of assigned_resource_feed entity",
        "operationId": "createNewAssigned_resource_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assignment_rule/{id}": {
      "x-swagger-router-controller": "assignment_rule",
      "get": {
        "description": "Returns assignment_rule instances by id",
        "operationId": "findAssignment_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assignment_rule to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an assignment_rule instance",
        "operationId": "updateAssignment_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assignment_rule to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an assignment_rule instance",
        "operationId": "deleteAssignment_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assignment_rule to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/assignment_rule": {
      "x-swagger-router-controller": "assignment_rule",
      "post": {
        "description": "creates a new instance of assignment_rule entity",
        "operationId": "createNewAssignment_rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_job/{id}": {
      "x-swagger-router-controller": "apex_job",
      "get": {
        "description": "Returns apex_job instances by id",
        "operationId": "findApex_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_job to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an apex_job instance",
        "operationId": "updateApex_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_job to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an apex_job instance",
        "operationId": "deleteApex_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the apex_job to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apex_job": {
      "x-swagger-router-controller": "apex_job",
      "post": {
        "description": "creates a new instance of apex_job entity",
        "operationId": "createNewApex_job",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/attached_content_document/{id}": {
      "x-swagger-router-controller": "attached_content_document",
      "get": {
        "description": "Returns attached_content_document instances by id",
        "operationId": "findAttached_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attached_content_document to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an attached_content_document instance",
        "operationId": "updateAttached_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attached_content_document to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an attached_content_document instance",
        "operationId": "deleteAttached_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attached_content_document to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/attached_content_document": {
      "x-swagger-router-controller": "attached_content_document",
      "post": {
        "description": "creates a new instance of attached_content_document entity",
        "operationId": "createNewAttached_content_document",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/attachment/{id}": {
      "x-swagger-router-controller": "attachment",
      "get": {
        "description": "Returns attachment instances by id",
        "operationId": "findAttachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attachment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an attachment instance",
        "operationId": "updateAttachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attachment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an attachment instance",
        "operationId": "deleteAttachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the attachment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/attachment": {
      "x-swagger-router-controller": "attachment",
      "post": {
        "description": "creates a new instance of attachment entity",
        "operationId": "createNewAttachment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightning_component_definition/{id}": {
      "x-swagger-router-controller": "lightning_component_definition",
      "get": {
        "description": "Returns lightning_component_definition instances by id",
        "operationId": "findLightning_component_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_component_definition to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightning_component_definition instance",
        "operationId": "updateLightning_component_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_component_definition to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightning_component_definition instance",
        "operationId": "deleteLightning_component_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_component_definition to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightning_component_definition": {
      "x-swagger-router-controller": "lightning_component_definition",
      "post": {
        "description": "creates a new instance of lightning_component_definition entity",
        "operationId": "createNewLightning_component_definition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/aura_component_bundle/{id}": {
      "x-swagger-router-controller": "aura_component_bundle",
      "get": {
        "description": "Returns aura_component_bundle instances by id",
        "operationId": "findAura_component_bundleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aura_component_bundle to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an aura_component_bundle instance",
        "operationId": "updateAura_component_bundleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aura_component_bundle to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an aura_component_bundle instance",
        "operationId": "deleteAura_component_bundleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the aura_component_bundle to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/aura_component_bundle": {
      "x-swagger-router-controller": "aura_component_bundle",
      "post": {
        "description": "creates a new instance of aura_component_bundle entity",
        "operationId": "createNewAura_component_bundle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auradefinitionbundle_info/{id}": {
      "x-swagger-router-controller": "auradefinitionbundle_info",
      "get": {
        "description": "Returns auradefinitionbundle_info instances by id",
        "operationId": "findAuradefinitionbundle_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinitionbundle_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an auradefinitionbundle_info instance",
        "operationId": "updateAuradefinitionbundle_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinitionbundle_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an auradefinitionbundle_info instance",
        "operationId": "deleteAuradefinitionbundle_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinitionbundle_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auradefinitionbundle_info": {
      "x-swagger-router-controller": "auradefinitionbundle_info",
      "post": {
        "description": "creates a new instance of auradefinitionbundle_info entity",
        "operationId": "createNewAuradefinitionbundle_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auradefinition_info/{id}": {
      "x-swagger-router-controller": "auradefinition_info",
      "get": {
        "description": "Returns auradefinition_info instances by id",
        "operationId": "findAuradefinition_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinition_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an auradefinition_info instance",
        "operationId": "updateAuradefinition_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinition_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an auradefinition_info instance",
        "operationId": "deleteAuradefinition_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auradefinition_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auradefinition_info": {
      "x-swagger-router-controller": "auradefinition_info",
      "post": {
        "description": "creates a new instance of auradefinition_info entity",
        "operationId": "createNewAuradefinition_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/authentication_configuration/{id}": {
      "x-swagger-router-controller": "authentication_configuration",
      "get": {
        "description": "Returns authentication_configuration instances by id",
        "operationId": "findAuthentication_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an authentication_configuration instance",
        "operationId": "updateAuthentication_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an authentication_configuration instance",
        "operationId": "deleteAuthentication_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/authentication_configuration": {
      "x-swagger-router-controller": "authentication_configuration",
      "post": {
        "description": "creates a new instance of authentication_configuration entity",
        "operationId": "createNewAuthentication_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/authentication_configuration_auth__provider/{id}": {
      "x-swagger-router-controller": "authentication_configuration_auth__provider",
      "get": {
        "description": "Returns authentication_configuration_auth__provider instances by id",
        "operationId": "findAuthentication_configuration_auth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration_auth__provider to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an authentication_configuration_auth__provider instance",
        "operationId": "updateAuthentication_configuration_auth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration_auth__provider to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an authentication_configuration_auth__provider instance",
        "operationId": "deleteAuthentication_configuration_auth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the authentication_configuration_auth__provider to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/authentication_configuration_auth__provider": {
      "x-swagger-router-controller": "authentication_configuration_auth__provider",
      "post": {
        "description": "creates a new instance of authentication_configuration_auth__provider entity",
        "operationId": "createNewAuthentication_configuration_auth__provider",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auth__provider/{id}": {
      "x-swagger-router-controller": "auth__provider",
      "get": {
        "description": "Returns auth__provider instances by id",
        "operationId": "findAuth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth__provider to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an auth__provider instance",
        "operationId": "updateAuth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth__provider to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an auth__provider instance",
        "operationId": "deleteAuth__providerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth__provider to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auth__provider": {
      "x-swagger-router-controller": "auth__provider",
      "post": {
        "description": "creates a new instance of auth__provider entity",
        "operationId": "createNewAuth__provider",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auth_session/{id}": {
      "x-swagger-router-controller": "auth_session",
      "get": {
        "description": "Returns auth_session instances by id",
        "operationId": "findAuth_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth_session to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an auth_session instance",
        "operationId": "updateAuth_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth_session to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an auth_session instance",
        "operationId": "deleteAuth_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the auth_session to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auth_session": {
      "x-swagger-router-controller": "auth_session",
      "post": {
        "description": "creates a new instance of auth_session entity",
        "operationId": "createNewAuth_session",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/background_operation/{id}": {
      "x-swagger-router-controller": "background_operation",
      "get": {
        "description": "Returns background_operation instances by id",
        "operationId": "findBackground_operationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the background_operation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an background_operation instance",
        "operationId": "updateBackground_operationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the background_operation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an background_operation instance",
        "operationId": "deleteBackground_operationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the background_operation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/background_operation": {
      "x-swagger-router-controller": "background_operation",
      "post": {
        "description": "creates a new instance of background_operation entity",
        "operationId": "createNewBackground_operation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/letterhead/{id}": {
      "x-swagger-router-controller": "letterhead",
      "get": {
        "description": "Returns letterhead instances by id",
        "operationId": "findLetterheadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the letterhead to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an letterhead instance",
        "operationId": "updateLetterheadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the letterhead to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an letterhead instance",
        "operationId": "deleteLetterheadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the letterhead to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/letterhead": {
      "x-swagger-router-controller": "letterhead",
      "post": {
        "description": "creates a new instance of letterhead entity",
        "operationId": "createNewLetterhead",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/branding_set/{id}": {
      "x-swagger-router-controller": "branding_set",
      "get": {
        "description": "Returns branding_set instances by id",
        "operationId": "findBranding_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an branding_set instance",
        "operationId": "updateBranding_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an branding_set instance",
        "operationId": "deleteBranding_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/branding_set": {
      "x-swagger-router-controller": "branding_set",
      "post": {
        "description": "creates a new instance of branding_set entity",
        "operationId": "createNewBranding_set",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/branding_set_property/{id}": {
      "x-swagger-router-controller": "branding_set_property",
      "get": {
        "description": "Returns branding_set_property instances by id",
        "operationId": "findBranding_set_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set_property to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an branding_set_property instance",
        "operationId": "updateBranding_set_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set_property to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an branding_set_property instance",
        "operationId": "deleteBranding_set_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the branding_set_property to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/branding_set_property": {
      "x-swagger-router-controller": "branding_set_property",
      "post": {
        "description": "creates a new instance of branding_set_property entity",
        "operationId": "createNewBranding_set_property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/business_hours/{id}": {
      "x-swagger-router-controller": "business_hours",
      "get": {
        "description": "Returns business_hours instances by id",
        "operationId": "findBusiness_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_hours to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an business_hours instance",
        "operationId": "updateBusiness_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_hours to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an business_hours instance",
        "operationId": "deleteBusiness_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_hours to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/business_hours": {
      "x-swagger-router-controller": "business_hours",
      "post": {
        "description": "creates a new instance of business_hours entity",
        "operationId": "createNewBusiness_hours",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/business_process/{id}": {
      "x-swagger-router-controller": "business_process",
      "get": {
        "description": "Returns business_process instances by id",
        "operationId": "findBusiness_processById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_process to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an business_process instance",
        "operationId": "updateBusiness_processById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_process to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an business_process instance",
        "operationId": "deleteBusiness_processById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the business_process to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/business_process": {
      "x-swagger-router-controller": "business_process",
      "post": {
        "description": "creates a new instance of business_process entity",
        "operationId": "createNewBusiness_process",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/call_center/{id}": {
      "x-swagger-router-controller": "call_center",
      "get": {
        "description": "Returns call_center instances by id",
        "operationId": "findCall_centerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the call_center to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an call_center instance",
        "operationId": "updateCall_centerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the call_center to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an call_center instance",
        "operationId": "deleteCall_centerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the call_center to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/call_center": {
      "x-swagger-router-controller": "call_center",
      "post": {
        "description": "creates a new instance of call_center entity",
        "operationId": "createNewCall_center",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign/{id}": {
      "x-swagger-router-controller": "campaign",
      "get": {
        "description": "Returns campaign instances by id",
        "operationId": "findCampaignById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign instance",
        "operationId": "updateCampaignById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign instance",
        "operationId": "deleteCampaignById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign": {
      "x-swagger-router-controller": "campaign",
      "post": {
        "description": "creates a new instance of campaign entity",
        "operationId": "createNewCampaign",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_change_event/{id}": {
      "x-swagger-router-controller": "campaign_change_event",
      "get": {
        "description": "Returns campaign_change_event instances by id",
        "operationId": "findCampaign_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_change_event instance",
        "operationId": "updateCampaign_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_change_event instance",
        "operationId": "deleteCampaign_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_change_event": {
      "x-swagger-router-controller": "campaign_change_event",
      "post": {
        "description": "creates a new instance of campaign_change_event entity",
        "operationId": "createNewCampaign_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_feed/{id}": {
      "x-swagger-router-controller": "campaign_feed",
      "get": {
        "description": "Returns campaign_feed instances by id",
        "operationId": "findCampaign_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_feed instance",
        "operationId": "updateCampaign_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_feed instance",
        "operationId": "deleteCampaign_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_feed": {
      "x-swagger-router-controller": "campaign_feed",
      "post": {
        "description": "creates a new instance of campaign_feed entity",
        "operationId": "createNewCampaign_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_field_history/{id}": {
      "x-swagger-router-controller": "campaign_field_history",
      "get": {
        "description": "Returns campaign_field_history instances by id",
        "operationId": "findCampaign_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_field_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_field_history instance",
        "operationId": "updateCampaign_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_field_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_field_history instance",
        "operationId": "deleteCampaign_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_field_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_field_history": {
      "x-swagger-router-controller": "campaign_field_history",
      "post": {
        "description": "creates a new instance of campaign_field_history entity",
        "operationId": "createNewCampaign_field_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_member/{id}": {
      "x-swagger-router-controller": "campaign_member",
      "get": {
        "description": "Returns campaign_member instances by id",
        "operationId": "findCampaign_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_member instance",
        "operationId": "updateCampaign_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_member instance",
        "operationId": "deleteCampaign_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_member": {
      "x-swagger-router-controller": "campaign_member",
      "post": {
        "description": "creates a new instance of campaign_member entity",
        "operationId": "createNewCampaign_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_member_status/{id}": {
      "x-swagger-router-controller": "campaign_member_status",
      "get": {
        "description": "Returns campaign_member_status instances by id",
        "operationId": "findCampaign_member_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member_status to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_member_status instance",
        "operationId": "updateCampaign_member_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member_status to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_member_status instance",
        "operationId": "deleteCampaign_member_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_member_status to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_member_status": {
      "x-swagger-router-controller": "campaign_member_status",
      "post": {
        "description": "creates a new instance of campaign_member_status entity",
        "operationId": "createNewCampaign_member_status",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_share/{id}": {
      "x-swagger-router-controller": "campaign_share",
      "get": {
        "description": "Returns campaign_share instances by id",
        "operationId": "findCampaign_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an campaign_share instance",
        "operationId": "updateCampaign_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an campaign_share instance",
        "operationId": "deleteCampaign_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/campaign_share": {
      "x-swagger-router-controller": "campaign_share",
      "post": {
        "description": "creates a new instance of campaign_share entity",
        "operationId": "createNewCampaign_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/_case/{id}": {
      "x-swagger-router-controller": "_case",
      "get": {
        "description": "Returns _case instances by id",
        "operationId": "find_caseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the _case to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an _case instance",
        "operationId": "update_caseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the _case to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an _case instance",
        "operationId": "delete_caseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the _case to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/_case": {
      "x-swagger-router-controller": "_case",
      "post": {
        "description": "creates a new instance of _case entity",
        "operationId": "createNew_case",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_change_event/{id}": {
      "x-swagger-router-controller": "case_change_event",
      "get": {
        "description": "Returns case_change_event instances by id",
        "operationId": "findCase_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_change_event instance",
        "operationId": "updateCase_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_change_event instance",
        "operationId": "deleteCase_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_change_event": {
      "x-swagger-router-controller": "case_change_event",
      "post": {
        "description": "creates a new instance of case_change_event entity",
        "operationId": "createNewCase_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_comment/{id}": {
      "x-swagger-router-controller": "case_comment",
      "get": {
        "description": "Returns case_comment instances by id",
        "operationId": "findCase_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_comment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_comment instance",
        "operationId": "updateCase_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_comment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_comment instance",
        "operationId": "deleteCase_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_comment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_comment": {
      "x-swagger-router-controller": "case_comment",
      "post": {
        "description": "creates a new instance of case_comment entity",
        "operationId": "createNewCase_comment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_contact_role/{id}": {
      "x-swagger-router-controller": "case_contact_role",
      "get": {
        "description": "Returns case_contact_role instances by id",
        "operationId": "findCase_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_contact_role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_contact_role instance",
        "operationId": "updateCase_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_contact_role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_contact_role instance",
        "operationId": "deleteCase_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_contact_role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_contact_role": {
      "x-swagger-router-controller": "case_contact_role",
      "post": {
        "description": "creates a new instance of case_contact_role entity",
        "operationId": "createNewCase_contact_role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_feed/{id}": {
      "x-swagger-router-controller": "case_feed",
      "get": {
        "description": "Returns case_feed instances by id",
        "operationId": "findCase_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_feed instance",
        "operationId": "updateCase_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_feed instance",
        "operationId": "deleteCase_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_feed": {
      "x-swagger-router-controller": "case_feed",
      "post": {
        "description": "creates a new instance of case_feed entity",
        "operationId": "createNewCase_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_history/{id}": {
      "x-swagger-router-controller": "case_history",
      "get": {
        "description": "Returns case_history instances by id",
        "operationId": "findCase_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_history instance",
        "operationId": "updateCase_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_history instance",
        "operationId": "deleteCase_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_history": {
      "x-swagger-router-controller": "case_history",
      "post": {
        "description": "creates a new instance of case_history entity",
        "operationId": "createNewCase_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_share/{id}": {
      "x-swagger-router-controller": "case_share",
      "get": {
        "description": "Returns case_share instances by id",
        "operationId": "findCase_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_share instance",
        "operationId": "updateCase_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_share instance",
        "operationId": "deleteCase_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_share": {
      "x-swagger-router-controller": "case_share",
      "post": {
        "description": "creates a new instance of case_share entity",
        "operationId": "createNewCase_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_solution/{id}": {
      "x-swagger-router-controller": "case_solution",
      "get": {
        "description": "Returns case_solution instances by id",
        "operationId": "findCase_solutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_solution to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_solution instance",
        "operationId": "updateCase_solutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_solution to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_solution instance",
        "operationId": "deleteCase_solutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_solution to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_solution": {
      "x-swagger-router-controller": "case_solution",
      "post": {
        "description": "creates a new instance of case_solution entity",
        "operationId": "createNewCase_solution",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_status_value/{id}": {
      "x-swagger-router-controller": "case_status_value",
      "get": {
        "description": "Returns case_status_value instances by id",
        "operationId": "findCase_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_status_value instance",
        "operationId": "updateCase_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_status_value instance",
        "operationId": "deleteCase_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_status_value": {
      "x-swagger-router-controller": "case_status_value",
      "post": {
        "description": "creates a new instance of case_status_value entity",
        "operationId": "createNewCase_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_team_member/{id}": {
      "x-swagger-router-controller": "case_team_member",
      "get": {
        "description": "Returns case_team_member instances by id",
        "operationId": "findCase_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_team_member instance",
        "operationId": "updateCase_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_team_member instance",
        "operationId": "deleteCase_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_team_member": {
      "x-swagger-router-controller": "case_team_member",
      "post": {
        "description": "creates a new instance of case_team_member entity",
        "operationId": "createNewCase_team_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_team_member_role/{id}": {
      "x-swagger-router-controller": "case_team_member_role",
      "get": {
        "description": "Returns case_team_member_role instances by id",
        "operationId": "findCase_team_member_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member_role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an case_team_member_role instance",
        "operationId": "updateCase_team_member_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member_role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an case_team_member_role instance",
        "operationId": "deleteCase_team_member_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the case_team_member_role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/case_team_member_role": {
      "x-swagger-router-controller": "case_team_member_role",
      "post": {
        "description": "creates a new instance of case_team_member_role entity",
        "operationId": "createNewCase_team_member_role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team/{id}": {
      "x-swagger-router-controller": "predefined_case_team",
      "get": {
        "description": "Returns predefined_case_team instances by id",
        "operationId": "findPredefined_case_teamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an predefined_case_team instance",
        "operationId": "updatePredefined_case_teamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an predefined_case_team instance",
        "operationId": "deletePredefined_case_teamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team": {
      "x-swagger-router-controller": "predefined_case_team",
      "post": {
        "description": "creates a new instance of predefined_case_team entity",
        "operationId": "createNewPredefined_case_team",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team_member/{id}": {
      "x-swagger-router-controller": "predefined_case_team_member",
      "get": {
        "description": "Returns predefined_case_team_member instances by id",
        "operationId": "findPredefined_case_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an predefined_case_team_member instance",
        "operationId": "updatePredefined_case_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an predefined_case_team_member instance",
        "operationId": "deletePredefined_case_team_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team_member": {
      "x-swagger-router-controller": "predefined_case_team_member",
      "post": {
        "description": "creates a new instance of predefined_case_team_member entity",
        "operationId": "createNewPredefined_case_team_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team_record/{id}": {
      "x-swagger-router-controller": "predefined_case_team_record",
      "get": {
        "description": "Returns predefined_case_team_record instances by id",
        "operationId": "findPredefined_case_team_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_record to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an predefined_case_team_record instance",
        "operationId": "updatePredefined_case_team_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_record to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an predefined_case_team_record instance",
        "operationId": "deletePredefined_case_team_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the predefined_case_team_record to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/predefined_case_team_record": {
      "x-swagger-router-controller": "predefined_case_team_record",
      "post": {
        "description": "creates a new instance of predefined_case_team_record entity",
        "operationId": "createNewPredefined_case_team_record",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/category_data/{id}": {
      "x-swagger-router-controller": "category_data",
      "get": {
        "description": "Returns category_data instances by id",
        "operationId": "findCategory_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_data to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an category_data instance",
        "operationId": "updateCategory_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_data to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an category_data instance",
        "operationId": "deleteCategory_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_data to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/category_data": {
      "x-swagger-router-controller": "category_data",
      "post": {
        "description": "creates a new instance of category_data entity",
        "operationId": "createNewCategory_data",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/category_node/{id}": {
      "x-swagger-router-controller": "category_node",
      "get": {
        "description": "Returns category_node instances by id",
        "operationId": "findCategory_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_node to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an category_node instance",
        "operationId": "updateCategory_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_node to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an category_node instance",
        "operationId": "deleteCategory_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category_node to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/category_node": {
      "x-swagger-router-controller": "category_node",
      "post": {
        "description": "creates a new instance of category_node entity",
        "operationId": "createNewCategory_node",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_activity/{id}": {
      "x-swagger-router-controller": "chatter_activity",
      "get": {
        "description": "Returns chatter_activity instances by id",
        "operationId": "findChatter_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_activity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an chatter_activity instance",
        "operationId": "updateChatter_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_activity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an chatter_activity instance",
        "operationId": "deleteChatter_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_activity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_activity": {
      "x-swagger-router-controller": "chatter_activity",
      "post": {
        "description": "creates a new instance of chatter_activity entity",
        "operationId": "createNewChatter_activity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_extension/{id}": {
      "x-swagger-router-controller": "chatter_extension",
      "get": {
        "description": "Returns chatter_extension instances by id",
        "operationId": "findChatter_extensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an chatter_extension instance",
        "operationId": "updateChatter_extensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an chatter_extension instance",
        "operationId": "deleteChatter_extensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_extension": {
      "x-swagger-router-controller": "chatter_extension",
      "post": {
        "description": "creates a new instance of chatter_extension entity",
        "operationId": "createNewChatter_extension",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_extension_configuration/{id}": {
      "x-swagger-router-controller": "chatter_extension_configuration",
      "get": {
        "description": "Returns chatter_extension_configuration instances by id",
        "operationId": "findChatter_extension_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension_configuration to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an chatter_extension_configuration instance",
        "operationId": "updateChatter_extension_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension_configuration to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an chatter_extension_configuration instance",
        "operationId": "deleteChatter_extension_configurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_extension_configuration to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_extension_configuration": {
      "x-swagger-router-controller": "chatter_extension_configuration",
      "post": {
        "description": "creates a new instance of chatter_extension_configuration entity",
        "operationId": "createNewChatter_extension_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/client_browser/{id}": {
      "x-swagger-router-controller": "client_browser",
      "get": {
        "description": "Returns client_browser instances by id",
        "operationId": "findClient_browserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the client_browser to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an client_browser instance",
        "operationId": "updateClient_browserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the client_browser to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an client_browser instance",
        "operationId": "deleteClient_browserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the client_browser to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/client_browser": {
      "x-swagger-router-controller": "client_browser",
      "post": {
        "description": "creates a new instance of client_browser entity",
        "operationId": "createNewClient_browser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group/{id}": {
      "x-swagger-router-controller": "group",
      "get": {
        "description": "Returns group instances by id",
        "operationId": "findGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an group instance",
        "operationId": "updateGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an group instance",
        "operationId": "deleteGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group": {
      "x-swagger-router-controller": "group",
      "post": {
        "description": "creates a new instance of group entity",
        "operationId": "createNewGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_feed/{id}": {
      "x-swagger-router-controller": "group_feed",
      "get": {
        "description": "Returns group_feed instances by id",
        "operationId": "findGroup_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an group_feed instance",
        "operationId": "updateGroup_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an group_feed instance",
        "operationId": "deleteGroup_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_feed": {
      "x-swagger-router-controller": "group_feed",
      "post": {
        "description": "creates a new instance of group_feed entity",
        "operationId": "createNewGroup_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_member/{id}": {
      "x-swagger-router-controller": "group_member",
      "get": {
        "description": "Returns group_member instances by id",
        "operationId": "findGroup_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an group_member instance",
        "operationId": "updateGroup_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an group_member instance",
        "operationId": "deleteGroup_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_member": {
      "x-swagger-router-controller": "group_member",
      "post": {
        "description": "creates a new instance of group_member entity",
        "operationId": "createNewGroup_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_member_request/{id}": {
      "x-swagger-router-controller": "group_member_request",
      "get": {
        "description": "Returns group_member_request instances by id",
        "operationId": "findGroup_member_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member_request to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an group_member_request instance",
        "operationId": "updateGroup_member_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member_request to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an group_member_request instance",
        "operationId": "deleteGroup_member_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_member_request to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_member_request": {
      "x-swagger-router-controller": "group_member_request",
      "post": {
        "description": "creates a new instance of group_member_request entity",
        "operationId": "createNewGroup_member_request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_record/{id}": {
      "x-swagger-router-controller": "group_record",
      "get": {
        "description": "Returns group_record instances by id",
        "operationId": "findGroup_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_record to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an group_record instance",
        "operationId": "updateGroup_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_record to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an group_record instance",
        "operationId": "deleteGroup_recordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the group_record to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/group_record": {
      "x-swagger-router-controller": "group_record",
      "post": {
        "description": "creates a new instance of group_record entity",
        "operationId": "createNewGroup_record",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_invitation/{id}": {
      "x-swagger-router-controller": "chatter_invitation",
      "get": {
        "description": "Returns chatter_invitation instances by id",
        "operationId": "findChatter_invitationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_invitation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an chatter_invitation instance",
        "operationId": "updateChatter_invitationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_invitation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an chatter_invitation instance",
        "operationId": "deleteChatter_invitationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the chatter_invitation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chatter_invitation": {
      "x-swagger-router-controller": "chatter_invitation",
      "post": {
        "description": "creates a new instance of chatter_invitation entity",
        "operationId": "createNewChatter_invitation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note__attachment__google_doc_and_file/{id}": {
      "x-swagger-router-controller": "note__attachment__google_doc_and_file",
      "get": {
        "description": "Returns note__attachment__google_doc_and_file instances by id",
        "operationId": "findNote__attachment__google_doc_and_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note__attachment__google_doc_and_file to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an note__attachment__google_doc_and_file instance",
        "operationId": "updateNote__attachment__google_doc_and_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note__attachment__google_doc_and_file to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an note__attachment__google_doc_and_file instance",
        "operationId": "deleteNote__attachment__google_doc_and_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note__attachment__google_doc_and_file to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note__attachment__google_doc_and_file": {
      "x-swagger-router-controller": "note__attachment__google_doc_and_file",
      "post": {
        "description": "creates a new instance of note__attachment__google_doc_and_file entity",
        "operationId": "createNewNote__attachment__google_doc_and_file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zone/{id}": {
      "x-swagger-router-controller": "zone",
      "get": {
        "description": "Returns zone instances by id",
        "operationId": "findZoneById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the zone to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an zone instance",
        "operationId": "updateZoneById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the zone to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an zone instance",
        "operationId": "deleteZoneById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the zone to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zone": {
      "x-swagger-router-controller": "zone",
      "post": {
        "description": "creates a new instance of zone entity",
        "operationId": "createNewZone",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/conference_number/{id}": {
      "x-swagger-router-controller": "conference_number",
      "get": {
        "description": "Returns conference_number instances by id",
        "operationId": "findConference_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the conference_number to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an conference_number instance",
        "operationId": "updateConference_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the conference_number to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an conference_number instance",
        "operationId": "deleteConference_numberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the conference_number to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/conference_number": {
      "x-swagger-router-controller": "conference_number",
      "post": {
        "description": "creates a new instance of conference_number entity",
        "operationId": "createNewConference_number",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/connected_app/{id}": {
      "x-swagger-router-controller": "connected_app",
      "get": {
        "description": "Returns connected_app instances by id",
        "operationId": "findConnected_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the connected_app to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an connected_app instance",
        "operationId": "updateConnected_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the connected_app to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an connected_app instance",
        "operationId": "deleteConnected_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the connected_app to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/connected_app": {
      "x-swagger-router-controller": "connected_app",
      "post": {
        "description": "creates a new instance of connected_app entity",
        "operationId": "createNewConnected_app",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact/{id}": {
      "x-swagger-router-controller": "contact",
      "get": {
        "description": "Returns contact instances by id",
        "operationId": "findContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact instance",
        "operationId": "updateContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact instance",
        "operationId": "deleteContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact": {
      "x-swagger-router-controller": "contact",
      "post": {
        "description": "creates a new instance of contact entity",
        "operationId": "createNewContact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_change_event/{id}": {
      "x-swagger-router-controller": "contact_change_event",
      "get": {
        "description": "Returns contact_change_event instances by id",
        "operationId": "findContact_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact_change_event instance",
        "operationId": "updateContact_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact_change_event instance",
        "operationId": "deleteContact_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_change_event": {
      "x-swagger-router-controller": "contact_change_event",
      "post": {
        "description": "creates a new instance of contact_change_event entity",
        "operationId": "createNewContact_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_clean_info/{id}": {
      "x-swagger-router-controller": "contact_clean_info",
      "get": {
        "description": "Returns contact_clean_info instances by id",
        "operationId": "findContact_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_clean_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact_clean_info instance",
        "operationId": "updateContact_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_clean_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact_clean_info instance",
        "operationId": "deleteContact_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_clean_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_clean_info": {
      "x-swagger-router-controller": "contact_clean_info",
      "post": {
        "description": "creates a new instance of contact_clean_info entity",
        "operationId": "createNewContact_clean_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_feed/{id}": {
      "x-swagger-router-controller": "contact_feed",
      "get": {
        "description": "Returns contact_feed instances by id",
        "operationId": "findContact_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact_feed instance",
        "operationId": "updateContact_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact_feed instance",
        "operationId": "deleteContact_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_feed": {
      "x-swagger-router-controller": "contact_feed",
      "post": {
        "description": "creates a new instance of contact_feed entity",
        "operationId": "createNewContact_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_history/{id}": {
      "x-swagger-router-controller": "contact_history",
      "get": {
        "description": "Returns contact_history instances by id",
        "operationId": "findContact_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact_history instance",
        "operationId": "updateContact_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact_history instance",
        "operationId": "deleteContact_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_history": {
      "x-swagger-router-controller": "contact_history",
      "post": {
        "description": "creates a new instance of contact_history entity",
        "operationId": "createNewContact_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_share/{id}": {
      "x-swagger-router-controller": "contact_share",
      "get": {
        "description": "Returns contact_share instances by id",
        "operationId": "findContact_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contact_share instance",
        "operationId": "updateContact_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contact_share instance",
        "operationId": "deleteContact_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contact_share": {
      "x-swagger-router-controller": "contact_share",
      "post": {
        "description": "creates a new instance of contact_share entity",
        "operationId": "createNewContact_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_file/{id}": {
      "x-swagger-router-controller": "asset_file",
      "get": {
        "description": "Returns asset_file instances by id",
        "operationId": "findAsset_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_file to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an asset_file instance",
        "operationId": "updateAsset_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_file to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an asset_file instance",
        "operationId": "deleteAsset_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the asset_file to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/asset_file": {
      "x-swagger-router-controller": "asset_file",
      "post": {
        "description": "creates a new instance of asset_file entity",
        "operationId": "createNewAsset_file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_body/{id}": {
      "x-swagger-router-controller": "content_body",
      "get": {
        "description": "Returns content_body instances by id",
        "operationId": "findContent_bodyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_body to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_body instance",
        "operationId": "updateContent_bodyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_body to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_body instance",
        "operationId": "deleteContent_bodyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_body to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_body": {
      "x-swagger-router-controller": "content_body",
      "post": {
        "description": "creates a new instance of content_body entity",
        "operationId": "createNewContent_body",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_delivery/{id}": {
      "x-swagger-router-controller": "content_delivery",
      "get": {
        "description": "Returns content_delivery instances by id",
        "operationId": "findContent_deliveryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_delivery instance",
        "operationId": "updateContent_deliveryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_delivery instance",
        "operationId": "deleteContent_deliveryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_delivery": {
      "x-swagger-router-controller": "content_delivery",
      "post": {
        "description": "creates a new instance of content_delivery entity",
        "operationId": "createNewContent_delivery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_delivery_view/{id}": {
      "x-swagger-router-controller": "content_delivery_view",
      "get": {
        "description": "Returns content_delivery_view instances by id",
        "operationId": "findContent_delivery_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery_view to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_delivery_view instance",
        "operationId": "updateContent_delivery_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery_view to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_delivery_view instance",
        "operationId": "deleteContent_delivery_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_delivery_view to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_delivery_view": {
      "x-swagger-router-controller": "content_delivery_view",
      "post": {
        "description": "creates a new instance of content_delivery_view entity",
        "operationId": "createNewContent_delivery_view",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document/{id}": {
      "x-swagger-router-controller": "content_document",
      "get": {
        "description": "Returns content_document instances by id",
        "operationId": "findContent_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_document instance",
        "operationId": "updateContent_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_document instance",
        "operationId": "deleteContent_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document": {
      "x-swagger-router-controller": "content_document",
      "post": {
        "description": "creates a new instance of content_document entity",
        "operationId": "createNewContent_document",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contentdocument_feed/{id}": {
      "x-swagger-router-controller": "contentdocument_feed",
      "get": {
        "description": "Returns contentdocument_feed instances by id",
        "operationId": "findContentdocument_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contentdocument_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contentdocument_feed instance",
        "operationId": "updateContentdocument_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contentdocument_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contentdocument_feed instance",
        "operationId": "deleteContentdocument_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contentdocument_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contentdocument_feed": {
      "x-swagger-router-controller": "contentdocument_feed",
      "post": {
        "description": "creates a new instance of contentdocument_feed entity",
        "operationId": "createNewContentdocument_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_history/{id}": {
      "x-swagger-router-controller": "content_document_history",
      "get": {
        "description": "Returns content_document_history instances by id",
        "operationId": "findContent_document_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_document_history instance",
        "operationId": "updateContent_document_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_document_history instance",
        "operationId": "deleteContent_document_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_history": {
      "x-swagger-router-controller": "content_document_history",
      "post": {
        "description": "creates a new instance of content_document_history entity",
        "operationId": "createNewContent_document_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_link/{id}": {
      "x-swagger-router-controller": "content_document_link",
      "get": {
        "description": "Returns content_document_link instances by id",
        "operationId": "findContent_document_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_link to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_document_link instance",
        "operationId": "updateContent_document_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_link to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_document_link instance",
        "operationId": "deleteContent_document_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_link to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_link": {
      "x-swagger-router-controller": "content_document_link",
      "post": {
        "description": "creates a new instance of content_document_link entity",
        "operationId": "createNewContent_document_link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_subscription/{id}": {
      "x-swagger-router-controller": "content_document_subscription",
      "get": {
        "description": "Returns content_document_subscription instances by id",
        "operationId": "findContent_document_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_document_subscription instance",
        "operationId": "updateContent_document_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_document_subscription instance",
        "operationId": "deleteContent_document_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_document_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_document_subscription": {
      "x-swagger-router-controller": "content_document_subscription",
      "post": {
        "description": "creates a new instance of content_document_subscription entity",
        "operationId": "createNewContent_document_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder/{id}": {
      "x-swagger-router-controller": "content_folder",
      "get": {
        "description": "Returns content_folder instances by id",
        "operationId": "findContent_folderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_folder instance",
        "operationId": "updateContent_folderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_folder instance",
        "operationId": "deleteContent_folderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder": {
      "x-swagger-router-controller": "content_folder",
      "post": {
        "description": "creates a new instance of content_folder entity",
        "operationId": "createNewContent_folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_item/{id}": {
      "x-swagger-router-controller": "content_folder_item",
      "get": {
        "description": "Returns content_folder_item instances by id",
        "operationId": "findContent_folder_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_folder_item instance",
        "operationId": "updateContent_folder_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_folder_item instance",
        "operationId": "deleteContent_folder_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_item": {
      "x-swagger-router-controller": "content_folder_item",
      "post": {
        "description": "creates a new instance of content_folder_item entity",
        "operationId": "createNewContent_folder_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_link/{id}": {
      "x-swagger-router-controller": "content_folder_link",
      "get": {
        "description": "Returns content_folder_link instances by id",
        "operationId": "findContent_folder_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_link to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_folder_link instance",
        "operationId": "updateContent_folder_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_link to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_folder_link instance",
        "operationId": "deleteContent_folder_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_link to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_link": {
      "x-swagger-router-controller": "content_folder_link",
      "post": {
        "description": "creates a new instance of content_folder_link entity",
        "operationId": "createNewContent_folder_link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_member/{id}": {
      "x-swagger-router-controller": "content_folder_member",
      "get": {
        "description": "Returns content_folder_member instances by id",
        "operationId": "findContent_folder_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_folder_member instance",
        "operationId": "updateContent_folder_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_folder_member instance",
        "operationId": "deleteContent_folder_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_folder_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_folder_member": {
      "x-swagger-router-controller": "content_folder_member",
      "post": {
        "description": "creates a new instance of content_folder_member entity",
        "operationId": "createNewContent_folder_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_notification/{id}": {
      "x-swagger-router-controller": "content_notification",
      "get": {
        "description": "Returns content_notification instances by id",
        "operationId": "findContent_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_notification to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_notification instance",
        "operationId": "updateContent_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_notification to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_notification instance",
        "operationId": "deleteContent_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_notification to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_notification": {
      "x-swagger-router-controller": "content_notification",
      "post": {
        "description": "creates a new instance of content_notification entity",
        "operationId": "createNewContent_notification",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_tag_subscription/{id}": {
      "x-swagger-router-controller": "content_tag_subscription",
      "get": {
        "description": "Returns content_tag_subscription instances by id",
        "operationId": "findContent_tag_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_tag_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_tag_subscription instance",
        "operationId": "updateContent_tag_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_tag_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_tag_subscription instance",
        "operationId": "deleteContent_tag_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_tag_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_tag_subscription": {
      "x-swagger-router-controller": "content_tag_subscription",
      "post": {
        "description": "creates a new instance of content_tag_subscription entity",
        "operationId": "createNewContent_tag_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_user_subscription/{id}": {
      "x-swagger-router-controller": "content_user_subscription",
      "get": {
        "description": "Returns content_user_subscription instances by id",
        "operationId": "findContent_user_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_user_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_user_subscription instance",
        "operationId": "updateContent_user_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_user_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_user_subscription instance",
        "operationId": "deleteContent_user_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_user_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_user_subscription": {
      "x-swagger-router-controller": "content_user_subscription",
      "post": {
        "description": "creates a new instance of content_user_subscription entity",
        "operationId": "createNewContent_user_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version/{id}": {
      "x-swagger-router-controller": "content_version",
      "get": {
        "description": "Returns content_version instances by id",
        "operationId": "findContent_versionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_version instance",
        "operationId": "updateContent_versionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_version instance",
        "operationId": "deleteContent_versionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version": {
      "x-swagger-router-controller": "content_version",
      "post": {
        "description": "creates a new instance of content_version entity",
        "operationId": "createNewContent_version",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_comment/{id}": {
      "x-swagger-router-controller": "content_version_comment",
      "get": {
        "description": "Returns content_version_comment instances by id",
        "operationId": "findContent_version_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_comment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_version_comment instance",
        "operationId": "updateContent_version_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_comment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_version_comment instance",
        "operationId": "deleteContent_version_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_comment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_comment": {
      "x-swagger-router-controller": "content_version_comment",
      "post": {
        "description": "creates a new instance of content_version_comment entity",
        "operationId": "createNewContent_version_comment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_history/{id}": {
      "x-swagger-router-controller": "content_version_history",
      "get": {
        "description": "Returns content_version_history instances by id",
        "operationId": "findContent_version_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_version_history instance",
        "operationId": "updateContent_version_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_version_history instance",
        "operationId": "deleteContent_version_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_history": {
      "x-swagger-router-controller": "content_version_history",
      "post": {
        "description": "creates a new instance of content_version_history entity",
        "operationId": "createNewContent_version_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_rating/{id}": {
      "x-swagger-router-controller": "content_version_rating",
      "get": {
        "description": "Returns content_version_rating instances by id",
        "operationId": "findContent_version_ratingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_rating to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_version_rating instance",
        "operationId": "updateContent_version_ratingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_rating to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_version_rating instance",
        "operationId": "deleteContent_version_ratingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_version_rating to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_version_rating": {
      "x-swagger-router-controller": "content_version_rating",
      "post": {
        "description": "creates a new instance of content_version_rating entity",
        "operationId": "createNewContent_version_rating",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library/{id}": {
      "x-swagger-router-controller": "library",
      "get": {
        "description": "Returns library instances by id",
        "operationId": "findLibraryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an library instance",
        "operationId": "updateLibraryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an library instance",
        "operationId": "deleteLibraryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library": {
      "x-swagger-router-controller": "library",
      "post": {
        "description": "creates a new instance of library entity",
        "operationId": "createNewLibrary",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_document/{id}": {
      "x-swagger-router-controller": "library_document",
      "get": {
        "description": "Returns library_document instances by id",
        "operationId": "findLibrary_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_document to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an library_document instance",
        "operationId": "updateLibrary_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_document to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an library_document instance",
        "operationId": "deleteLibrary_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_document to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_document": {
      "x-swagger-router-controller": "library_document",
      "post": {
        "description": "creates a new instance of library_document entity",
        "operationId": "createNewLibrary_document",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_member/{id}": {
      "x-swagger-router-controller": "library_member",
      "get": {
        "description": "Returns library_member instances by id",
        "operationId": "findLibrary_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an library_member instance",
        "operationId": "updateLibrary_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an library_member instance",
        "operationId": "deleteLibrary_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_member": {
      "x-swagger-router-controller": "library_member",
      "post": {
        "description": "creates a new instance of library_member entity",
        "operationId": "createNewLibrary_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_permission/{id}": {
      "x-swagger-router-controller": "library_permission",
      "get": {
        "description": "Returns library_permission instances by id",
        "operationId": "findLibrary_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_permission to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an library_permission instance",
        "operationId": "updateLibrary_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_permission to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an library_permission instance",
        "operationId": "deleteLibrary_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the library_permission to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/library_permission": {
      "x-swagger-router-controller": "library_permission",
      "post": {
        "description": "creates a new instance of library_permission entity",
        "operationId": "createNewLibrary_permission",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_workspace_subscription/{id}": {
      "x-swagger-router-controller": "content_workspace_subscription",
      "get": {
        "description": "Returns content_workspace_subscription instances by id",
        "operationId": "findContent_workspace_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_workspace_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_workspace_subscription instance",
        "operationId": "updateContent_workspace_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_workspace_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_workspace_subscription instance",
        "operationId": "deleteContent_workspace_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_workspace_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_workspace_subscription": {
      "x-swagger-router-controller": "content_workspace_subscription",
      "post": {
        "description": "creates a new instance of content_workspace_subscription entity",
        "operationId": "createNewContent_workspace_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract/{id}": {
      "x-swagger-router-controller": "contract",
      "get": {
        "description": "Returns contract instances by id",
        "operationId": "findContractById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contract instance",
        "operationId": "updateContractById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contract instance",
        "operationId": "deleteContractById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract": {
      "x-swagger-router-controller": "contract",
      "post": {
        "description": "creates a new instance of contract entity",
        "operationId": "createNewContract",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_contact_role/{id}": {
      "x-swagger-router-controller": "contract_contact_role",
      "get": {
        "description": "Returns contract_contact_role instances by id",
        "operationId": "findContract_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_contact_role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contract_contact_role instance",
        "operationId": "updateContract_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_contact_role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contract_contact_role instance",
        "operationId": "deleteContract_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_contact_role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_contact_role": {
      "x-swagger-router-controller": "contract_contact_role",
      "post": {
        "description": "creates a new instance of contract_contact_role entity",
        "operationId": "createNewContract_contact_role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_feed/{id}": {
      "x-swagger-router-controller": "contract_feed",
      "get": {
        "description": "Returns contract_feed instances by id",
        "operationId": "findContract_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contract_feed instance",
        "operationId": "updateContract_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contract_feed instance",
        "operationId": "deleteContract_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_feed": {
      "x-swagger-router-controller": "contract_feed",
      "post": {
        "description": "creates a new instance of contract_feed entity",
        "operationId": "createNewContract_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_history/{id}": {
      "x-swagger-router-controller": "contract_history",
      "get": {
        "description": "Returns contract_history instances by id",
        "operationId": "findContract_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contract_history instance",
        "operationId": "updateContract_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contract_history instance",
        "operationId": "deleteContract_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_history": {
      "x-swagger-router-controller": "contract_history",
      "post": {
        "description": "creates a new instance of contract_history entity",
        "operationId": "createNewContract_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_status_value/{id}": {
      "x-swagger-router-controller": "contract_status_value",
      "get": {
        "description": "Returns contract_status_value instances by id",
        "operationId": "findContract_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an contract_status_value instance",
        "operationId": "updateContract_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an contract_status_value instance",
        "operationId": "deleteContract_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contract_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contract_status_value": {
      "x-swagger-router-controller": "contract_status_value",
      "post": {
        "description": "creates a new instance of contract_status_value entity",
        "operationId": "createNewContract_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cors_whitelist_origin/{id}": {
      "x-swagger-router-controller": "cors_whitelist_origin",
      "get": {
        "description": "Returns cors_whitelist_origin instances by id",
        "operationId": "findCors_whitelist_originById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cors_whitelist_origin to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an cors_whitelist_origin instance",
        "operationId": "updateCors_whitelist_originById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cors_whitelist_origin to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an cors_whitelist_origin instance",
        "operationId": "deleteCors_whitelist_originById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cors_whitelist_origin to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cors_whitelist_origin": {
      "x-swagger-router-controller": "cors_whitelist_origin",
      "post": {
        "description": "creates a new instance of cors_whitelist_origin entity",
        "operationId": "createNewCors_whitelist_origin",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cron_job/{id}": {
      "x-swagger-router-controller": "cron_job",
      "get": {
        "description": "Returns cron_job instances by id",
        "operationId": "findCron_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cron_job to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an cron_job instance",
        "operationId": "updateCron_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cron_job to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an cron_job instance",
        "operationId": "deleteCron_jobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the cron_job to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cron_job": {
      "x-swagger-router-controller": "cron_job",
      "post": {
        "description": "creates a new instance of cron_job entity",
        "operationId": "createNewCron_job",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/scheduled_jobs/{id}": {
      "x-swagger-router-controller": "scheduled_jobs",
      "get": {
        "description": "Returns scheduled_jobs instances by id",
        "operationId": "findScheduled_jobsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the scheduled_jobs to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an scheduled_jobs instance",
        "operationId": "updateScheduled_jobsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the scheduled_jobs to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an scheduled_jobs instance",
        "operationId": "deleteScheduled_jobsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the scheduled_jobs to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/scheduled_jobs": {
      "x-swagger-router-controller": "scheduled_jobs",
      "post": {
        "description": "creates a new instance of scheduled_jobs entity",
        "operationId": "createNewScheduled_jobs",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_security_policy_trusted_site/{id}": {
      "x-swagger-router-controller": "content_security_policy_trusted_site",
      "get": {
        "description": "Returns content_security_policy_trusted_site instances by id",
        "operationId": "findContent_security_policy_trusted_siteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_security_policy_trusted_site to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an content_security_policy_trusted_site instance",
        "operationId": "updateContent_security_policy_trusted_siteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_security_policy_trusted_site to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an content_security_policy_trusted_site instance",
        "operationId": "deleteContent_security_policy_trusted_siteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content_security_policy_trusted_site to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/content_security_policy_trusted_site": {
      "x-swagger-router-controller": "content_security_policy_trusted_site",
      "post": {
        "description": "creates a new instance of content_security_policy_trusted_site entity",
        "operationId": "createNewContent_security_policy_trusted_site",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_brand/{id}": {
      "x-swagger-router-controller": "custom_brand",
      "get": {
        "description": "Returns custom_brand instances by id",
        "operationId": "findCustom_brandById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_brand instance",
        "operationId": "updateCustom_brandById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_brand instance",
        "operationId": "deleteCustom_brandById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_brand": {
      "x-swagger-router-controller": "custom_brand",
      "post": {
        "description": "creates a new instance of custom_brand entity",
        "operationId": "createNewCustom_brand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_brand_asset/{id}": {
      "x-swagger-router-controller": "custom_brand_asset",
      "get": {
        "description": "Returns custom_brand_asset instances by id",
        "operationId": "findCustom_brand_assetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand_asset to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_brand_asset instance",
        "operationId": "updateCustom_brand_assetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand_asset to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_brand_asset instance",
        "operationId": "deleteCustom_brand_assetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_brand_asset to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_brand_asset": {
      "x-swagger-router-controller": "custom_brand_asset",
      "post": {
        "description": "creates a new instance of custom_brand_asset entity",
        "operationId": "createNewCustom_brand_asset",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_object_usage_by_user_license_metric/{id}": {
      "x-swagger-router-controller": "custom_object_usage_by_user_license_metric",
      "get": {
        "description": "Returns custom_object_usage_by_user_license_metric instances by id",
        "operationId": "findCustom_object_usage_by_user_license_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_object_usage_by_user_license_metric to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_object_usage_by_user_license_metric instance",
        "operationId": "updateCustom_object_usage_by_user_license_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_object_usage_by_user_license_metric to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_object_usage_by_user_license_metric instance",
        "operationId": "deleteCustom_object_usage_by_user_license_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_object_usage_by_user_license_metric to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_object_usage_by_user_license_metric": {
      "x-swagger-router-controller": "custom_object_usage_by_user_license_metric",
      "post": {
        "description": "creates a new instance of custom_object_usage_by_user_license_metric entity",
        "operationId": "createNewCustom_object_usage_by_user_license_metric",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_permission/{id}": {
      "x-swagger-router-controller": "custom_permission",
      "get": {
        "description": "Returns custom_permission instances by id",
        "operationId": "findCustom_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_permission instance",
        "operationId": "updateCustom_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_permission instance",
        "operationId": "deleteCustom_permissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_permission": {
      "x-swagger-router-controller": "custom_permission",
      "post": {
        "description": "creates a new instance of custom_permission entity",
        "operationId": "createNewCustom_permission",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_permission_dependency/{id}": {
      "x-swagger-router-controller": "custom_permission_dependency",
      "get": {
        "description": "Returns custom_permission_dependency instances by id",
        "operationId": "findCustom_permission_dependencyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission_dependency to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_permission_dependency instance",
        "operationId": "updateCustom_permission_dependencyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission_dependency to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_permission_dependency instance",
        "operationId": "deleteCustom_permission_dependencyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_permission_dependency to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_permission_dependency": {
      "x-swagger-router-controller": "custom_permission_dependency",
      "post": {
        "description": "creates a new instance of custom_permission_dependency entity",
        "operationId": "createNewCustom_permission_dependency",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/d&b_company/{id}": {
      "x-swagger-router-controller": "d&b_company",
      "get": {
        "description": "Returns d&b_company instances by id",
        "operationId": "findD&b_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the d&b_company to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an d&b_company instance",
        "operationId": "updateD&b_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the d&b_company to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an d&b_company instance",
        "operationId": "deleteD&b_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the d&b_company to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/d&b_company": {
      "x-swagger-router-controller": "d&b_company",
      "post": {
        "description": "creates a new instance of d&b_company entity",
        "operationId": "createNewD&b_company",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard/{id}": {
      "x-swagger-router-controller": "dashboard",
      "get": {
        "description": "Returns dashboard instances by id",
        "operationId": "findDashboardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dashboard instance",
        "operationId": "updateDashboardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dashboard instance",
        "operationId": "deleteDashboardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard": {
      "x-swagger-router-controller": "dashboard",
      "post": {
        "description": "creates a new instance of dashboard entity",
        "operationId": "createNewDashboard",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_component/{id}": {
      "x-swagger-router-controller": "dashboard_component",
      "get": {
        "description": "Returns dashboard_component instances by id",
        "operationId": "findDashboard_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dashboard_component instance",
        "operationId": "updateDashboard_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dashboard_component instance",
        "operationId": "deleteDashboard_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_component": {
      "x-swagger-router-controller": "dashboard_component",
      "post": {
        "description": "creates a new instance of dashboard_component entity",
        "operationId": "createNewDashboard_component",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_component_feed/{id}": {
      "x-swagger-router-controller": "dashboard_component_feed",
      "get": {
        "description": "Returns dashboard_component_feed instances by id",
        "operationId": "findDashboard_component_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dashboard_component_feed instance",
        "operationId": "updateDashboard_component_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dashboard_component_feed instance",
        "operationId": "deleteDashboard_component_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_component_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_component_feed": {
      "x-swagger-router-controller": "dashboard_component_feed",
      "post": {
        "description": "creates a new instance of dashboard_component_feed entity",
        "operationId": "createNewDashboard_component_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_feed/{id}": {
      "x-swagger-router-controller": "dashboard_feed",
      "get": {
        "description": "Returns dashboard_feed instances by id",
        "operationId": "findDashboard_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dashboard_feed instance",
        "operationId": "updateDashboard_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dashboard_feed instance",
        "operationId": "deleteDashboard_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dashboard_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dashboard_feed": {
      "x-swagger-router-controller": "dashboard_feed",
      "post": {
        "description": "creates a new instance of dashboard_feed entity",
        "operationId": "createNewDashboard_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_field_metric/{id}": {
      "x-swagger-router-controller": "data_assessment_field_metric",
      "get": {
        "description": "Returns data_assessment_field_metric instances by id",
        "operationId": "findData_assessment_field_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_metric to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_assessment_field_metric instance",
        "operationId": "updateData_assessment_field_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_metric to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_assessment_field_metric instance",
        "operationId": "deleteData_assessment_field_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_metric to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_field_metric": {
      "x-swagger-router-controller": "data_assessment_field_metric",
      "post": {
        "description": "creates a new instance of data_assessment_field_metric entity",
        "operationId": "createNewData_assessment_field_metric",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_metric/{id}": {
      "x-swagger-router-controller": "data_assessment_metric",
      "get": {
        "description": "Returns data_assessment_metric instances by id",
        "operationId": "findData_assessment_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_metric to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_assessment_metric instance",
        "operationId": "updateData_assessment_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_metric to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_assessment_metric instance",
        "operationId": "deleteData_assessment_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_metric to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_metric": {
      "x-swagger-router-controller": "data_assessment_metric",
      "post": {
        "description": "creates a new instance of data_assessment_metric entity",
        "operationId": "createNewData_assessment_metric",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_field_value_metric/{id}": {
      "x-swagger-router-controller": "data_assessment_field_value_metric",
      "get": {
        "description": "Returns data_assessment_field_value_metric instances by id",
        "operationId": "findData_assessment_field_value_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_value_metric to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_assessment_field_value_metric instance",
        "operationId": "updateData_assessment_field_value_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_value_metric to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_assessment_field_value_metric instance",
        "operationId": "deleteData_assessment_field_value_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_assessment_field_value_metric to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_assessment_field_value_metric": {
      "x-swagger-router-controller": "data_assessment_field_value_metric",
      "post": {
        "description": "creates a new instance of data_assessment_field_value_metric entity",
        "operationId": "createNewData_assessment_field_value_metric",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_statistics/{id}": {
      "x-swagger-router-controller": "data_statistics",
      "get": {
        "description": "Returns data_statistics instances by id",
        "operationId": "findData_statisticsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_statistics to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_statistics instance",
        "operationId": "updateData_statisticsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_statistics to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_statistics instance",
        "operationId": "deleteData_statisticsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_statistics to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_statistics": {
      "x-swagger-router-controller": "data_statistics",
      "post": {
        "description": "creates a new instance of data_statistics entity",
        "operationId": "createNewData_statistics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_type/{id}": {
      "x-swagger-router-controller": "data_type",
      "get": {
        "description": "Returns data_type instances by id",
        "operationId": "findData_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_type to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_type instance",
        "operationId": "updateData_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_type to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_type instance",
        "operationId": "deleteData_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_type to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_type": {
      "x-swagger-router-controller": "data_type",
      "post": {
        "description": "creates a new instance of data_type entity",
        "operationId": "createNewData_type",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_address/{id}": {
      "x-swagger-router-controller": "data_com_address",
      "get": {
        "description": "Returns data_com_address instances by id",
        "operationId": "findData_com_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_address to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_com_address instance",
        "operationId": "updateData_com_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_address to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_com_address instance",
        "operationId": "deleteData_com_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_address to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_address": {
      "x-swagger-router-controller": "data_com_address",
      "post": {
        "description": "creates a new instance of data_com_address entity",
        "operationId": "createNewData_com_address",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_company/{id}": {
      "x-swagger-router-controller": "data_com_company",
      "get": {
        "description": "Returns data_com_company instances by id",
        "operationId": "findData_com_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_company to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_com_company instance",
        "operationId": "updateData_com_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_company to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_com_company instance",
        "operationId": "deleteData_com_companyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_company to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_company": {
      "x-swagger-router-controller": "data_com_company",
      "post": {
        "description": "creates a new instance of data_com_company entity",
        "operationId": "createNewData_com_company",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_contact/{id}": {
      "x-swagger-router-controller": "data_com_contact",
      "get": {
        "description": "Returns data_com_contact instances by id",
        "operationId": "findData_com_contactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_contact to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_com_contact instance",
        "operationId": "updateData_com_contactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_contact to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_com_contact instance",
        "operationId": "deleteData_com_contactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_contact to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_contact": {
      "x-swagger-router-controller": "data_com_contact",
      "post": {
        "description": "creates a new instance of data_com_contact entity",
        "operationId": "createNewData_com_contact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_owned_entity/{id}": {
      "x-swagger-router-controller": "data_com_owned_entity",
      "get": {
        "description": "Returns data_com_owned_entity instances by id",
        "operationId": "findData_com_owned_entityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_owned_entity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_com_owned_entity instance",
        "operationId": "updateData_com_owned_entityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_owned_entity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_com_owned_entity instance",
        "operationId": "deleteData_com_owned_entityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_owned_entity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_owned_entity": {
      "x-swagger-router-controller": "data_com_owned_entity",
      "post": {
        "description": "creates a new instance of data_com_owned_entity entity",
        "operationId": "createNewData_com_owned_entity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_usage/{id}": {
      "x-swagger-router-controller": "data_com_usage",
      "get": {
        "description": "Returns data_com_usage instances by id",
        "operationId": "findData_com_usageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_usage to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an data_com_usage instance",
        "operationId": "updateData_com_usageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_usage to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an data_com_usage instance",
        "operationId": "deleteData_com_usageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data_com_usage to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/data_com_usage": {
      "x-swagger-router-controller": "data_com_usage",
      "post": {
        "description": "creates a new instance of data_com_usage entity",
        "operationId": "createNewData_com_usage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export/{id}": {
      "x-swagger-router-controller": "dataset_export",
      "get": {
        "description": "Returns dataset_export instances by id",
        "operationId": "findDataset_exportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dataset_export instance",
        "operationId": "updateDataset_exportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dataset_export instance",
        "operationId": "deleteDataset_exportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export": {
      "x-swagger-router-controller": "dataset_export",
      "post": {
        "description": "creates a new instance of dataset_export entity",
        "operationId": "createNewDataset_export",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export_event/{id}": {
      "x-swagger-router-controller": "dataset_export_event",
      "get": {
        "description": "Returns dataset_export_event instances by id",
        "operationId": "findDataset_export_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dataset_export_event instance",
        "operationId": "updateDataset_export_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dataset_export_event instance",
        "operationId": "deleteDataset_export_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export_event": {
      "x-swagger-router-controller": "dataset_export_event",
      "post": {
        "description": "creates a new instance of dataset_export_event entity",
        "operationId": "createNewDataset_export_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export_part/{id}": {
      "x-swagger-router-controller": "dataset_export_part",
      "get": {
        "description": "Returns dataset_export_part instances by id",
        "operationId": "findDataset_export_partById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_part to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an dataset_export_part instance",
        "operationId": "updateDataset_export_partById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_part to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an dataset_export_part instance",
        "operationId": "deleteDataset_export_partById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dataset_export_part to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/dataset_export_part": {
      "x-swagger-router-controller": "dataset_export_part",
      "post": {
        "description": "creates a new instance of dataset_export_part entity",
        "operationId": "createNewDataset_export_part",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/declined_event_relation/{id}": {
      "x-swagger-router-controller": "declined_event_relation",
      "get": {
        "description": "Returns declined_event_relation instances by id",
        "operationId": "findDeclined_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the declined_event_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an declined_event_relation instance",
        "operationId": "updateDeclined_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the declined_event_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an declined_event_relation instance",
        "operationId": "deleteDeclined_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the declined_event_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/declined_event_relation": {
      "x-swagger-router-controller": "declined_event_relation",
      "post": {
        "description": "creates a new instance of declined_event_relation entity",
        "operationId": "createNewDeclined_event_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/document/{id}": {
      "x-swagger-router-controller": "document",
      "get": {
        "description": "Returns document instances by id",
        "operationId": "findDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an document instance",
        "operationId": "updateDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an document instance",
        "operationId": "deleteDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/document": {
      "x-swagger-router-controller": "document",
      "post": {
        "description": "creates a new instance of document entity",
        "operationId": "createNewDocument",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/document_entity_map/{id}": {
      "x-swagger-router-controller": "document_entity_map",
      "get": {
        "description": "Returns document_entity_map instances by id",
        "operationId": "findDocument_entity_mapById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document_entity_map to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an document_entity_map instance",
        "operationId": "updateDocument_entity_mapById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document_entity_map to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an document_entity_map instance",
        "operationId": "deleteDocument_entity_mapById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the document_entity_map to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/document_entity_map": {
      "x-swagger-router-controller": "document_entity_map",
      "post": {
        "description": "creates a new instance of document_entity_map entity",
        "operationId": "createNewDocument_entity_map",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/domain/{id}": {
      "x-swagger-router-controller": "domain",
      "get": {
        "description": "Returns domain instances by id",
        "operationId": "findDomainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the domain to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an domain instance",
        "operationId": "updateDomainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the domain to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an domain instance",
        "operationId": "deleteDomainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the domain to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/domain": {
      "x-swagger-router-controller": "domain",
      "post": {
        "description": "creates a new instance of domain entity",
        "operationId": "createNewDomain",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_url/{id}": {
      "x-swagger-router-controller": "custom_url",
      "get": {
        "description": "Returns custom_url instances by id",
        "operationId": "findCustom_urlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_url to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_url instance",
        "operationId": "updateCustom_urlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_url to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_url instance",
        "operationId": "deleteCustom_urlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_url to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_url": {
      "x-swagger-router-controller": "custom_url",
      "post": {
        "description": "creates a new instance of custom_url entity",
        "operationId": "createNewCustom_url",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_record_item/{id}": {
      "x-swagger-router-controller": "duplicate_record_item",
      "get": {
        "description": "Returns duplicate_record_item instances by id",
        "operationId": "findDuplicate_record_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an duplicate_record_item instance",
        "operationId": "updateDuplicate_record_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an duplicate_record_item instance",
        "operationId": "deleteDuplicate_record_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_record_item": {
      "x-swagger-router-controller": "duplicate_record_item",
      "post": {
        "description": "creates a new instance of duplicate_record_item entity",
        "operationId": "createNewDuplicate_record_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_record_set/{id}": {
      "x-swagger-router-controller": "duplicate_record_set",
      "get": {
        "description": "Returns duplicate_record_set instances by id",
        "operationId": "findDuplicate_record_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_set to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an duplicate_record_set instance",
        "operationId": "updateDuplicate_record_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_set to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an duplicate_record_set instance",
        "operationId": "deleteDuplicate_record_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_record_set to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_record_set": {
      "x-swagger-router-controller": "duplicate_record_set",
      "post": {
        "description": "creates a new instance of duplicate_record_set entity",
        "operationId": "createNewDuplicate_record_set",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_rule/{id}": {
      "x-swagger-router-controller": "duplicate_rule",
      "get": {
        "description": "Returns duplicate_rule instances by id",
        "operationId": "findDuplicate_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_rule to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an duplicate_rule instance",
        "operationId": "updateDuplicate_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_rule to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an duplicate_rule instance",
        "operationId": "deleteDuplicate_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the duplicate_rule to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/duplicate_rule": {
      "x-swagger-router-controller": "duplicate_rule",
      "post": {
        "description": "creates a new instance of duplicate_rule entity",
        "operationId": "createNewDuplicate_rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/emailcapture/{id}": {
      "x-swagger-router-controller": "emailcapture",
      "get": {
        "description": "Returns emailcapture instances by id",
        "operationId": "findEmailcaptureById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the emailcapture to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an emailcapture instance",
        "operationId": "updateEmailcaptureById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the emailcapture to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an emailcapture instance",
        "operationId": "deleteEmailcaptureById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the emailcapture to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/emailcapture": {
      "x-swagger-router-controller": "emailcapture",
      "post": {
        "description": "creates a new instance of emailcapture entity",
        "operationId": "createNewEmailcapture",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_domain_key/{id}": {
      "x-swagger-router-controller": "email_domain_key",
      "get": {
        "description": "Returns email_domain_key instances by id",
        "operationId": "findEmail_domain_keyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_domain_key to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_domain_key instance",
        "operationId": "updateEmail_domain_keyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_domain_key to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_domain_key instance",
        "operationId": "deleteEmail_domain_keyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_domain_key to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_domain_key": {
      "x-swagger-router-controller": "email_domain_key",
      "post": {
        "description": "creates a new instance of email_domain_key entity",
        "operationId": "createNewEmail_domain_key",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_message/{id}": {
      "x-swagger-router-controller": "email_message",
      "get": {
        "description": "Returns email_message instances by id",
        "operationId": "findEmail_messageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_message instance",
        "operationId": "updateEmail_messageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_message instance",
        "operationId": "deleteEmail_messageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_message": {
      "x-swagger-router-controller": "email_message",
      "post": {
        "description": "creates a new instance of email_message entity",
        "operationId": "createNewEmail_message",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_message_relation/{id}": {
      "x-swagger-router-controller": "email_message_relation",
      "get": {
        "description": "Returns email_message_relation instances by id",
        "operationId": "findEmail_message_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_message_relation instance",
        "operationId": "updateEmail_message_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_message_relation instance",
        "operationId": "deleteEmail_message_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_message_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_message_relation": {
      "x-swagger-router-controller": "email_message_relation",
      "post": {
        "description": "creates a new instance of email_message_relation entity",
        "operationId": "createNewEmail_message_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_services_address/{id}": {
      "x-swagger-router-controller": "email_services_address",
      "get": {
        "description": "Returns email_services_address instances by id",
        "operationId": "findEmail_services_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_services_address to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_services_address instance",
        "operationId": "updateEmail_services_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_services_address to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_services_address instance",
        "operationId": "deleteEmail_services_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_services_address to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_services_address": {
      "x-swagger-router-controller": "email_services_address",
      "post": {
        "description": "creates a new instance of email_services_address entity",
        "operationId": "createNewEmail_services_address",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_service/{id}": {
      "x-swagger-router-controller": "email_service",
      "get": {
        "description": "Returns email_service instances by id",
        "operationId": "findEmail_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_service to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_service instance",
        "operationId": "updateEmail_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_service to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_service instance",
        "operationId": "deleteEmail_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_service to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_service": {
      "x-swagger-router-controller": "email_service",
      "post": {
        "description": "creates a new instance of email_service entity",
        "operationId": "createNewEmail_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_status/{id}": {
      "x-swagger-router-controller": "email_status",
      "get": {
        "description": "Returns email_status instances by id",
        "operationId": "findEmail_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_status to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_status instance",
        "operationId": "updateEmail_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_status to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_status instance",
        "operationId": "deleteEmail_statusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_status to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_status": {
      "x-swagger-router-controller": "email_status",
      "post": {
        "description": "creates a new instance of email_status entity",
        "operationId": "createNewEmail_status",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_template/{id}": {
      "x-swagger-router-controller": "email_template",
      "get": {
        "description": "Returns email_template instances by id",
        "operationId": "findEmail_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_template to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an email_template instance",
        "operationId": "updateEmail_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_template to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an email_template instance",
        "operationId": "deleteEmail_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the email_template to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/email_template": {
      "x-swagger-router-controller": "email_template",
      "post": {
        "description": "creates a new instance of email_template entity",
        "operationId": "createNewEmail_template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/embedded_service/{id}": {
      "x-swagger-router-controller": "embedded_service",
      "get": {
        "description": "Returns embedded_service instances by id",
        "operationId": "findEmbedded_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the embedded_service to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an embedded_service instance",
        "operationId": "updateEmbedded_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the embedded_service to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an embedded_service instance",
        "operationId": "deleteEmbedded_serviceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the embedded_service to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/embedded_service": {
      "x-swagger-router-controller": "embedded_service",
      "post": {
        "description": "creates a new instance of embedded_service entity",
        "operationId": "createNewEmbedded_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_definition/{id}": {
      "x-swagger-router-controller": "entity_definition",
      "get": {
        "description": "Returns entity_definition instances by id",
        "operationId": "findEntity_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_definition to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an entity_definition instance",
        "operationId": "updateEntity_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_definition to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an entity_definition instance",
        "operationId": "deleteEntity_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_definition to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_definition": {
      "x-swagger-router-controller": "entity_definition",
      "post": {
        "description": "creates a new instance of entity_definition entity",
        "operationId": "createNewEntity_definition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_particle/{id}": {
      "x-swagger-router-controller": "entity_particle",
      "get": {
        "description": "Returns entity_particle instances by id",
        "operationId": "findEntity_particleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_particle to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an entity_particle instance",
        "operationId": "updateEntity_particleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_particle to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an entity_particle instance",
        "operationId": "deleteEntity_particleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_particle to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_particle": {
      "x-swagger-router-controller": "entity_particle",
      "post": {
        "description": "creates a new instance of entity_particle entity",
        "operationId": "createNewEntity_particle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_subscription/{id}": {
      "x-swagger-router-controller": "entity_subscription",
      "get": {
        "description": "Returns entity_subscription instances by id",
        "operationId": "findEntity_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an entity_subscription instance",
        "operationId": "updateEntity_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an entity_subscription instance",
        "operationId": "deleteEntity_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entity_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/entity_subscription": {
      "x-swagger-router-controller": "entity_subscription",
      "post": {
        "description": "creates a new instance of entity_subscription entity",
        "operationId": "createNewEntity_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event/{id}": {
      "x-swagger-router-controller": "event",
      "get": {
        "description": "Returns event instances by id",
        "operationId": "findEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event instance",
        "operationId": "updateEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event instance",
        "operationId": "deleteEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event": {
      "x-swagger-router-controller": "event",
      "post": {
        "description": "creates a new instance of event entity",
        "operationId": "createNewEvent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_event_subscription/{id}": {
      "x-swagger-router-controller": "platform_event_subscription",
      "get": {
        "description": "Returns platform_event_subscription instances by id",
        "operationId": "findPlatform_event_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_event_subscription to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an platform_event_subscription instance",
        "operationId": "updatePlatform_event_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_event_subscription to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an platform_event_subscription instance",
        "operationId": "deletePlatform_event_subscriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_event_subscription to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_event_subscription": {
      "x-swagger-router-controller": "platform_event_subscription",
      "post": {
        "description": "creates a new instance of platform_event_subscription entity",
        "operationId": "createNewPlatform_event_subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_change_event/{id}": {
      "x-swagger-router-controller": "event_change_event",
      "get": {
        "description": "Returns event_change_event instances by id",
        "operationId": "findEvent_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event_change_event instance",
        "operationId": "updateEvent_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event_change_event instance",
        "operationId": "deleteEvent_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_change_event": {
      "x-swagger-router-controller": "event_change_event",
      "post": {
        "description": "creates a new instance of event_change_event entity",
        "operationId": "createNewEvent_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_feed/{id}": {
      "x-swagger-router-controller": "event_feed",
      "get": {
        "description": "Returns event_feed instances by id",
        "operationId": "findEvent_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event_feed instance",
        "operationId": "updateEvent_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event_feed instance",
        "operationId": "deleteEvent_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_feed": {
      "x-swagger-router-controller": "event_feed",
      "post": {
        "description": "creates a new instance of event_feed entity",
        "operationId": "createNewEvent_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_log_file/{id}": {
      "x-swagger-router-controller": "event_log_file",
      "get": {
        "description": "Returns event_log_file instances by id",
        "operationId": "findEvent_log_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_log_file to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event_log_file instance",
        "operationId": "updateEvent_log_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_log_file to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event_log_file instance",
        "operationId": "deleteEvent_log_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_log_file to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_log_file": {
      "x-swagger-router-controller": "event_log_file",
      "post": {
        "description": "creates a new instance of event_log_file entity",
        "operationId": "createNewEvent_log_file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_relation/{id}": {
      "x-swagger-router-controller": "event_relation",
      "get": {
        "description": "Returns event_relation instances by id",
        "operationId": "findEvent_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event_relation instance",
        "operationId": "updateEvent_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event_relation instance",
        "operationId": "deleteEvent_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_relation": {
      "x-swagger-router-controller": "event_relation",
      "post": {
        "description": "creates a new instance of event_relation entity",
        "operationId": "createNewEvent_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_relation_change_event/{id}": {
      "x-swagger-router-controller": "event_relation_change_event",
      "get": {
        "description": "Returns event_relation_change_event instances by id",
        "operationId": "findEvent_relation_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an event_relation_change_event instance",
        "operationId": "updateEvent_relation_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an event_relation_change_event instance",
        "operationId": "deleteEvent_relation_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event_relation_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/event_relation_change_event": {
      "x-swagger-router-controller": "event_relation_change_event",
      "post": {
        "description": "creates a new instance of event_relation_change_event entity",
        "operationId": "createNewEvent_relation_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_data_source/{id}": {
      "x-swagger-router-controller": "external_data_source",
      "get": {
        "description": "Returns external_data_source instances by id",
        "operationId": "findExternal_data_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_source to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an external_data_source instance",
        "operationId": "updateExternal_data_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_source to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an external_data_source instance",
        "operationId": "deleteExternal_data_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_source to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_data_source": {
      "x-swagger-router-controller": "external_data_source",
      "post": {
        "description": "creates a new instance of external_data_source entity",
        "operationId": "createNewExternal_data_source",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_data_user_authentication/{id}": {
      "x-swagger-router-controller": "external_data_user_authentication",
      "get": {
        "description": "Returns external_data_user_authentication instances by id",
        "operationId": "findExternal_data_user_authenticationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_user_authentication to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an external_data_user_authentication instance",
        "operationId": "updateExternal_data_user_authenticationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_user_authentication to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an external_data_user_authentication instance",
        "operationId": "deleteExternal_data_user_authenticationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_data_user_authentication to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_data_user_authentication": {
      "x-swagger-router-controller": "external_data_user_authentication",
      "post": {
        "description": "creates a new instance of external_data_user_authentication entity",
        "operationId": "createNewExternal_data_user_authentication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event/{id}": {
      "x-swagger-router-controller": "external_event",
      "get": {
        "description": "Returns external_event instances by id",
        "operationId": "findExternal_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an external_event instance",
        "operationId": "updateExternal_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an external_event instance",
        "operationId": "deleteExternal_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event": {
      "x-swagger-router-controller": "external_event",
      "post": {
        "description": "creates a new instance of external_event entity",
        "operationId": "createNewExternal_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event_mapping/{id}": {
      "x-swagger-router-controller": "external_event_mapping",
      "get": {
        "description": "Returns external_event_mapping instances by id",
        "operationId": "findExternal_event_mappingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an external_event_mapping instance",
        "operationId": "updateExternal_event_mappingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an external_event_mapping instance",
        "operationId": "deleteExternal_event_mappingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event_mapping": {
      "x-swagger-router-controller": "external_event_mapping",
      "post": {
        "description": "creates a new instance of external_event_mapping entity",
        "operationId": "createNewExternal_event_mapping",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event_mapping_share/{id}": {
      "x-swagger-router-controller": "external_event_mapping_share",
      "get": {
        "description": "Returns external_event_mapping_share instances by id",
        "operationId": "findExternal_event_mapping_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an external_event_mapping_share instance",
        "operationId": "updateExternal_event_mapping_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an external_event_mapping_share instance",
        "operationId": "deleteExternal_event_mapping_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the external_event_mapping_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external_event_mapping_share": {
      "x-swagger-router-controller": "external_event_mapping_share",
      "post": {
        "description": "creates a new instance of external_event_mapping_share entity",
        "operationId": "createNewExternal_event_mapping_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_attachment/{id}": {
      "x-swagger-router-controller": "feed_attachment",
      "get": {
        "description": "Returns feed_attachment instances by id",
        "operationId": "findFeed_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_attachment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_attachment instance",
        "operationId": "updateFeed_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_attachment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_attachment instance",
        "operationId": "deleteFeed_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_attachment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_attachment": {
      "x-swagger-router-controller": "feed_attachment",
      "post": {
        "description": "creates a new instance of feed_attachment entity",
        "operationId": "createNewFeed_attachment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_comment/{id}": {
      "x-swagger-router-controller": "feed_comment",
      "get": {
        "description": "Returns feed_comment instances by id",
        "operationId": "findFeed_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_comment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_comment instance",
        "operationId": "updateFeed_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_comment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_comment instance",
        "operationId": "deleteFeed_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_comment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_comment": {
      "x-swagger-router-controller": "feed_comment",
      "post": {
        "description": "creates a new instance of feed_comment entity",
        "operationId": "createNewFeed_comment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_item/{id}": {
      "x-swagger-router-controller": "feed_item",
      "get": {
        "description": "Returns feed_item instances by id",
        "operationId": "findFeed_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_item instance",
        "operationId": "updateFeed_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_item instance",
        "operationId": "deleteFeed_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_item": {
      "x-swagger-router-controller": "feed_item",
      "post": {
        "description": "creates a new instance of feed_item entity",
        "operationId": "createNewFeed_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_like/{id}": {
      "x-swagger-router-controller": "feed_like",
      "get": {
        "description": "Returns feed_like instances by id",
        "operationId": "findFeed_likeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_like to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_like instance",
        "operationId": "updateFeed_likeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_like to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_like instance",
        "operationId": "deleteFeed_likeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_like to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_like": {
      "x-swagger-router-controller": "feed_like",
      "post": {
        "description": "creates a new instance of feed_like entity",
        "operationId": "createNewFeed_like",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_poll_choice/{id}": {
      "x-swagger-router-controller": "feed_poll_choice",
      "get": {
        "description": "Returns feed_poll_choice instances by id",
        "operationId": "findFeed_poll_choiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_choice to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_poll_choice instance",
        "operationId": "updateFeed_poll_choiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_choice to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_poll_choice instance",
        "operationId": "deleteFeed_poll_choiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_choice to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_poll_choice": {
      "x-swagger-router-controller": "feed_poll_choice",
      "post": {
        "description": "creates a new instance of feed_poll_choice entity",
        "operationId": "createNewFeed_poll_choice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_poll_vote/{id}": {
      "x-swagger-router-controller": "feed_poll_vote",
      "get": {
        "description": "Returns feed_poll_vote instances by id",
        "operationId": "findFeed_poll_voteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_vote to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_poll_vote instance",
        "operationId": "updateFeed_poll_voteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_vote to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_poll_vote instance",
        "operationId": "deleteFeed_poll_voteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_poll_vote to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_poll_vote": {
      "x-swagger-router-controller": "feed_poll_vote",
      "post": {
        "description": "creates a new instance of feed_poll_vote entity",
        "operationId": "createNewFeed_poll_vote",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_revision/{id}": {
      "x-swagger-router-controller": "feed_revision",
      "get": {
        "description": "Returns feed_revision instances by id",
        "operationId": "findFeed_revisionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_revision to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_revision instance",
        "operationId": "updateFeed_revisionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_revision to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_revision instance",
        "operationId": "deleteFeed_revisionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_revision to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_revision": {
      "x-swagger-router-controller": "feed_revision",
      "post": {
        "description": "creates a new instance of feed_revision entity",
        "operationId": "createNewFeed_revision",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_signal/{id}": {
      "x-swagger-router-controller": "feed_signal",
      "get": {
        "description": "Returns feed_signal instances by id",
        "operationId": "findFeed_signalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_signal to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_signal instance",
        "operationId": "updateFeed_signalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_signal to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_signal instance",
        "operationId": "deleteFeed_signalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_signal to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_signal": {
      "x-swagger-router-controller": "feed_signal",
      "post": {
        "description": "creates a new instance of feed_signal entity",
        "operationId": "createNewFeed_signal",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_tracked_change/{id}": {
      "x-swagger-router-controller": "feed_tracked_change",
      "get": {
        "description": "Returns feed_tracked_change instances by id",
        "operationId": "findFeed_tracked_changeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_tracked_change to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an feed_tracked_change instance",
        "operationId": "updateFeed_tracked_changeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_tracked_change to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an feed_tracked_change instance",
        "operationId": "deleteFeed_tracked_changeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the feed_tracked_change to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/feed_tracked_change": {
      "x-swagger-router-controller": "feed_tracked_change",
      "post": {
        "description": "creates a new instance of feed_tracked_change entity",
        "operationId": "createNewFeed_tracked_change",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/field_definition/{id}": {
      "x-swagger-router-controller": "field_definition",
      "get": {
        "description": "Returns field_definition instances by id",
        "operationId": "findField_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_definition to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an field_definition instance",
        "operationId": "updateField_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_definition to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an field_definition instance",
        "operationId": "deleteField_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_definition to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/field_definition": {
      "x-swagger-router-controller": "field_definition",
      "post": {
        "description": "creates a new instance of field_definition entity",
        "operationId": "createNewField_definition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/field_permissions/{id}": {
      "x-swagger-router-controller": "field_permissions",
      "get": {
        "description": "Returns field_permissions instances by id",
        "operationId": "findField_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_permissions to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an field_permissions instance",
        "operationId": "updateField_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_permissions to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an field_permissions instance",
        "operationId": "deleteField_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the field_permissions to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/field_permissions": {
      "x-swagger-router-controller": "field_permissions",
      "post": {
        "description": "creates a new instance of field_permissions entity",
        "operationId": "createNewField_permissions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/filesearchactivity/{id}": {
      "x-swagger-router-controller": "filesearchactivity",
      "get": {
        "description": "Returns filesearchactivity instances by id",
        "operationId": "findFilesearchactivityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filesearchactivity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an filesearchactivity instance",
        "operationId": "updateFilesearchactivityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filesearchactivity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an filesearchactivity instance",
        "operationId": "deleteFilesearchactivityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filesearchactivity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/filesearchactivity": {
      "x-swagger-router-controller": "filesearchactivity",
      "post": {
        "description": "creates a new instance of filesearchactivity entity",
        "operationId": "createNewFilesearchactivity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/fiscal_year_settings/{id}": {
      "x-swagger-router-controller": "fiscal_year_settings",
      "get": {
        "description": "Returns fiscal_year_settings instances by id",
        "operationId": "findFiscal_year_settingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the fiscal_year_settings to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an fiscal_year_settings instance",
        "operationId": "updateFiscal_year_settingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the fiscal_year_settings to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an fiscal_year_settings instance",
        "operationId": "deleteFiscal_year_settingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the fiscal_year_settings to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/fiscal_year_settings": {
      "x-swagger-router-controller": "fiscal_year_settings",
      "post": {
        "description": "creates a new instance of fiscal_year_settings entity",
        "operationId": "createNewFiscal_year_settings",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flex_queue_item/{id}": {
      "x-swagger-router-controller": "flex_queue_item",
      "get": {
        "description": "Returns flex_queue_item instances by id",
        "operationId": "findFlex_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flex_queue_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an flex_queue_item instance",
        "operationId": "updateFlex_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flex_queue_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an flex_queue_item instance",
        "operationId": "deleteFlex_queue_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flex_queue_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flex_queue_item": {
      "x-swagger-router-controller": "flex_queue_item",
      "post": {
        "description": "creates a new instance of flex_queue_item entity",
        "operationId": "createNewFlex_queue_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview/{id}": {
      "x-swagger-router-controller": "flow_interview",
      "get": {
        "description": "Returns flow_interview instances by id",
        "operationId": "findFlow_interviewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an flow_interview instance",
        "operationId": "updateFlow_interviewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an flow_interview instance",
        "operationId": "deleteFlow_interviewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview": {
      "x-swagger-router-controller": "flow_interview",
      "post": {
        "description": "creates a new instance of flow_interview entity",
        "operationId": "createNewFlow_interview",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview_share/{id}": {
      "x-swagger-router-controller": "flow_interview_share",
      "get": {
        "description": "Returns flow_interview_share instances by id",
        "operationId": "findFlow_interview_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an flow_interview_share instance",
        "operationId": "updateFlow_interview_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an flow_interview_share instance",
        "operationId": "deleteFlow_interview_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview_share": {
      "x-swagger-router-controller": "flow_interview_share",
      "post": {
        "description": "creates a new instance of flow_interview_share entity",
        "operationId": "createNewFlow_interview_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_record_relation/{id}": {
      "x-swagger-router-controller": "flow_record_relation",
      "get": {
        "description": "Returns flow_record_relation instances by id",
        "operationId": "findFlow_record_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_record_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an flow_record_relation instance",
        "operationId": "updateFlow_record_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_record_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an flow_record_relation instance",
        "operationId": "deleteFlow_record_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_record_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_record_relation": {
      "x-swagger-router-controller": "flow_record_relation",
      "post": {
        "description": "creates a new instance of flow_record_relation entity",
        "operationId": "createNewFlow_record_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview_stage_relation/{id}": {
      "x-swagger-router-controller": "flow_interview_stage_relation",
      "get": {
        "description": "Returns flow_interview_stage_relation instances by id",
        "operationId": "findFlow_interview_stage_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_stage_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an flow_interview_stage_relation instance",
        "operationId": "updateFlow_interview_stage_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_stage_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an flow_interview_stage_relation instance",
        "operationId": "deleteFlow_interview_stage_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the flow_interview_stage_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/flow_interview_stage_relation": {
      "x-swagger-router-controller": "flow_interview_stage_relation",
      "post": {
        "description": "creates a new instance of flow_interview_stage_relation entity",
        "operationId": "createNewFlow_interview_stage_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/folder/{id}": {
      "x-swagger-router-controller": "folder",
      "get": {
        "description": "Returns folder instances by id",
        "operationId": "findFolderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the folder to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an folder instance",
        "operationId": "updateFolderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the folder to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an folder instance",
        "operationId": "deleteFolderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the folder to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/folder": {
      "x-swagger-router-controller": "folder",
      "post": {
        "description": "creates a new instance of folder entity",
        "operationId": "createNewFolder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/foldered_content_document/{id}": {
      "x-swagger-router-controller": "foldered_content_document",
      "get": {
        "description": "Returns foldered_content_document instances by id",
        "operationId": "findFoldered_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the foldered_content_document to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an foldered_content_document instance",
        "operationId": "updateFoldered_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the foldered_content_document to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an foldered_content_document instance",
        "operationId": "deleteFoldered_content_documentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the foldered_content_document to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/foldered_content_document": {
      "x-swagger-router-controller": "foldered_content_document",
      "post": {
        "description": "creates a new instance of foldered_content_document entity",
        "operationId": "createNewFoldered_content_document",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/forecast_share/{id}": {
      "x-swagger-router-controller": "forecast_share",
      "get": {
        "description": "Returns forecast_share instances by id",
        "operationId": "findForecast_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the forecast_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an forecast_share instance",
        "operationId": "updateForecast_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the forecast_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an forecast_share instance",
        "operationId": "deleteForecast_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the forecast_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/forecast_share": {
      "x-swagger-router-controller": "forecast_share",
      "post": {
        "description": "creates a new instance of forecast_share entity",
        "operationId": "createNewForecast_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setting_granted_by_license/{id}": {
      "x-swagger-router-controller": "setting_granted_by_license",
      "get": {
        "description": "Returns setting_granted_by_license instances by id",
        "operationId": "findSetting_granted_by_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting_granted_by_license to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an setting_granted_by_license instance",
        "operationId": "updateSetting_granted_by_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting_granted_by_license to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an setting_granted_by_license instance",
        "operationId": "deleteSetting_granted_by_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting_granted_by_license to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setting_granted_by_license": {
      "x-swagger-router-controller": "setting_granted_by_license",
      "post": {
        "description": "creates a new instance of setting_granted_by_license entity",
        "operationId": "createNewSetting_granted_by_license",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/holiday/{id}": {
      "x-swagger-router-controller": "holiday",
      "get": {
        "description": "Returns holiday instances by id",
        "operationId": "findHolidayById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the holiday to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an holiday instance",
        "operationId": "updateHolidayById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the holiday to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an holiday instance",
        "operationId": "deleteHolidayById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the holiday to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/holiday": {
      "x-swagger-router-controller": "holiday",
      "post": {
        "description": "creates a new instance of holiday entity",
        "operationId": "createNewHoliday",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/idea/{id}": {
      "x-swagger-router-controller": "idea",
      "get": {
        "description": "Returns idea instances by id",
        "operationId": "findIdeaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an idea instance",
        "operationId": "updateIdeaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an idea instance",
        "operationId": "deleteIdeaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/idea": {
      "x-swagger-router-controller": "idea",
      "post": {
        "description": "creates a new instance of idea entity",
        "operationId": "createNewIdea",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/idea_comment/{id}": {
      "x-swagger-router-controller": "idea_comment",
      "get": {
        "description": "Returns idea_comment instances by id",
        "operationId": "findIdea_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea_comment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an idea_comment instance",
        "operationId": "updateIdea_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea_comment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an idea_comment instance",
        "operationId": "deleteIdea_commentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the idea_comment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/idea_comment": {
      "x-swagger-router-controller": "idea_comment",
      "post": {
        "description": "creates a new instance of idea_comment entity",
        "operationId": "createNewIdea_comment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/identity_provider_event_log/{id}": {
      "x-swagger-router-controller": "identity_provider_event_log",
      "get": {
        "description": "Returns identity_provider_event_log instances by id",
        "operationId": "findIdentity_provider_event_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_provider_event_log to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an identity_provider_event_log instance",
        "operationId": "updateIdentity_provider_event_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_provider_event_log to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an identity_provider_event_log instance",
        "operationId": "deleteIdentity_provider_event_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_provider_event_log to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/identity_provider_event_log": {
      "x-swagger-router-controller": "identity_provider_event_log",
      "post": {
        "description": "creates a new instance of identity_provider_event_log entity",
        "operationId": "createNewIdentity_provider_event_log",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual/{id}": {
      "x-swagger-router-controller": "individual",
      "get": {
        "description": "Returns individual instances by id",
        "operationId": "findIndividualById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an individual instance",
        "operationId": "updateIndividualById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an individual instance",
        "operationId": "deleteIndividualById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual": {
      "x-swagger-router-controller": "individual",
      "post": {
        "description": "creates a new instance of individual entity",
        "operationId": "createNewIndividual",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual_history/{id}": {
      "x-swagger-router-controller": "individual_history",
      "get": {
        "description": "Returns individual_history instances by id",
        "operationId": "findIndividual_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an individual_history instance",
        "operationId": "updateIndividual_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an individual_history instance",
        "operationId": "deleteIndividual_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual_history": {
      "x-swagger-router-controller": "individual_history",
      "post": {
        "description": "creates a new instance of individual_history entity",
        "operationId": "createNewIndividual_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual_share/{id}": {
      "x-swagger-router-controller": "individual_share",
      "get": {
        "description": "Returns individual_share instances by id",
        "operationId": "findIndividual_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an individual_share instance",
        "operationId": "updateIndividual_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an individual_share instance",
        "operationId": "deleteIndividual_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the individual_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/individual_share": {
      "x-swagger-router-controller": "individual_share",
      "post": {
        "description": "creates a new instance of individual_share entity",
        "operationId": "createNewIndividual_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/installed_mobile_app/{id}": {
      "x-swagger-router-controller": "installed_mobile_app",
      "get": {
        "description": "Returns installed_mobile_app instances by id",
        "operationId": "findInstalled_mobile_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the installed_mobile_app to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an installed_mobile_app instance",
        "operationId": "updateInstalled_mobile_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the installed_mobile_app to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an installed_mobile_app instance",
        "operationId": "deleteInstalled_mobile_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the installed_mobile_app to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/installed_mobile_app": {
      "x-swagger-router-controller": "installed_mobile_app",
      "post": {
        "description": "creates a new instance of installed_mobile_app entity",
        "operationId": "createNewInstalled_mobile_app",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/knowledgeable_user/{id}": {
      "x-swagger-router-controller": "knowledgeable_user",
      "get": {
        "description": "Returns knowledgeable_user instances by id",
        "operationId": "findKnowledgeable_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the knowledgeable_user to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an knowledgeable_user instance",
        "operationId": "updateKnowledgeable_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the knowledgeable_user to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an knowledgeable_user instance",
        "operationId": "deleteKnowledgeable_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the knowledgeable_user to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/knowledgeable_user": {
      "x-swagger-router-controller": "knowledgeable_user",
      "post": {
        "description": "creates a new instance of knowledgeable_user entity",
        "operationId": "createNewKnowledgeable_user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead/{id}": {
      "x-swagger-router-controller": "lead",
      "get": {
        "description": "Returns lead instances by id",
        "operationId": "findLeadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead instance",
        "operationId": "updateLeadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead instance",
        "operationId": "deleteLeadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead": {
      "x-swagger-router-controller": "lead",
      "post": {
        "description": "creates a new instance of lead entity",
        "operationId": "createNewLead",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_change_event/{id}": {
      "x-swagger-router-controller": "lead_change_event",
      "get": {
        "description": "Returns lead_change_event instances by id",
        "operationId": "findLead_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_change_event instance",
        "operationId": "updateLead_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_change_event instance",
        "operationId": "deleteLead_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_change_event": {
      "x-swagger-router-controller": "lead_change_event",
      "post": {
        "description": "creates a new instance of lead_change_event entity",
        "operationId": "createNewLead_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_clean_info/{id}": {
      "x-swagger-router-controller": "lead_clean_info",
      "get": {
        "description": "Returns lead_clean_info instances by id",
        "operationId": "findLead_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_clean_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_clean_info instance",
        "operationId": "updateLead_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_clean_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_clean_info instance",
        "operationId": "deleteLead_clean_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_clean_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_clean_info": {
      "x-swagger-router-controller": "lead_clean_info",
      "post": {
        "description": "creates a new instance of lead_clean_info entity",
        "operationId": "createNewLead_clean_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_feed/{id}": {
      "x-swagger-router-controller": "lead_feed",
      "get": {
        "description": "Returns lead_feed instances by id",
        "operationId": "findLead_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_feed instance",
        "operationId": "updateLead_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_feed instance",
        "operationId": "deleteLead_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_feed": {
      "x-swagger-router-controller": "lead_feed",
      "post": {
        "description": "creates a new instance of lead_feed entity",
        "operationId": "createNewLead_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_history/{id}": {
      "x-swagger-router-controller": "lead_history",
      "get": {
        "description": "Returns lead_history instances by id",
        "operationId": "findLead_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_history instance",
        "operationId": "updateLead_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_history instance",
        "operationId": "deleteLead_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_history": {
      "x-swagger-router-controller": "lead_history",
      "post": {
        "description": "creates a new instance of lead_history entity",
        "operationId": "createNewLead_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_share/{id}": {
      "x-swagger-router-controller": "lead_share",
      "get": {
        "description": "Returns lead_share instances by id",
        "operationId": "findLead_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_share instance",
        "operationId": "updateLead_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_share instance",
        "operationId": "deleteLead_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_share": {
      "x-swagger-router-controller": "lead_share",
      "post": {
        "description": "creates a new instance of lead_share entity",
        "operationId": "createNewLead_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_status_value/{id}": {
      "x-swagger-router-controller": "lead_status_value",
      "get": {
        "description": "Returns lead_status_value instances by id",
        "operationId": "findLead_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lead_status_value instance",
        "operationId": "updateLead_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lead_status_value instance",
        "operationId": "deleteLead_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lead_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lead_status_value": {
      "x-swagger-router-controller": "lead_status_value",
      "post": {
        "description": "creates a new instance of lead_status_value entity",
        "operationId": "createNewLead_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightning_experience_theme/{id}": {
      "x-swagger-router-controller": "lightning_experience_theme",
      "get": {
        "description": "Returns lightning_experience_theme instances by id",
        "operationId": "findLightning_experience_themeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_experience_theme to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightning_experience_theme instance",
        "operationId": "updateLightning_experience_themeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_experience_theme to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightning_experience_theme instance",
        "operationId": "deleteLightning_experience_themeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightning_experience_theme to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightning_experience_theme": {
      "x-swagger-router-controller": "lightning_experience_theme",
      "post": {
        "description": "creates a new instance of lightning_experience_theme entity",
        "operationId": "createNewLightning_experience_theme",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningtogglemetrics/{id}": {
      "x-swagger-router-controller": "lightningtogglemetrics",
      "get": {
        "description": "Returns lightningtogglemetrics instances by id",
        "operationId": "findLightningtogglemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningtogglemetrics to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightningtogglemetrics instance",
        "operationId": "updateLightningtogglemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningtogglemetrics to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightningtogglemetrics instance",
        "operationId": "deleteLightningtogglemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningtogglemetrics to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningtogglemetrics": {
      "x-swagger-router-controller": "lightningtogglemetrics",
      "post": {
        "description": "creates a new instance of lightningtogglemetrics entity",
        "operationId": "createNewLightningtogglemetrics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebyapptypemetrics/{id}": {
      "x-swagger-router-controller": "lightningusagebyapptypemetrics",
      "get": {
        "description": "Returns lightningusagebyapptypemetrics instances by id",
        "operationId": "findLightningusagebyapptypemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebyapptypemetrics to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightningusagebyapptypemetrics instance",
        "operationId": "updateLightningusagebyapptypemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebyapptypemetrics to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightningusagebyapptypemetrics instance",
        "operationId": "deleteLightningusagebyapptypemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebyapptypemetrics to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebyapptypemetrics": {
      "x-swagger-router-controller": "lightningusagebyapptypemetrics",
      "post": {
        "description": "creates a new instance of lightningusagebyapptypemetrics entity",
        "operationId": "createNewLightningusagebyapptypemetrics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebybrowsermetrics/{id}": {
      "x-swagger-router-controller": "lightningusagebybrowsermetrics",
      "get": {
        "description": "Returns lightningusagebybrowsermetrics instances by id",
        "operationId": "findLightningusagebybrowsermetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebybrowsermetrics to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightningusagebybrowsermetrics instance",
        "operationId": "updateLightningusagebybrowsermetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebybrowsermetrics to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightningusagebybrowsermetrics instance",
        "operationId": "deleteLightningusagebybrowsermetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebybrowsermetrics to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebybrowsermetrics": {
      "x-swagger-router-controller": "lightningusagebybrowsermetrics",
      "post": {
        "description": "creates a new instance of lightningusagebybrowsermetrics entity",
        "operationId": "createNewLightningusagebybrowsermetrics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebypagemetrics/{id}": {
      "x-swagger-router-controller": "lightningusagebypagemetrics",
      "get": {
        "description": "Returns lightningusagebypagemetrics instances by id",
        "operationId": "findLightningusagebypagemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebypagemetrics to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lightningusagebypagemetrics instance",
        "operationId": "updateLightningusagebypagemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebypagemetrics to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lightningusagebypagemetrics instance",
        "operationId": "deleteLightningusagebypagemetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lightningusagebypagemetrics to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lightningusagebypagemetrics": {
      "x-swagger-router-controller": "lightningusagebypagemetrics",
      "post": {
        "description": "creates a new instance of lightningusagebypagemetrics entity",
        "operationId": "createNewLightningusagebypagemetrics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email/{id}": {
      "x-swagger-router-controller": "list_email",
      "get": {
        "description": "Returns list_email instances by id",
        "operationId": "findList_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_email instance",
        "operationId": "updateList_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_email instance",
        "operationId": "deleteList_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email": {
      "x-swagger-router-controller": "list_email",
      "post": {
        "description": "creates a new instance of list_email entity",
        "operationId": "createNewList_email",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_change_event/{id}": {
      "x-swagger-router-controller": "list_email_change_event",
      "get": {
        "description": "Returns list_email_change_event instances by id",
        "operationId": "findList_email_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_email_change_event instance",
        "operationId": "updateList_email_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_email_change_event instance",
        "operationId": "deleteList_email_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_change_event": {
      "x-swagger-router-controller": "list_email_change_event",
      "post": {
        "description": "creates a new instance of list_email_change_event entity",
        "operationId": "createNewList_email_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_recipient_source/{id}": {
      "x-swagger-router-controller": "list_email_recipient_source",
      "get": {
        "description": "Returns list_email_recipient_source instances by id",
        "operationId": "findList_email_recipient_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_recipient_source to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_email_recipient_source instance",
        "operationId": "updateList_email_recipient_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_recipient_source to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_email_recipient_source instance",
        "operationId": "deleteList_email_recipient_sourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_recipient_source to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_recipient_source": {
      "x-swagger-router-controller": "list_email_recipient_source",
      "post": {
        "description": "creates a new instance of list_email_recipient_source entity",
        "operationId": "createNewList_email_recipient_source",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_share/{id}": {
      "x-swagger-router-controller": "list_email_share",
      "get": {
        "description": "Returns list_email_share instances by id",
        "operationId": "findList_email_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_email_share instance",
        "operationId": "updateList_email_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_email_share instance",
        "operationId": "deleteList_email_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_email_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_email_share": {
      "x-swagger-router-controller": "list_email_share",
      "post": {
        "description": "creates a new instance of list_email_share entity",
        "operationId": "createNewList_email_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view/{id}": {
      "x-swagger-router-controller": "list_view",
      "get": {
        "description": "Returns list_view instances by id",
        "operationId": "findList_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_view instance",
        "operationId": "updateList_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_view instance",
        "operationId": "deleteList_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view": {
      "x-swagger-router-controller": "list_view",
      "post": {
        "description": "creates a new instance of list_view entity",
        "operationId": "createNewList_view",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view_chart/{id}": {
      "x-swagger-router-controller": "list_view_chart",
      "get": {
        "description": "Returns list_view_chart instances by id",
        "operationId": "findList_view_chartById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_view_chart instance",
        "operationId": "updateList_view_chartById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_view_chart instance",
        "operationId": "deleteList_view_chartById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view_chart": {
      "x-swagger-router-controller": "list_view_chart",
      "post": {
        "description": "creates a new instance of list_view_chart entity",
        "operationId": "createNewList_view_chart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view_chart_instance/{id}": {
      "x-swagger-router-controller": "list_view_chart_instance",
      "get": {
        "description": "Returns list_view_chart_instance instances by id",
        "operationId": "findList_view_chart_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart_instance to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an list_view_chart_instance instance",
        "operationId": "updateList_view_chart_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart_instance to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an list_view_chart_instance instance",
        "operationId": "deleteList_view_chart_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the list_view_chart_instance to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/list_view_chart_instance": {
      "x-swagger-router-controller": "list_view_chart_instance",
      "post": {
        "description": "creates a new instance of list_view_chart_instance entity",
        "operationId": "createNewList_view_chart_instance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/sensitive_data_rule/{id}": {
      "x-swagger-router-controller": "sensitive_data_rule",
      "get": {
        "description": "Returns sensitive_data_rule instances by id",
        "operationId": "findSensitive_data_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the sensitive_data_rule to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an sensitive_data_rule instance",
        "operationId": "updateSensitive_data_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the sensitive_data_rule to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an sensitive_data_rule instance",
        "operationId": "deleteSensitive_data_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the sensitive_data_rule to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/sensitive_data_rule": {
      "x-swagger-router-controller": "sensitive_data_rule",
      "post": {
        "description": "creates a new instance of sensitive_data_rule entity",
        "operationId": "createNewSensitive_data_rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_event/{id}": {
      "x-swagger-router-controller": "login_event",
      "get": {
        "description": "Returns login_event instances by id",
        "operationId": "findLogin_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an login_event instance",
        "operationId": "updateLogin_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an login_event instance",
        "operationId": "deleteLogin_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_event": {
      "x-swagger-router-controller": "login_event",
      "post": {
        "description": "creates a new instance of login_event entity",
        "operationId": "createNewLogin_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_geo_data/{id}": {
      "x-swagger-router-controller": "login_geo_data",
      "get": {
        "description": "Returns login_geo_data instances by id",
        "operationId": "findLogin_geo_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_geo_data to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an login_geo_data instance",
        "operationId": "updateLogin_geo_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_geo_data to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an login_geo_data instance",
        "operationId": "deleteLogin_geo_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_geo_data to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_geo_data": {
      "x-swagger-router-controller": "login_geo_data",
      "post": {
        "description": "creates a new instance of login_geo_data entity",
        "operationId": "createNewLogin_geo_data",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_history/{id}": {
      "x-swagger-router-controller": "login_history",
      "get": {
        "description": "Returns login_history instances by id",
        "operationId": "findLogin_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an login_history instance",
        "operationId": "updateLogin_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an login_history instance",
        "operationId": "deleteLogin_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_history": {
      "x-swagger-router-controller": "login_history",
      "post": {
        "description": "creates a new instance of login_history entity",
        "operationId": "createNewLogin_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_ip/{id}": {
      "x-swagger-router-controller": "login_ip",
      "get": {
        "description": "Returns login_ip instances by id",
        "operationId": "findLogin_ipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_ip to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an login_ip instance",
        "operationId": "updateLogin_ipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_ip to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an login_ip instance",
        "operationId": "deleteLogin_ipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the login_ip to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/login_ip": {
      "x-swagger-router-controller": "login_ip",
      "post": {
        "description": "creates a new instance of login_ip entity",
        "operationId": "createNewLogin_ip",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logout_event_stream/{id}": {
      "x-swagger-router-controller": "logout_event_stream",
      "get": {
        "description": "Returns logout_event_stream instances by id",
        "operationId": "findLogout_event_streamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the logout_event_stream to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an logout_event_stream instance",
        "operationId": "updateLogout_event_streamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the logout_event_stream to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an logout_event_stream instance",
        "operationId": "deleteLogout_event_streamById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the logout_event_stream to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logout_event_stream": {
      "x-swagger-router-controller": "logout_event_stream",
      "post": {
        "description": "creates a new instance of logout_event_stream entity",
        "operationId": "createNewLogout_event_stream",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lookups_from_activity/{id}": {
      "x-swagger-router-controller": "lookups_from_activity",
      "get": {
        "description": "Returns lookups_from_activity instances by id",
        "operationId": "findLookups_from_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lookups_from_activity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an lookups_from_activity instance",
        "operationId": "updateLookups_from_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lookups_from_activity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an lookups_from_activity instance",
        "operationId": "deleteLookups_from_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lookups_from_activity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/lookups_from_activity": {
      "x-swagger-router-controller": "lookups_from_activity",
      "post": {
        "description": "creates a new instance of lookups_from_activity entity",
        "operationId": "createNewLookups_from_activity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro/{id}": {
      "x-swagger-router-controller": "macro",
      "get": {
        "description": "Returns macro instances by id",
        "operationId": "findMacroById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an macro instance",
        "operationId": "updateMacroById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an macro instance",
        "operationId": "deleteMacroById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro": {
      "x-swagger-router-controller": "macro",
      "post": {
        "description": "creates a new instance of macro entity",
        "operationId": "createNewMacro",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_history/{id}": {
      "x-swagger-router-controller": "macro_history",
      "get": {
        "description": "Returns macro_history instances by id",
        "operationId": "findMacro_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an macro_history instance",
        "operationId": "updateMacro_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an macro_history instance",
        "operationId": "deleteMacro_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_history": {
      "x-swagger-router-controller": "macro_history",
      "post": {
        "description": "creates a new instance of macro_history entity",
        "operationId": "createNewMacro_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_instruction/{id}": {
      "x-swagger-router-controller": "macro_instruction",
      "get": {
        "description": "Returns macro_instruction instances by id",
        "operationId": "findMacro_instructionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_instruction to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an macro_instruction instance",
        "operationId": "updateMacro_instructionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_instruction to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an macro_instruction instance",
        "operationId": "deleteMacro_instructionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_instruction to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_instruction": {
      "x-swagger-router-controller": "macro_instruction",
      "post": {
        "description": "creates a new instance of macro_instruction entity",
        "operationId": "createNewMacro_instruction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_share/{id}": {
      "x-swagger-router-controller": "macro_share",
      "get": {
        "description": "Returns macro_share instances by id",
        "operationId": "findMacro_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an macro_share instance",
        "operationId": "updateMacro_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an macro_share instance",
        "operationId": "deleteMacro_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the macro_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/macro_share": {
      "x-swagger-router-controller": "macro_share",
      "post": {
        "description": "creates a new instance of macro_share entity",
        "operationId": "createNewMacro_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/mail_merge_template/{id}": {
      "x-swagger-router-controller": "mail_merge_template",
      "get": {
        "description": "Returns mail_merge_template instances by id",
        "operationId": "findMail_merge_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mail_merge_template to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an mail_merge_template instance",
        "operationId": "updateMail_merge_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mail_merge_template to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an mail_merge_template instance",
        "operationId": "deleteMail_merge_templateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mail_merge_template to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/mail_merge_template": {
      "x-swagger-router-controller": "mail_merge_template",
      "post": {
        "description": "creates a new instance of mail_merge_template entity",
        "operationId": "createNewMail_merge_template",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_information/{id}": {
      "x-swagger-router-controller": "matching_information",
      "get": {
        "description": "Returns matching_information instances by id",
        "operationId": "findMatching_informationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_information to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an matching_information instance",
        "operationId": "updateMatching_informationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_information to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an matching_information instance",
        "operationId": "deleteMatching_informationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_information to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_information": {
      "x-swagger-router-controller": "matching_information",
      "post": {
        "description": "creates a new instance of matching_information entity",
        "operationId": "createNewMatching_information",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_rule/{id}": {
      "x-swagger-router-controller": "matching_rule",
      "get": {
        "description": "Returns matching_rule instances by id",
        "operationId": "findMatching_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an matching_rule instance",
        "operationId": "updateMatching_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an matching_rule instance",
        "operationId": "deleteMatching_ruleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_rule": {
      "x-swagger-router-controller": "matching_rule",
      "post": {
        "description": "creates a new instance of matching_rule entity",
        "operationId": "createNewMatching_rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_rule_item/{id}": {
      "x-swagger-router-controller": "matching_rule_item",
      "get": {
        "description": "Returns matching_rule_item instances by id",
        "operationId": "findMatching_rule_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an matching_rule_item instance",
        "operationId": "updateMatching_rule_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an matching_rule_item instance",
        "operationId": "deleteMatching_rule_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the matching_rule_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/matching_rule_item": {
      "x-swagger-router-controller": "matching_rule_item",
      "post": {
        "description": "creates a new instance of matching_rule_item entity",
        "operationId": "createNewMatching_rule_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_channel/{id}": {
      "x-swagger-router-controller": "messaging_channel",
      "get": {
        "description": "Returns messaging_channel instances by id",
        "operationId": "findMessaging_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_channel to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_channel instance",
        "operationId": "updateMessaging_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_channel to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_channel instance",
        "operationId": "deleteMessaging_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_channel to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_channel": {
      "x-swagger-router-controller": "messaging_channel",
      "post": {
        "description": "creates a new instance of messaging_channel entity",
        "operationId": "createNewMessaging_channel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user/{id}": {
      "x-swagger-router-controller": "messaging_user",
      "get": {
        "description": "Returns messaging_user instances by id",
        "operationId": "findMessaging_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_user instance",
        "operationId": "updateMessaging_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_user instance",
        "operationId": "deleteMessaging_userById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user": {
      "x-swagger-router-controller": "messaging_user",
      "post": {
        "description": "creates a new instance of messaging_user entity",
        "operationId": "createNewMessaging_user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user_history/{id}": {
      "x-swagger-router-controller": "messaging_user_history",
      "get": {
        "description": "Returns messaging_user_history instances by id",
        "operationId": "findMessaging_user_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_user_history instance",
        "operationId": "updateMessaging_user_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_user_history instance",
        "operationId": "deleteMessaging_user_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user_history": {
      "x-swagger-router-controller": "messaging_user_history",
      "post": {
        "description": "creates a new instance of messaging_user_history entity",
        "operationId": "createNewMessaging_user_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user_share/{id}": {
      "x-swagger-router-controller": "messaging_user_share",
      "get": {
        "description": "Returns messaging_user_share instances by id",
        "operationId": "findMessaging_user_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_user_share instance",
        "operationId": "updateMessaging_user_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_user_share instance",
        "operationId": "deleteMessaging_user_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_user_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_user_share": {
      "x-swagger-router-controller": "messaging_user_share",
      "post": {
        "description": "creates a new instance of messaging_user_share entity",
        "operationId": "createNewMessaging_user_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_link/{id}": {
      "x-swagger-router-controller": "messaging_link",
      "get": {
        "description": "Returns messaging_link instances by id",
        "operationId": "findMessaging_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_link to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_link instance",
        "operationId": "updateMessaging_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_link to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_link instance",
        "operationId": "deleteMessaging_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_link to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_link": {
      "x-swagger-router-controller": "messaging_link",
      "post": {
        "description": "creates a new instance of messaging_link entity",
        "operationId": "createNewMessaging_link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session/{id}": {
      "x-swagger-router-controller": "messaging_session",
      "get": {
        "description": "Returns messaging_session instances by id",
        "operationId": "findMessaging_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_session instance",
        "operationId": "updateMessaging_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_session instance",
        "operationId": "deleteMessaging_sessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session": {
      "x-swagger-router-controller": "messaging_session",
      "post": {
        "description": "creates a new instance of messaging_session entity",
        "operationId": "createNewMessaging_session",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_feed/{id}": {
      "x-swagger-router-controller": "messaging_session_feed",
      "get": {
        "description": "Returns messaging_session_feed instances by id",
        "operationId": "findMessaging_session_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_session_feed instance",
        "operationId": "updateMessaging_session_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_session_feed instance",
        "operationId": "deleteMessaging_session_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_feed": {
      "x-swagger-router-controller": "messaging_session_feed",
      "post": {
        "description": "creates a new instance of messaging_session_feed entity",
        "operationId": "createNewMessaging_session_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_history/{id}": {
      "x-swagger-router-controller": "messaging_session_history",
      "get": {
        "description": "Returns messaging_session_history instances by id",
        "operationId": "findMessaging_session_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_session_history instance",
        "operationId": "updateMessaging_session_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_session_history instance",
        "operationId": "deleteMessaging_session_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_history": {
      "x-swagger-router-controller": "messaging_session_history",
      "post": {
        "description": "creates a new instance of messaging_session_history entity",
        "operationId": "createNewMessaging_session_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_share/{id}": {
      "x-swagger-router-controller": "messaging_session_share",
      "get": {
        "description": "Returns messaging_session_share instances by id",
        "operationId": "findMessaging_session_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an messaging_session_share instance",
        "operationId": "updateMessaging_session_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an messaging_session_share instance",
        "operationId": "deleteMessaging_session_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the messaging_session_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/messaging_session_share": {
      "x-swagger-router-controller": "messaging_session_share",
      "post": {
        "description": "creates a new instance of messaging_session_share entity",
        "operationId": "createNewMessaging_session_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/mobile_application_detail/{id}": {
      "x-swagger-router-controller": "mobile_application_detail",
      "get": {
        "description": "Returns mobile_application_detail instances by id",
        "operationId": "findMobile_application_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mobile_application_detail to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an mobile_application_detail instance",
        "operationId": "updateMobile_application_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mobile_application_detail to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an mobile_application_detail instance",
        "operationId": "deleteMobile_application_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mobile_application_detail to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/mobile_application_detail": {
      "x-swagger-router-controller": "mobile_application_detail",
      "post": {
        "description": "creates a new instance of mobile_application_detail entity",
        "operationId": "createNewMobile_application_detail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/name/{id}": {
      "x-swagger-router-controller": "name",
      "get": {
        "description": "Returns name instances by id",
        "operationId": "findNameById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the name to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an name instance",
        "operationId": "updateNameById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the name to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an name instance",
        "operationId": "deleteNameById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the name to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/name": {
      "x-swagger-router-controller": "name",
      "post": {
        "description": "creates a new instance of name entity",
        "operationId": "createNewName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/named_credential/{id}": {
      "x-swagger-router-controller": "named_credential",
      "get": {
        "description": "Returns named_credential instances by id",
        "operationId": "findNamed_credentialById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the named_credential to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an named_credential instance",
        "operationId": "updateNamed_credentialById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the named_credential to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an named_credential instance",
        "operationId": "deleteNamed_credentialById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the named_credential to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/named_credential": {
      "x-swagger-router-controller": "named_credential",
      "post": {
        "description": "creates a new instance of named_credential entity",
        "operationId": "createNewNamed_credential",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note/{id}": {
      "x-swagger-router-controller": "note",
      "get": {
        "description": "Returns note instances by id",
        "operationId": "findNoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an note instance",
        "operationId": "updateNoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an note instance",
        "operationId": "deleteNoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note": {
      "x-swagger-router-controller": "note",
      "post": {
        "description": "creates a new instance of note entity",
        "operationId": "createNewNote",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note_and_attachment/{id}": {
      "x-swagger-router-controller": "note_and_attachment",
      "get": {
        "description": "Returns note_and_attachment instances by id",
        "operationId": "findNote_and_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note_and_attachment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an note_and_attachment instance",
        "operationId": "updateNote_and_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note_and_attachment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an note_and_attachment instance",
        "operationId": "deleteNote_and_attachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the note_and_attachment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/note_and_attachment": {
      "x-swagger-router-controller": "note_and_attachment",
      "post": {
        "description": "creates a new instance of note_and_attachment entity",
        "operationId": "createNewNote_and_attachment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/oauth_token/{id}": {
      "x-swagger-router-controller": "oauth_token",
      "get": {
        "description": "Returns oauth_token instances by id",
        "operationId": "findOauth_tokenById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the oauth_token to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an oauth_token instance",
        "operationId": "updateOauth_tokenById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the oauth_token to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an oauth_token instance",
        "operationId": "deleteOauth_tokenById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the oauth_token to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/oauth_token": {
      "x-swagger-router-controller": "oauth_token",
      "post": {
        "description": "creates a new instance of oauth_token entity",
        "operationId": "createNewOauth_token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/object_permissions/{id}": {
      "x-swagger-router-controller": "object_permissions",
      "get": {
        "description": "Returns object_permissions instances by id",
        "operationId": "findObject_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the object_permissions to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an object_permissions instance",
        "operationId": "updateObject_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the object_permissions to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an object_permissions instance",
        "operationId": "deleteObject_permissionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the object_permissions to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/object_permissions": {
      "x-swagger-router-controller": "object_permissions",
      "post": {
        "description": "creates a new instance of object_permissions entity",
        "operationId": "createNewObject_permissions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/open_activity/{id}": {
      "x-swagger-router-controller": "open_activity",
      "get": {
        "description": "Returns open_activity instances by id",
        "operationId": "findOpen_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the open_activity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an open_activity instance",
        "operationId": "updateOpen_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the open_activity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an open_activity instance",
        "operationId": "deleteOpen_activityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the open_activity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/open_activity": {
      "x-swagger-router-controller": "open_activity",
      "post": {
        "description": "creates a new instance of open_activity entity",
        "operationId": "createNewOpen_activity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/operating_hours/{id}": {
      "x-swagger-router-controller": "operating_hours",
      "get": {
        "description": "Returns operating_hours instances by id",
        "operationId": "findOperating_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an operating_hours instance",
        "operationId": "updateOperating_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an operating_hours instance",
        "operationId": "deleteOperating_hoursById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/operating_hours": {
      "x-swagger-router-controller": "operating_hours",
      "post": {
        "description": "creates a new instance of operating_hours entity",
        "operationId": "createNewOperating_hours",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/operating_hours_feed/{id}": {
      "x-swagger-router-controller": "operating_hours_feed",
      "get": {
        "description": "Returns operating_hours_feed instances by id",
        "operationId": "findOperating_hours_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an operating_hours_feed instance",
        "operationId": "updateOperating_hours_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an operating_hours_feed instance",
        "operationId": "deleteOperating_hours_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the operating_hours_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/operating_hours_feed": {
      "x-swagger-router-controller": "operating_hours_feed",
      "post": {
        "description": "creates a new instance of operating_hours_feed entity",
        "operationId": "createNewOperating_hours_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity/{id}": {
      "x-swagger-router-controller": "opportunity",
      "get": {
        "description": "Returns opportunity instances by id",
        "operationId": "findOpportunityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity instance",
        "operationId": "updateOpportunityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity instance",
        "operationId": "deleteOpportunityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity": {
      "x-swagger-router-controller": "opportunity",
      "post": {
        "description": "creates a new instance of opportunity entity",
        "operationId": "createNewOpportunity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_change_event/{id}": {
      "x-swagger-router-controller": "opportunity_change_event",
      "get": {
        "description": "Returns opportunity_change_event instances by id",
        "operationId": "findOpportunity_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_change_event instance",
        "operationId": "updateOpportunity_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_change_event instance",
        "operationId": "deleteOpportunity_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_change_event": {
      "x-swagger-router-controller": "opportunity_change_event",
      "post": {
        "description": "creates a new instance of opportunity_change_event entity",
        "operationId": "createNewOpportunity_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity__competitor/{id}": {
      "x-swagger-router-controller": "opportunity__competitor",
      "get": {
        "description": "Returns opportunity__competitor instances by id",
        "operationId": "findOpportunity__competitorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity__competitor to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity__competitor instance",
        "operationId": "updateOpportunity__competitorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity__competitor to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity__competitor instance",
        "operationId": "deleteOpportunity__competitorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity__competitor to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity__competitor": {
      "x-swagger-router-controller": "opportunity__competitor",
      "post": {
        "description": "creates a new instance of opportunity__competitor entity",
        "operationId": "createNewOpportunity__competitor",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_contact_role/{id}": {
      "x-swagger-router-controller": "opportunity_contact_role",
      "get": {
        "description": "Returns opportunity_contact_role instances by id",
        "operationId": "findOpportunity_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_contact_role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_contact_role instance",
        "operationId": "updateOpportunity_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_contact_role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_contact_role instance",
        "operationId": "deleteOpportunity_contact_roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_contact_role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_contact_role": {
      "x-swagger-router-controller": "opportunity_contact_role",
      "post": {
        "description": "creates a new instance of opportunity_contact_role entity",
        "operationId": "createNewOpportunity_contact_role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_feed/{id}": {
      "x-swagger-router-controller": "opportunity_feed",
      "get": {
        "description": "Returns opportunity_feed instances by id",
        "operationId": "findOpportunity_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_feed instance",
        "operationId": "updateOpportunity_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_feed instance",
        "operationId": "deleteOpportunity_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_feed": {
      "x-swagger-router-controller": "opportunity_feed",
      "post": {
        "description": "creates a new instance of opportunity_feed entity",
        "operationId": "createNewOpportunity_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_field_history/{id}": {
      "x-swagger-router-controller": "opportunity_field_history",
      "get": {
        "description": "Returns opportunity_field_history instances by id",
        "operationId": "findOpportunity_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_field_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_field_history instance",
        "operationId": "updateOpportunity_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_field_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_field_history instance",
        "operationId": "deleteOpportunity_field_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_field_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_field_history": {
      "x-swagger-router-controller": "opportunity_field_history",
      "post": {
        "description": "creates a new instance of opportunity_field_history entity",
        "operationId": "createNewOpportunity_field_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_history/{id}": {
      "x-swagger-router-controller": "opportunity_history",
      "get": {
        "description": "Returns opportunity_history instances by id",
        "operationId": "findOpportunity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_history instance",
        "operationId": "updateOpportunity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_history instance",
        "operationId": "deleteOpportunity_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_history": {
      "x-swagger-router-controller": "opportunity_history",
      "post": {
        "description": "creates a new instance of opportunity_history entity",
        "operationId": "createNewOpportunity_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_product/{id}": {
      "x-swagger-router-controller": "opportunity_product",
      "get": {
        "description": "Returns opportunity_product instances by id",
        "operationId": "findOpportunity_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_product to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_product instance",
        "operationId": "updateOpportunity_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_product to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_product instance",
        "operationId": "deleteOpportunity_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_product to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_product": {
      "x-swagger-router-controller": "opportunity_product",
      "post": {
        "description": "creates a new instance of opportunity_product entity",
        "operationId": "createNewOpportunity_product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_partner/{id}": {
      "x-swagger-router-controller": "opportunity_partner",
      "get": {
        "description": "Returns opportunity_partner instances by id",
        "operationId": "findOpportunity_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_partner to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_partner instance",
        "operationId": "updateOpportunity_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_partner to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_partner instance",
        "operationId": "deleteOpportunity_partnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_partner to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_partner": {
      "x-swagger-router-controller": "opportunity_partner",
      "post": {
        "description": "creates a new instance of opportunity_partner entity",
        "operationId": "createNewOpportunity_partner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_share/{id}": {
      "x-swagger-router-controller": "opportunity_share",
      "get": {
        "description": "Returns opportunity_share instances by id",
        "operationId": "findOpportunity_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_share instance",
        "operationId": "updateOpportunity_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_share instance",
        "operationId": "deleteOpportunity_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_share": {
      "x-swagger-router-controller": "opportunity_share",
      "post": {
        "description": "creates a new instance of opportunity_share entity",
        "operationId": "createNewOpportunity_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_stage/{id}": {
      "x-swagger-router-controller": "opportunity_stage",
      "get": {
        "description": "Returns opportunity_stage instances by id",
        "operationId": "findOpportunity_stageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_stage to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an opportunity_stage instance",
        "operationId": "updateOpportunity_stageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_stage to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an opportunity_stage instance",
        "operationId": "deleteOpportunity_stageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the opportunity_stage to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/opportunity_stage": {
      "x-swagger-router-controller": "opportunity_stage",
      "post": {
        "description": "creates a new instance of opportunity_stage entity",
        "operationId": "createNewOpportunity_stage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order/{id}": {
      "x-swagger-router-controller": "order",
      "get": {
        "description": "Returns order instances by id",
        "operationId": "findOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order instance",
        "operationId": "updateOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order instance",
        "operationId": "deleteOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order": {
      "x-swagger-router-controller": "order",
      "post": {
        "description": "creates a new instance of order entity",
        "operationId": "createNewOrder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_change_event/{id}": {
      "x-swagger-router-controller": "order_change_event",
      "get": {
        "description": "Returns order_change_event instances by id",
        "operationId": "findOrder_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_change_event instance",
        "operationId": "updateOrder_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_change_event instance",
        "operationId": "deleteOrder_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_change_event": {
      "x-swagger-router-controller": "order_change_event",
      "post": {
        "description": "creates a new instance of order_change_event entity",
        "operationId": "createNewOrder_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_feed/{id}": {
      "x-swagger-router-controller": "order_feed",
      "get": {
        "description": "Returns order_feed instances by id",
        "operationId": "findOrder_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_feed instance",
        "operationId": "updateOrder_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_feed instance",
        "operationId": "deleteOrder_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_feed": {
      "x-swagger-router-controller": "order_feed",
      "post": {
        "description": "creates a new instance of order_feed entity",
        "operationId": "createNewOrder_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_history/{id}": {
      "x-swagger-router-controller": "order_history",
      "get": {
        "description": "Returns order_history instances by id",
        "operationId": "findOrder_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_history instance",
        "operationId": "updateOrder_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_history instance",
        "operationId": "deleteOrder_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_history": {
      "x-swagger-router-controller": "order_history",
      "post": {
        "description": "creates a new instance of order_history entity",
        "operationId": "createNewOrder_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product/{id}": {
      "x-swagger-router-controller": "order_product",
      "get": {
        "description": "Returns order_product instances by id",
        "operationId": "findOrder_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_product instance",
        "operationId": "updateOrder_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_product instance",
        "operationId": "deleteOrder_productById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product": {
      "x-swagger-router-controller": "order_product",
      "post": {
        "description": "creates a new instance of order_product entity",
        "operationId": "createNewOrder_product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_change_event/{id}": {
      "x-swagger-router-controller": "order_product_change_event",
      "get": {
        "description": "Returns order_product_change_event instances by id",
        "operationId": "findOrder_product_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_product_change_event instance",
        "operationId": "updateOrder_product_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_product_change_event instance",
        "operationId": "deleteOrder_product_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_change_event": {
      "x-swagger-router-controller": "order_product_change_event",
      "post": {
        "description": "creates a new instance of order_product_change_event entity",
        "operationId": "createNewOrder_product_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_feed/{id}": {
      "x-swagger-router-controller": "order_product_feed",
      "get": {
        "description": "Returns order_product_feed instances by id",
        "operationId": "findOrder_product_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_product_feed instance",
        "operationId": "updateOrder_product_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_product_feed instance",
        "operationId": "deleteOrder_product_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_feed": {
      "x-swagger-router-controller": "order_product_feed",
      "post": {
        "description": "creates a new instance of order_product_feed entity",
        "operationId": "createNewOrder_product_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_history/{id}": {
      "x-swagger-router-controller": "order_product_history",
      "get": {
        "description": "Returns order_product_history instances by id",
        "operationId": "findOrder_product_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_product_history instance",
        "operationId": "updateOrder_product_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_product_history instance",
        "operationId": "deleteOrder_product_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_product_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_product_history": {
      "x-swagger-router-controller": "order_product_history",
      "post": {
        "description": "creates a new instance of order_product_history entity",
        "operationId": "createNewOrder_product_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_share/{id}": {
      "x-swagger-router-controller": "order_share",
      "get": {
        "description": "Returns order_share instances by id",
        "operationId": "findOrder_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an order_share instance",
        "operationId": "updateOrder_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an order_share instance",
        "operationId": "deleteOrder_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/order_share": {
      "x-swagger-router-controller": "order_share",
      "post": {
        "description": "creates a new instance of order_share entity",
        "operationId": "createNewOrder_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_delete_request/{id}": {
      "x-swagger-router-controller": "org_delete_request",
      "get": {
        "description": "Returns org_delete_request instances by id",
        "operationId": "findOrg_delete_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an org_delete_request instance",
        "operationId": "updateOrg_delete_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an org_delete_request instance",
        "operationId": "deleteOrg_delete_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_delete_request": {
      "x-swagger-router-controller": "org_delete_request",
      "post": {
        "description": "creates a new instance of org_delete_request entity",
        "operationId": "createNewOrg_delete_request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_delete_request_share/{id}": {
      "x-swagger-router-controller": "org_delete_request_share",
      "get": {
        "description": "Returns org_delete_request_share instances by id",
        "operationId": "findOrg_delete_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an org_delete_request_share instance",
        "operationId": "updateOrg_delete_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an org_delete_request_share instance",
        "operationId": "deleteOrg_delete_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_delete_request_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_delete_request_share": {
      "x-swagger-router-controller": "org_delete_request_share",
      "post": {
        "description": "creates a new instance of org_delete_request_share entity",
        "operationId": "createNewOrg_delete_request_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_lifecycle_notification/{id}": {
      "x-swagger-router-controller": "org_lifecycle_notification",
      "get": {
        "description": "Returns org_lifecycle_notification instances by id",
        "operationId": "findOrg_lifecycle_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_lifecycle_notification to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an org_lifecycle_notification instance",
        "operationId": "updateOrg_lifecycle_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_lifecycle_notification to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an org_lifecycle_notification instance",
        "operationId": "deleteOrg_lifecycle_notificationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the org_lifecycle_notification to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/org_lifecycle_notification": {
      "x-swagger-router-controller": "org_lifecycle_notification",
      "post": {
        "description": "creates a new instance of org_lifecycle_notification entity",
        "operationId": "createNewOrg_lifecycle_notification",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/organization_wide_from_email_address/{id}": {
      "x-swagger-router-controller": "organization_wide_from_email_address",
      "get": {
        "description": "Returns organization_wide_from_email_address instances by id",
        "operationId": "findOrganization_wide_from_email_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization_wide_from_email_address to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an organization_wide_from_email_address instance",
        "operationId": "updateOrganization_wide_from_email_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization_wide_from_email_address to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an organization_wide_from_email_address instance",
        "operationId": "deleteOrganization_wide_from_email_addressById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization_wide_from_email_address to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/organization_wide_from_email_address": {
      "x-swagger-router-controller": "organization_wide_from_email_address",
      "post": {
        "description": "creates a new instance of organization_wide_from_email_address entity",
        "operationId": "createNewOrganization_wide_from_email_address",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/organization/{id}": {
      "x-swagger-router-controller": "organization",
      "get": {
        "description": "Returns organization instances by id",
        "operationId": "findOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an organization instance",
        "operationId": "updateOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an organization instance",
        "operationId": "deleteOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the organization to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/organization": {
      "x-swagger-router-controller": "organization",
      "post": {
        "description": "creates a new instance of organization entity",
        "operationId": "createNewOrganization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/outgoing_email/{id}": {
      "x-swagger-router-controller": "outgoing_email",
      "get": {
        "description": "Returns outgoing_email instances by id",
        "operationId": "findOutgoing_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an outgoing_email instance",
        "operationId": "updateOutgoing_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an outgoing_email instance",
        "operationId": "deleteOutgoing_emailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/outgoing_email": {
      "x-swagger-router-controller": "outgoing_email",
      "post": {
        "description": "creates a new instance of outgoing_email entity",
        "operationId": "createNewOutgoing_email",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/outgoing_email_relation/{id}": {
      "x-swagger-router-controller": "outgoing_email_relation",
      "get": {
        "description": "Returns outgoing_email_relation instances by id",
        "operationId": "findOutgoing_email_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an outgoing_email_relation instance",
        "operationId": "updateOutgoing_email_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an outgoing_email_relation instance",
        "operationId": "deleteOutgoing_email_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the outgoing_email_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/outgoing_email_relation": {
      "x-swagger-router-controller": "outgoing_email_relation",
      "post": {
        "description": "creates a new instance of outgoing_email_relation entity",
        "operationId": "createNewOutgoing_email_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_owned_file/{id}": {
      "x-swagger-router-controller": "user_owned_file",
      "get": {
        "description": "Returns user_owned_file instances by id",
        "operationId": "findUser_owned_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_owned_file to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_owned_file instance",
        "operationId": "updateUser_owned_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_owned_file to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_owned_file instance",
        "operationId": "deleteUser_owned_fileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_owned_file to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_owned_file": {
      "x-swagger-router-controller": "user_owned_file",
      "post": {
        "description": "creates a new instance of user_owned_file entity",
        "operationId": "createNewUser_owned_file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/change_owner_option_info/{id}": {
      "x-swagger-router-controller": "change_owner_option_info",
      "get": {
        "description": "Returns change_owner_option_info instances by id",
        "operationId": "findChange_owner_option_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the change_owner_option_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an change_owner_option_info instance",
        "operationId": "updateChange_owner_option_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the change_owner_option_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an change_owner_option_info instance",
        "operationId": "deleteChange_owner_option_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the change_owner_option_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/change_owner_option_info": {
      "x-swagger-router-controller": "change_owner_option_info",
      "post": {
        "description": "creates a new instance of change_owner_option_info entity",
        "operationId": "createNewChange_owner_option_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/package_license/{id}": {
      "x-swagger-router-controller": "package_license",
      "get": {
        "description": "Returns package_license instances by id",
        "operationId": "findPackage_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the package_license to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an package_license instance",
        "operationId": "updatePackage_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the package_license to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an package_license instance",
        "operationId": "deletePackage_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the package_license to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/package_license": {
      "x-swagger-router-controller": "package_license",
      "post": {
        "description": "creates a new instance of package_license entity",
        "operationId": "createNewPackage_license",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/partner/{id}": {
      "x-swagger-router-controller": "partner",
      "get": {
        "description": "Returns partner instances by id",
        "operationId": "findPartnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an partner instance",
        "operationId": "updatePartnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an partner instance",
        "operationId": "deletePartnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/partner": {
      "x-swagger-router-controller": "partner",
      "post": {
        "description": "creates a new instance of partner entity",
        "operationId": "createNewPartner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/partner_role_value/{id}": {
      "x-swagger-router-controller": "partner_role_value",
      "get": {
        "description": "Returns partner_role_value instances by id",
        "operationId": "findPartner_role_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner_role_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an partner_role_value instance",
        "operationId": "updatePartner_role_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner_role_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an partner_role_value instance",
        "operationId": "deletePartner_role_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the partner_role_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/partner_role_value": {
      "x-swagger-router-controller": "partner_role_value",
      "post": {
        "description": "creates a new instance of partner_role_value entity",
        "operationId": "createNewPartner_role_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/period/{id}": {
      "x-swagger-router-controller": "period",
      "get": {
        "description": "Returns period instances by id",
        "operationId": "findPeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the period to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an period instance",
        "operationId": "updatePeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the period to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an period instance",
        "operationId": "deletePeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the period to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/period": {
      "x-swagger-router-controller": "period",
      "post": {
        "description": "creates a new instance of period entity",
        "operationId": "createNewPeriod",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set/{id}": {
      "x-swagger-router-controller": "permission_set",
      "get": {
        "description": "Returns permission_set instances by id",
        "operationId": "findPermission_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set instance",
        "operationId": "updatePermission_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set instance",
        "operationId": "deletePermission_setById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set": {
      "x-swagger-router-controller": "permission_set",
      "post": {
        "description": "creates a new instance of permission_set entity",
        "operationId": "createNewPermission_set",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_assignment/{id}": {
      "x-swagger-router-controller": "permission_set_assignment",
      "get": {
        "description": "Returns permission_set_assignment instances by id",
        "operationId": "findPermission_set_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_assignment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set_assignment instance",
        "operationId": "updatePermission_set_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_assignment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set_assignment instance",
        "operationId": "deletePermission_set_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_assignment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_assignment": {
      "x-swagger-router-controller": "permission_set_assignment",
      "post": {
        "description": "creates a new instance of permission_set_assignment entity",
        "operationId": "createNewPermission_set_assignment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_group/{id}": {
      "x-swagger-router-controller": "permission_set_group",
      "get": {
        "description": "Returns permission_set_group instances by id",
        "operationId": "findPermission_set_groupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set_group instance",
        "operationId": "updatePermission_set_groupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set_group instance",
        "operationId": "deletePermission_set_groupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_group": {
      "x-swagger-router-controller": "permission_set_group",
      "post": {
        "description": "creates a new instance of permission_set_group entity",
        "operationId": "createNewPermission_set_group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_group_component/{id}": {
      "x-swagger-router-controller": "permission_set_group_component",
      "get": {
        "description": "Returns permission_set_group_component instances by id",
        "operationId": "findPermission_set_group_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group_component to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set_group_component instance",
        "operationId": "updatePermission_set_group_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group_component to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set_group_component instance",
        "operationId": "deletePermission_set_group_componentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_group_component to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_group_component": {
      "x-swagger-router-controller": "permission_set_group_component",
      "post": {
        "description": "creates a new instance of permission_set_group_component entity",
        "operationId": "createNewPermission_set_group_component",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_license/{id}": {
      "x-swagger-router-controller": "permission_set_license",
      "get": {
        "description": "Returns permission_set_license instances by id",
        "operationId": "findPermission_set_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set_license instance",
        "operationId": "updatePermission_set_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set_license instance",
        "operationId": "deletePermission_set_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_license": {
      "x-swagger-router-controller": "permission_set_license",
      "post": {
        "description": "creates a new instance of permission_set_license entity",
        "operationId": "createNewPermission_set_license",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_license_assignment/{id}": {
      "x-swagger-router-controller": "permission_set_license_assignment",
      "get": {
        "description": "Returns permission_set_license_assignment instances by id",
        "operationId": "findPermission_set_license_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license_assignment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an permission_set_license_assignment instance",
        "operationId": "updatePermission_set_license_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license_assignment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an permission_set_license_assignment instance",
        "operationId": "deletePermission_set_license_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the permission_set_license_assignment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/permission_set_license_assignment": {
      "x-swagger-router-controller": "permission_set_license_assignment",
      "post": {
        "description": "creates a new instance of permission_set_license_assignment entity",
        "operationId": "createNewPermission_set_license_assignment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/picklist_value_info/{id}": {
      "x-swagger-router-controller": "picklist_value_info",
      "get": {
        "description": "Returns picklist_value_info instances by id",
        "operationId": "findPicklist_value_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the picklist_value_info to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an picklist_value_info instance",
        "operationId": "updatePicklist_value_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the picklist_value_info to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an picklist_value_info instance",
        "operationId": "deletePicklist_value_infoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the picklist_value_info to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/picklist_value_info": {
      "x-swagger-router-controller": "picklist_value_info",
      "post": {
        "description": "creates a new instance of picklist_value_info entity",
        "operationId": "createNewPicklist_value_info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_action/{id}": {
      "x-swagger-router-controller": "platform_action",
      "get": {
        "description": "Returns platform_action instances by id",
        "operationId": "findPlatform_actionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_action to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an platform_action instance",
        "operationId": "updatePlatform_actionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_action to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an platform_action instance",
        "operationId": "deletePlatform_actionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_action to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_action": {
      "x-swagger-router-controller": "platform_action",
      "post": {
        "description": "creates a new instance of platform_action entity",
        "operationId": "createNewPlatform_action",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_cache_partition/{id}": {
      "x-swagger-router-controller": "platform_cache_partition",
      "get": {
        "description": "Returns platform_cache_partition instances by id",
        "operationId": "findPlatform_cache_partitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an platform_cache_partition instance",
        "operationId": "updatePlatform_cache_partitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an platform_cache_partition instance",
        "operationId": "deletePlatform_cache_partitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_cache_partition": {
      "x-swagger-router-controller": "platform_cache_partition",
      "post": {
        "description": "creates a new instance of platform_cache_partition entity",
        "operationId": "createNewPlatform_cache_partition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_cache_partition_type/{id}": {
      "x-swagger-router-controller": "platform_cache_partition_type",
      "get": {
        "description": "Returns platform_cache_partition_type instances by id",
        "operationId": "findPlatform_cache_partition_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition_type to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an platform_cache_partition_type instance",
        "operationId": "updatePlatform_cache_partition_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition_type to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an platform_cache_partition_type instance",
        "operationId": "deletePlatform_cache_partition_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the platform_cache_partition_type to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/platform_cache_partition_type": {
      "x-swagger-router-controller": "platform_cache_partition_type",
      "post": {
        "description": "creates a new instance of platform_cache_partition_type entity",
        "operationId": "createNewPlatform_cache_partition_type",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book/{id}": {
      "x-swagger-router-controller": "price_book",
      "get": {
        "description": "Returns price_book instances by id",
        "operationId": "findPrice_bookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an price_book instance",
        "operationId": "updatePrice_bookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an price_book instance",
        "operationId": "deletePrice_bookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book": {
      "x-swagger-router-controller": "price_book",
      "post": {
        "description": "creates a new instance of price_book entity",
        "operationId": "createNewPrice_book",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book_history/{id}": {
      "x-swagger-router-controller": "price_book_history",
      "get": {
        "description": "Returns price_book_history instances by id",
        "operationId": "findPrice_book_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an price_book_history instance",
        "operationId": "updatePrice_book_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an price_book_history instance",
        "operationId": "deletePrice_book_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book_history": {
      "x-swagger-router-controller": "price_book_history",
      "post": {
        "description": "creates a new instance of price_book_history entity",
        "operationId": "createNewPrice_book_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book_entry/{id}": {
      "x-swagger-router-controller": "price_book_entry",
      "get": {
        "description": "Returns price_book_entry instances by id",
        "operationId": "findPrice_book_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_entry to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an price_book_entry instance",
        "operationId": "updatePrice_book_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_entry to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an price_book_entry instance",
        "operationId": "deletePrice_book_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the price_book_entry to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/price_book_entry": {
      "x-swagger-router-controller": "price_book_entry",
      "post": {
        "description": "creates a new instance of price_book_entry entity",
        "operationId": "createNewPrice_book_entry",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_definition/{id}": {
      "x-swagger-router-controller": "process_definition",
      "get": {
        "description": "Returns process_definition instances by id",
        "operationId": "findProcess_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_definition to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_definition instance",
        "operationId": "updateProcess_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_definition to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_definition instance",
        "operationId": "deleteProcess_definitionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_definition to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_definition": {
      "x-swagger-router-controller": "process_definition",
      "post": {
        "description": "creates a new instance of process_definition entity",
        "operationId": "createNewProcess_definition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance/{id}": {
      "x-swagger-router-controller": "process_instance",
      "get": {
        "description": "Returns process_instance instances by id",
        "operationId": "findProcess_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_instance instance",
        "operationId": "updateProcess_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_instance instance",
        "operationId": "deleteProcess_instanceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance": {
      "x-swagger-router-controller": "process_instance",
      "post": {
        "description": "creates a new instance of process_instance entity",
        "operationId": "createNewProcess_instance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_history/{id}": {
      "x-swagger-router-controller": "process_instance_history",
      "get": {
        "description": "Returns process_instance_history instances by id",
        "operationId": "findProcess_instance_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_instance_history instance",
        "operationId": "updateProcess_instance_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_instance_history instance",
        "operationId": "deleteProcess_instance_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_history": {
      "x-swagger-router-controller": "process_instance_history",
      "post": {
        "description": "creates a new instance of process_instance_history entity",
        "operationId": "createNewProcess_instance_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_node/{id}": {
      "x-swagger-router-controller": "process_instance_node",
      "get": {
        "description": "Returns process_instance_node instances by id",
        "operationId": "findProcess_instance_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_node to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_instance_node instance",
        "operationId": "updateProcess_instance_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_node to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_instance_node instance",
        "operationId": "deleteProcess_instance_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_node to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_node": {
      "x-swagger-router-controller": "process_instance_node",
      "post": {
        "description": "creates a new instance of process_instance_node entity",
        "operationId": "createNewProcess_instance_node",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_step/{id}": {
      "x-swagger-router-controller": "process_instance_step",
      "get": {
        "description": "Returns process_instance_step instances by id",
        "operationId": "findProcess_instance_stepById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_step to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_instance_step instance",
        "operationId": "updateProcess_instance_stepById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_step to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_instance_step instance",
        "operationId": "deleteProcess_instance_stepById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_instance_step to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_instance_step": {
      "x-swagger-router-controller": "process_instance_step",
      "post": {
        "description": "creates a new instance of process_instance_step entity",
        "operationId": "createNewProcess_instance_step",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/approval_request/{id}": {
      "x-swagger-router-controller": "approval_request",
      "get": {
        "description": "Returns approval_request instances by id",
        "operationId": "findApproval_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the approval_request to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an approval_request instance",
        "operationId": "updateApproval_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the approval_request to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an approval_request instance",
        "operationId": "deleteApproval_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the approval_request to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/approval_request": {
      "x-swagger-router-controller": "approval_request",
      "post": {
        "description": "creates a new instance of approval_request entity",
        "operationId": "createNewApproval_request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_node/{id}": {
      "x-swagger-router-controller": "process_node",
      "get": {
        "description": "Returns process_node instances by id",
        "operationId": "findProcess_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_node to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an process_node instance",
        "operationId": "updateProcess_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_node to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an process_node instance",
        "operationId": "deleteProcess_nodeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the process_node to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/process_node": {
      "x-swagger-router-controller": "process_node",
      "post": {
        "description": "creates a new instance of process_node entity",
        "operationId": "createNewProcess_node",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product/{id}": {
      "x-swagger-router-controller": "product",
      "get": {
        "description": "Returns product instances by id",
        "operationId": "findProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an product instance",
        "operationId": "updateProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an product instance",
        "operationId": "deleteProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product": {
      "x-swagger-router-controller": "product",
      "post": {
        "description": "creates a new instance of product entity",
        "operationId": "createNewProduct",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_change_event/{id}": {
      "x-swagger-router-controller": "product_change_event",
      "get": {
        "description": "Returns product_change_event instances by id",
        "operationId": "findProduct_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an product_change_event instance",
        "operationId": "updateProduct_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an product_change_event instance",
        "operationId": "deleteProduct_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_change_event": {
      "x-swagger-router-controller": "product_change_event",
      "post": {
        "description": "creates a new instance of product_change_event entity",
        "operationId": "createNewProduct_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_feed/{id}": {
      "x-swagger-router-controller": "product_feed",
      "get": {
        "description": "Returns product_feed instances by id",
        "operationId": "findProduct_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an product_feed instance",
        "operationId": "updateProduct_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an product_feed instance",
        "operationId": "deleteProduct_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_feed": {
      "x-swagger-router-controller": "product_feed",
      "post": {
        "description": "creates a new instance of product_feed entity",
        "operationId": "createNewProduct_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_history/{id}": {
      "x-swagger-router-controller": "product_history",
      "get": {
        "description": "Returns product_history instances by id",
        "operationId": "findProduct_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an product_history instance",
        "operationId": "updateProduct_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an product_history instance",
        "operationId": "deleteProduct_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/product_history": {
      "x-swagger-router-controller": "product_history",
      "post": {
        "description": "creates a new instance of product_history entity",
        "operationId": "createNewProduct_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/{id}": {
      "x-swagger-router-controller": "profile",
      "get": {
        "description": "Returns profile instances by id",
        "operationId": "findProfileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the profile to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an profile instance",
        "operationId": "updateProfileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the profile to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an profile instance",
        "operationId": "deleteProfileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the profile to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile": {
      "x-swagger-router-controller": "profile",
      "post": {
        "description": "creates a new instance of profile entity",
        "operationId": "createNewProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/publisher/{id}": {
      "x-swagger-router-controller": "publisher",
      "get": {
        "description": "Returns publisher instances by id",
        "operationId": "findPublisherById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the publisher to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an publisher instance",
        "operationId": "updatePublisherById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the publisher to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an publisher instance",
        "operationId": "deletePublisherById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the publisher to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/publisher": {
      "x-swagger-router-controller": "publisher",
      "post": {
        "description": "creates a new instance of publisher entity",
        "operationId": "createNewPublisher",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/push_topic/{id}": {
      "x-swagger-router-controller": "push_topic",
      "get": {
        "description": "Returns push_topic instances by id",
        "operationId": "findPush_topicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the push_topic to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an push_topic instance",
        "operationId": "updatePush_topicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the push_topic to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an push_topic instance",
        "operationId": "deletePush_topicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the push_topic to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/push_topic": {
      "x-swagger-router-controller": "push_topic",
      "post": {
        "description": "creates a new instance of push_topic entity",
        "operationId": "createNewPush_topic",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/queue_sobject/{id}": {
      "x-swagger-router-controller": "queue_sobject",
      "get": {
        "description": "Returns queue_sobject instances by id",
        "operationId": "findQueue_sobjectById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the queue_sobject to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an queue_sobject instance",
        "operationId": "updateQueue_sobjectById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the queue_sobject to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an queue_sobject instance",
        "operationId": "deleteQueue_sobjectById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the queue_sobject to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/queue_sobject": {
      "x-swagger-router-controller": "queue_sobject",
      "post": {
        "description": "creates a new instance of queue_sobject entity",
        "operationId": "createNewQueue_sobject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text/{id}": {
      "x-swagger-router-controller": "quick_text",
      "get": {
        "description": "Returns quick_text instances by id",
        "operationId": "findQuick_textById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an quick_text instance",
        "operationId": "updateQuick_textById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an quick_text instance",
        "operationId": "deleteQuick_textById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text": {
      "x-swagger-router-controller": "quick_text",
      "post": {
        "description": "creates a new instance of quick_text entity",
        "operationId": "createNewQuick_text",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text_history/{id}": {
      "x-swagger-router-controller": "quick_text_history",
      "get": {
        "description": "Returns quick_text_history instances by id",
        "operationId": "findQuick_text_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an quick_text_history instance",
        "operationId": "updateQuick_text_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an quick_text_history instance",
        "operationId": "deleteQuick_text_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text_history": {
      "x-swagger-router-controller": "quick_text_history",
      "post": {
        "description": "creates a new instance of quick_text_history entity",
        "operationId": "createNewQuick_text_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text_share/{id}": {
      "x-swagger-router-controller": "quick_text_share",
      "get": {
        "description": "Returns quick_text_share instances by id",
        "operationId": "findQuick_text_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an quick_text_share instance",
        "operationId": "updateQuick_text_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an quick_text_share instance",
        "operationId": "deleteQuick_text_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quick_text_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quick_text_share": {
      "x-swagger-router-controller": "quick_text_share",
      "post": {
        "description": "creates a new instance of quick_text_share entity",
        "operationId": "createNewQuick_text_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quote_template_rich_text_data/{id}": {
      "x-swagger-router-controller": "quote_template_rich_text_data",
      "get": {
        "description": "Returns quote_template_rich_text_data instances by id",
        "operationId": "findQuote_template_rich_text_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quote_template_rich_text_data to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an quote_template_rich_text_data instance",
        "operationId": "updateQuote_template_rich_text_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quote_template_rich_text_data to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an quote_template_rich_text_data instance",
        "operationId": "deleteQuote_template_rich_text_dataById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the quote_template_rich_text_data to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quote_template_rich_text_data": {
      "x-swagger-router-controller": "quote_template_rich_text_data",
      "post": {
        "description": "creates a new instance of quote_template_rich_text_data entity",
        "operationId": "createNewQuote_template_rich_text_data",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/recently_viewed/{id}": {
      "x-swagger-router-controller": "recently_viewed",
      "get": {
        "description": "Returns recently_viewed instances by id",
        "operationId": "findRecently_viewedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recently_viewed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an recently_viewed instance",
        "operationId": "updateRecently_viewedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recently_viewed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an recently_viewed instance",
        "operationId": "deleteRecently_viewedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recently_viewed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/recently_viewed": {
      "x-swagger-router-controller": "recently_viewed",
      "post": {
        "description": "creates a new instance of recently_viewed entity",
        "operationId": "createNewRecently_viewed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/recordaction/{id}": {
      "x-swagger-router-controller": "recordaction",
      "get": {
        "description": "Returns recordaction instances by id",
        "operationId": "findRecordactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recordaction to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an recordaction instance",
        "operationId": "updateRecordactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recordaction to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an recordaction instance",
        "operationId": "deleteRecordactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recordaction to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/recordaction": {
      "x-swagger-router-controller": "recordaction",
      "post": {
        "description": "creates a new instance of recordaction entity",
        "operationId": "createNewRecordaction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/record_type/{id}": {
      "x-swagger-router-controller": "record_type",
      "get": {
        "description": "Returns record_type instances by id",
        "operationId": "findRecord_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record_type to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an record_type instance",
        "operationId": "updateRecord_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record_type to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an record_type instance",
        "operationId": "deleteRecord_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record_type to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/record_type": {
      "x-swagger-router-controller": "record_type",
      "post": {
        "description": "creates a new instance of record_type entity",
        "operationId": "createNewRecord_type",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/relationship_domain/{id}": {
      "x-swagger-router-controller": "relationship_domain",
      "get": {
        "description": "Returns relationship_domain instances by id",
        "operationId": "findRelationship_domainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship_domain to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an relationship_domain instance",
        "operationId": "updateRelationship_domainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship_domain to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an relationship_domain instance",
        "operationId": "deleteRelationship_domainById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship_domain to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/relationship_domain": {
      "x-swagger-router-controller": "relationship_domain",
      "post": {
        "description": "creates a new instance of relationship_domain entity",
        "operationId": "createNewRelationship_domain",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/relationship/{id}": {
      "x-swagger-router-controller": "relationship",
      "get": {
        "description": "Returns relationship instances by id",
        "operationId": "findRelationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an relationship instance",
        "operationId": "updateRelationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an relationship instance",
        "operationId": "deleteRelationshipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the relationship to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/relationship": {
      "x-swagger-router-controller": "relationship",
      "post": {
        "description": "creates a new instance of relationship entity",
        "operationId": "createNewRelationship",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/report/{id}": {
      "x-swagger-router-controller": "report",
      "get": {
        "description": "Returns report instances by id",
        "operationId": "findReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an report instance",
        "operationId": "updateReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an report instance",
        "operationId": "deleteReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/report": {
      "x-swagger-router-controller": "report",
      "post": {
        "description": "creates a new instance of report entity",
        "operationId": "createNewReport",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/report_feed/{id}": {
      "x-swagger-router-controller": "report_feed",
      "get": {
        "description": "Returns report_feed instances by id",
        "operationId": "findReport_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an report_feed instance",
        "operationId": "updateReport_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an report_feed instance",
        "operationId": "deleteReport_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the report_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/report_feed": {
      "x-swagger-router-controller": "report_feed",
      "post": {
        "description": "creates a new instance of report_feed entity",
        "operationId": "createNewReport_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence/{id}": {
      "x-swagger-router-controller": "resource_absence",
      "get": {
        "description": "Returns resource_absence instances by id",
        "operationId": "findResource_absenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_absence instance",
        "operationId": "updateResource_absenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_absence instance",
        "operationId": "deleteResource_absenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence": {
      "x-swagger-router-controller": "resource_absence",
      "post": {
        "description": "creates a new instance of resource_absence entity",
        "operationId": "createNewResource_absence",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence_feed/{id}": {
      "x-swagger-router-controller": "resource_absence_feed",
      "get": {
        "description": "Returns resource_absence_feed instances by id",
        "operationId": "findResource_absence_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_absence_feed instance",
        "operationId": "updateResource_absence_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_absence_feed instance",
        "operationId": "deleteResource_absence_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence_feed": {
      "x-swagger-router-controller": "resource_absence_feed",
      "post": {
        "description": "creates a new instance of resource_absence_feed entity",
        "operationId": "createNewResource_absence_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence_history/{id}": {
      "x-swagger-router-controller": "resource_absence_history",
      "get": {
        "description": "Returns resource_absence_history instances by id",
        "operationId": "findResource_absence_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_absence_history instance",
        "operationId": "updateResource_absence_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_absence_history instance",
        "operationId": "deleteResource_absence_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_absence_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_absence_history": {
      "x-swagger-router-controller": "resource_absence_history",
      "post": {
        "description": "creates a new instance of resource_absence_history entity",
        "operationId": "createNewResource_absence_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference/{id}": {
      "x-swagger-router-controller": "resource_preference",
      "get": {
        "description": "Returns resource_preference instances by id",
        "operationId": "findResource_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_preference instance",
        "operationId": "updateResource_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_preference instance",
        "operationId": "deleteResource_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference": {
      "x-swagger-router-controller": "resource_preference",
      "post": {
        "description": "creates a new instance of resource_preference entity",
        "operationId": "createNewResource_preference",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference_feed/{id}": {
      "x-swagger-router-controller": "resource_preference_feed",
      "get": {
        "description": "Returns resource_preference_feed instances by id",
        "operationId": "findResource_preference_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_preference_feed instance",
        "operationId": "updateResource_preference_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_preference_feed instance",
        "operationId": "deleteResource_preference_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference_feed": {
      "x-swagger-router-controller": "resource_preference_feed",
      "post": {
        "description": "creates a new instance of resource_preference_feed entity",
        "operationId": "createNewResource_preference_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference_history/{id}": {
      "x-swagger-router-controller": "resource_preference_history",
      "get": {
        "description": "Returns resource_preference_history instances by id",
        "operationId": "findResource_preference_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an resource_preference_history instance",
        "operationId": "updateResource_preference_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an resource_preference_history instance",
        "operationId": "deleteResource_preference_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the resource_preference_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/resource_preference_history": {
      "x-swagger-router-controller": "resource_preference_history",
      "post": {
        "description": "creates a new instance of resource_preference_history entity",
        "operationId": "createNewResource_preference_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/saml_single_sign_on_setting/{id}": {
      "x-swagger-router-controller": "saml_single_sign_on_setting",
      "get": {
        "description": "Returns saml_single_sign_on_setting instances by id",
        "operationId": "findSaml_single_sign_on_settingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the saml_single_sign_on_setting to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an saml_single_sign_on_setting instance",
        "operationId": "updateSaml_single_sign_on_settingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the saml_single_sign_on_setting to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an saml_single_sign_on_setting instance",
        "operationId": "deleteSaml_single_sign_on_settingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the saml_single_sign_on_setting to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/saml_single_sign_on_setting": {
      "x-swagger-router-controller": "saml_single_sign_on_setting",
      "post": {
        "description": "creates a new instance of saml_single_sign_on_setting entity",
        "operationId": "createNewSaml_single_sign_on_setting",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_s_control/{id}": {
      "x-swagger-router-controller": "custom_s_control",
      "get": {
        "description": "Returns custom_s_control instances by id",
        "operationId": "findCustom_s_controlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_s_control to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_s_control instance",
        "operationId": "updateCustom_s_controlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_s_control to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_s_control instance",
        "operationId": "deleteCustom_s_controlById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_s_control to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_s_control": {
      "x-swagger-router-controller": "custom_s_control",
      "post": {
        "description": "creates a new instance of custom_s_control entity",
        "operationId": "createNewCustom_s_control",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/search_layout/{id}": {
      "x-swagger-router-controller": "search_layout",
      "get": {
        "description": "Returns search_layout instances by id",
        "operationId": "findSearch_layoutById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the search_layout to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an search_layout instance",
        "operationId": "updateSearch_layoutById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the search_layout to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an search_layout instance",
        "operationId": "deleteSearch_layoutById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the search_layout to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/search_layout": {
      "x-swagger-router-controller": "search_layout",
      "post": {
        "description": "creates a new instance of search_layout entity",
        "operationId": "createNewSearch_layout",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/promoted_search_term/{id}": {
      "x-swagger-router-controller": "promoted_search_term",
      "get": {
        "description": "Returns promoted_search_term instances by id",
        "operationId": "findPromoted_search_termById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the promoted_search_term to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an promoted_search_term instance",
        "operationId": "updatePromoted_search_termById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the promoted_search_term to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an promoted_search_term instance",
        "operationId": "deletePromoted_search_termById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the promoted_search_term to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/promoted_search_term": {
      "x-swagger-router-controller": "promoted_search_term",
      "post": {
        "description": "creates a new instance of promoted_search_term entity",
        "operationId": "createNewPromoted_search_term",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent/{id}": {
      "x-swagger-router-controller": "secure_agent",
      "get": {
        "description": "Returns secure_agent instances by id",
        "operationId": "findSecure_agentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an secure_agent instance",
        "operationId": "updateSecure_agentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an secure_agent instance",
        "operationId": "deleteSecure_agentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent": {
      "x-swagger-router-controller": "secure_agent",
      "post": {
        "description": "creates a new instance of secure_agent entity",
        "operationId": "createNewSecure_agent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_plug_in/{id}": {
      "x-swagger-router-controller": "secure_agent_plug_in",
      "get": {
        "description": "Returns secure_agent_plug_in instances by id",
        "operationId": "findSecure_agent_plug_inById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an secure_agent_plug_in instance",
        "operationId": "updateSecure_agent_plug_inById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an secure_agent_plug_in instance",
        "operationId": "deleteSecure_agent_plug_inById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_plug_in": {
      "x-swagger-router-controller": "secure_agent_plug_in",
      "post": {
        "description": "creates a new instance of secure_agent_plug_in entity",
        "operationId": "createNewSecure_agent_plug_in",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_plug_in_property/{id}": {
      "x-swagger-router-controller": "secure_agent_plug_in_property",
      "get": {
        "description": "Returns secure_agent_plug_in_property instances by id",
        "operationId": "findSecure_agent_plug_in_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in_property to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an secure_agent_plug_in_property instance",
        "operationId": "updateSecure_agent_plug_in_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in_property to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an secure_agent_plug_in_property instance",
        "operationId": "deleteSecure_agent_plug_in_propertyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_plug_in_property to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_plug_in_property": {
      "x-swagger-router-controller": "secure_agent_plug_in_property",
      "post": {
        "description": "creates a new instance of secure_agent_plug_in_property entity",
        "operationId": "createNewSecure_agent_plug_in_property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_cluster/{id}": {
      "x-swagger-router-controller": "secure_agent_cluster",
      "get": {
        "description": "Returns secure_agent_cluster instances by id",
        "operationId": "findSecure_agent_clusterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_cluster to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an secure_agent_cluster instance",
        "operationId": "updateSecure_agent_clusterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_cluster to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an secure_agent_cluster instance",
        "operationId": "deleteSecure_agent_clusterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the secure_agent_cluster to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure_agent_cluster": {
      "x-swagger-router-controller": "secure_agent_cluster",
      "post": {
        "description": "creates a new instance of secure_agent_cluster entity",
        "operationId": "createNewSecure_agent_cluster",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/security_custom_baseline/{id}": {
      "x-swagger-router-controller": "security_custom_baseline",
      "get": {
        "description": "Returns security_custom_baseline instances by id",
        "operationId": "findSecurity_custom_baselineById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the security_custom_baseline to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an security_custom_baseline instance",
        "operationId": "updateSecurity_custom_baselineById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the security_custom_baseline to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an security_custom_baseline instance",
        "operationId": "deleteSecurity_custom_baselineById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the security_custom_baseline to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/security_custom_baseline": {
      "x-swagger-router-controller": "security_custom_baseline",
      "post": {
        "description": "creates a new instance of security_custom_baseline entity",
        "operationId": "createNewSecurity_custom_baseline",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment/{id}": {
      "x-swagger-router-controller": "service_appointment",
      "get": {
        "description": "Returns service_appointment instances by id",
        "operationId": "findService_appointmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_appointment instance",
        "operationId": "updateService_appointmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_appointment instance",
        "operationId": "deleteService_appointmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment": {
      "x-swagger-router-controller": "service_appointment",
      "post": {
        "description": "creates a new instance of service_appointment entity",
        "operationId": "createNewService_appointment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_feed/{id}": {
      "x-swagger-router-controller": "service_appointment_feed",
      "get": {
        "description": "Returns service_appointment_feed instances by id",
        "operationId": "findService_appointment_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_appointment_feed instance",
        "operationId": "updateService_appointment_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_appointment_feed instance",
        "operationId": "deleteService_appointment_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_feed": {
      "x-swagger-router-controller": "service_appointment_feed",
      "post": {
        "description": "creates a new instance of service_appointment_feed entity",
        "operationId": "createNewService_appointment_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_history/{id}": {
      "x-swagger-router-controller": "service_appointment_history",
      "get": {
        "description": "Returns service_appointment_history instances by id",
        "operationId": "findService_appointment_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_appointment_history instance",
        "operationId": "updateService_appointment_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_appointment_history instance",
        "operationId": "deleteService_appointment_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_history": {
      "x-swagger-router-controller": "service_appointment_history",
      "post": {
        "description": "creates a new instance of service_appointment_history entity",
        "operationId": "createNewService_appointment_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_share/{id}": {
      "x-swagger-router-controller": "service_appointment_share",
      "get": {
        "description": "Returns service_appointment_share instances by id",
        "operationId": "findService_appointment_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_appointment_share instance",
        "operationId": "updateService_appointment_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_appointment_share instance",
        "operationId": "deleteService_appointment_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_share": {
      "x-swagger-router-controller": "service_appointment_share",
      "post": {
        "description": "creates a new instance of service_appointment_share entity",
        "operationId": "createNewService_appointment_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_status_value/{id}": {
      "x-swagger-router-controller": "service_appointment_status_value",
      "get": {
        "description": "Returns service_appointment_status_value instances by id",
        "operationId": "findService_appointment_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_appointment_status_value instance",
        "operationId": "updateService_appointment_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_appointment_status_value instance",
        "operationId": "deleteService_appointment_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_appointment_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_appointment_status_value": {
      "x-swagger-router-controller": "service_appointment_status_value",
      "post": {
        "description": "creates a new instance of service_appointment_status_value entity",
        "operationId": "createNewService_appointment_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource/{id}": {
      "x-swagger-router-controller": "service_resource",
      "get": {
        "description": "Returns service_resource instances by id",
        "operationId": "findService_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource instance",
        "operationId": "updateService_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource instance",
        "operationId": "deleteService_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource": {
      "x-swagger-router-controller": "service_resource",
      "post": {
        "description": "creates a new instance of service_resource entity",
        "operationId": "createNewService_resource",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_feed/{id}": {
      "x-swagger-router-controller": "service_resource_feed",
      "get": {
        "description": "Returns service_resource_feed instances by id",
        "operationId": "findService_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_feed instance",
        "operationId": "updateService_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_feed instance",
        "operationId": "deleteService_resource_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_feed": {
      "x-swagger-router-controller": "service_resource_feed",
      "post": {
        "description": "creates a new instance of service_resource_feed entity",
        "operationId": "createNewService_resource_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_history/{id}": {
      "x-swagger-router-controller": "service_resource_history",
      "get": {
        "description": "Returns service_resource_history instances by id",
        "operationId": "findService_resource_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_history instance",
        "operationId": "updateService_resource_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_history instance",
        "operationId": "deleteService_resource_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_history": {
      "x-swagger-router-controller": "service_resource_history",
      "post": {
        "description": "creates a new instance of service_resource_history entity",
        "operationId": "createNewService_resource_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_share/{id}": {
      "x-swagger-router-controller": "service_resource_share",
      "get": {
        "description": "Returns service_resource_share instances by id",
        "operationId": "findService_resource_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_share instance",
        "operationId": "updateService_resource_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_share instance",
        "operationId": "deleteService_resource_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_share": {
      "x-swagger-router-controller": "service_resource_share",
      "post": {
        "description": "creates a new instance of service_resource_share entity",
        "operationId": "createNewService_resource_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill/{id}": {
      "x-swagger-router-controller": "service_resource_skill",
      "get": {
        "description": "Returns service_resource_skill instances by id",
        "operationId": "findService_resource_skillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_skill instance",
        "operationId": "updateService_resource_skillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_skill instance",
        "operationId": "deleteService_resource_skillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill": {
      "x-swagger-router-controller": "service_resource_skill",
      "post": {
        "description": "creates a new instance of service_resource_skill entity",
        "operationId": "createNewService_resource_skill",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill_feed/{id}": {
      "x-swagger-router-controller": "service_resource_skill_feed",
      "get": {
        "description": "Returns service_resource_skill_feed instances by id",
        "operationId": "findService_resource_skill_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_skill_feed instance",
        "operationId": "updateService_resource_skill_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_skill_feed instance",
        "operationId": "deleteService_resource_skill_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill_feed": {
      "x-swagger-router-controller": "service_resource_skill_feed",
      "post": {
        "description": "creates a new instance of service_resource_skill_feed entity",
        "operationId": "createNewService_resource_skill_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill_history/{id}": {
      "x-swagger-router-controller": "service_resource_skill_history",
      "get": {
        "description": "Returns service_resource_skill_history instances by id",
        "operationId": "findService_resource_skill_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_resource_skill_history instance",
        "operationId": "updateService_resource_skill_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_resource_skill_history instance",
        "operationId": "deleteService_resource_skill_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_resource_skill_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_resource_skill_history": {
      "x-swagger-router-controller": "service_resource_skill_history",
      "post": {
        "description": "creates a new instance of service_resource_skill_history entity",
        "operationId": "createNewService_resource_skill_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory/{id}": {
      "x-swagger-router-controller": "service_territory",
      "get": {
        "description": "Returns service_territory instances by id",
        "operationId": "findService_territoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory instance",
        "operationId": "updateService_territoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory instance",
        "operationId": "deleteService_territoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory": {
      "x-swagger-router-controller": "service_territory",
      "post": {
        "description": "creates a new instance of service_territory entity",
        "operationId": "createNewService_territory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_feed/{id}": {
      "x-swagger-router-controller": "service_territory_feed",
      "get": {
        "description": "Returns service_territory_feed instances by id",
        "operationId": "findService_territory_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_feed instance",
        "operationId": "updateService_territory_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_feed instance",
        "operationId": "deleteService_territory_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_feed": {
      "x-swagger-router-controller": "service_territory_feed",
      "post": {
        "description": "creates a new instance of service_territory_feed entity",
        "operationId": "createNewService_territory_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_history/{id}": {
      "x-swagger-router-controller": "service_territory_history",
      "get": {
        "description": "Returns service_territory_history instances by id",
        "operationId": "findService_territory_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_history instance",
        "operationId": "updateService_territory_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_history instance",
        "operationId": "deleteService_territory_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_history": {
      "x-swagger-router-controller": "service_territory_history",
      "post": {
        "description": "creates a new instance of service_territory_history entity",
        "operationId": "createNewService_territory_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member/{id}": {
      "x-swagger-router-controller": "service_territory_member",
      "get": {
        "description": "Returns service_territory_member instances by id",
        "operationId": "findService_territory_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_member instance",
        "operationId": "updateService_territory_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_member instance",
        "operationId": "deleteService_territory_memberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member": {
      "x-swagger-router-controller": "service_territory_member",
      "post": {
        "description": "creates a new instance of service_territory_member entity",
        "operationId": "createNewService_territory_member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member_feed/{id}": {
      "x-swagger-router-controller": "service_territory_member_feed",
      "get": {
        "description": "Returns service_territory_member_feed instances by id",
        "operationId": "findService_territory_member_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_member_feed instance",
        "operationId": "updateService_territory_member_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_member_feed instance",
        "operationId": "deleteService_territory_member_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member_feed": {
      "x-swagger-router-controller": "service_territory_member_feed",
      "post": {
        "description": "creates a new instance of service_territory_member_feed entity",
        "operationId": "createNewService_territory_member_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member_history/{id}": {
      "x-swagger-router-controller": "service_territory_member_history",
      "get": {
        "description": "Returns service_territory_member_history instances by id",
        "operationId": "findService_territory_member_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_member_history instance",
        "operationId": "updateService_territory_member_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_member_history instance",
        "operationId": "deleteService_territory_member_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_member_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_member_history": {
      "x-swagger-router-controller": "service_territory_member_history",
      "post": {
        "description": "creates a new instance of service_territory_member_history entity",
        "operationId": "createNewService_territory_member_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_share/{id}": {
      "x-swagger-router-controller": "service_territory_share",
      "get": {
        "description": "Returns service_territory_share instances by id",
        "operationId": "findService_territory_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an service_territory_share instance",
        "operationId": "updateService_territory_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an service_territory_share instance",
        "operationId": "deleteService_territory_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the service_territory_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/service_territory_share": {
      "x-swagger-router-controller": "service_territory_share",
      "post": {
        "description": "creates a new instance of service_territory_share entity",
        "operationId": "createNewService_territory_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/session_permission_set_activation/{id}": {
      "x-swagger-router-controller": "session_permission_set_activation",
      "get": {
        "description": "Returns session_permission_set_activation instances by id",
        "operationId": "findSession_permission_set_activationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the session_permission_set_activation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an session_permission_set_activation instance",
        "operationId": "updateSession_permission_set_activationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the session_permission_set_activation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an session_permission_set_activation instance",
        "operationId": "deleteSession_permission_set_activationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the session_permission_set_activation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/session_permission_set_activation": {
      "x-swagger-router-controller": "session_permission_set_activation",
      "post": {
        "description": "creates a new instance of session_permission_set_activation entity",
        "operationId": "createNewSession_permission_set_activation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setup_audit_trail_entry/{id}": {
      "x-swagger-router-controller": "setup_audit_trail_entry",
      "get": {
        "description": "Returns setup_audit_trail_entry instances by id",
        "operationId": "findSetup_audit_trail_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_audit_trail_entry to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an setup_audit_trail_entry instance",
        "operationId": "updateSetup_audit_trail_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_audit_trail_entry to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an setup_audit_trail_entry instance",
        "operationId": "deleteSetup_audit_trail_entryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_audit_trail_entry to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setup_audit_trail_entry": {
      "x-swagger-router-controller": "setup_audit_trail_entry",
      "post": {
        "description": "creates a new instance of setup_audit_trail_entry entity",
        "operationId": "createNewSetup_audit_trail_entry",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setup_entity_access/{id}": {
      "x-swagger-router-controller": "setup_entity_access",
      "get": {
        "description": "Returns setup_entity_access instances by id",
        "operationId": "findSetup_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_entity_access to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an setup_entity_access instance",
        "operationId": "updateSetup_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_entity_access to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an setup_entity_access instance",
        "operationId": "deleteSetup_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setup_entity_access to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/setup_entity_access": {
      "x-swagger-router-controller": "setup_entity_access",
      "post": {
        "description": "creates a new instance of setup_entity_access entity",
        "operationId": "createNewSetup_entity_access",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site/{id}": {
      "x-swagger-router-controller": "site",
      "get": {
        "description": "Returns site instances by id",
        "operationId": "findSiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an site instance",
        "operationId": "updateSiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an site instance",
        "operationId": "deleteSiteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site": {
      "x-swagger-router-controller": "site",
      "post": {
        "description": "creates a new instance of site entity",
        "operationId": "createNewSite",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site_detail/{id}": {
      "x-swagger-router-controller": "site_detail",
      "get": {
        "description": "Returns site_detail instances by id",
        "operationId": "findSite_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_detail to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an site_detail instance",
        "operationId": "updateSite_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_detail to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an site_detail instance",
        "operationId": "deleteSite_detailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_detail to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site_detail": {
      "x-swagger-router-controller": "site_detail",
      "post": {
        "description": "creates a new instance of site_detail entity",
        "operationId": "createNewSite_detail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site_history/{id}": {
      "x-swagger-router-controller": "site_history",
      "get": {
        "description": "Returns site_history instances by id",
        "operationId": "findSite_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an site_history instance",
        "operationId": "updateSite_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an site_history instance",
        "operationId": "deleteSite_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the site_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/site_history": {
      "x-swagger-router-controller": "site_history",
      "post": {
        "description": "creates a new instance of site_history entity",
        "operationId": "createNewSite_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill/{id}": {
      "x-swagger-router-controller": "skill",
      "get": {
        "description": "Returns skill instances by id",
        "operationId": "findSkillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an skill instance",
        "operationId": "updateSkillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an skill instance",
        "operationId": "deleteSkillById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill": {
      "x-swagger-router-controller": "skill",
      "post": {
        "description": "creates a new instance of skill entity",
        "operationId": "createNewSkill",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement/{id}": {
      "x-swagger-router-controller": "skill_requirement",
      "get": {
        "description": "Returns skill_requirement instances by id",
        "operationId": "findSkill_requirementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an skill_requirement instance",
        "operationId": "updateSkill_requirementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an skill_requirement instance",
        "operationId": "deleteSkill_requirementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement": {
      "x-swagger-router-controller": "skill_requirement",
      "post": {
        "description": "creates a new instance of skill_requirement entity",
        "operationId": "createNewSkill_requirement",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement_feed/{id}": {
      "x-swagger-router-controller": "skill_requirement_feed",
      "get": {
        "description": "Returns skill_requirement_feed instances by id",
        "operationId": "findSkill_requirement_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an skill_requirement_feed instance",
        "operationId": "updateSkill_requirement_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an skill_requirement_feed instance",
        "operationId": "deleteSkill_requirement_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement_feed": {
      "x-swagger-router-controller": "skill_requirement_feed",
      "post": {
        "description": "creates a new instance of skill_requirement_feed entity",
        "operationId": "createNewSkill_requirement_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement_history/{id}": {
      "x-swagger-router-controller": "skill_requirement_history",
      "get": {
        "description": "Returns skill_requirement_history instances by id",
        "operationId": "findSkill_requirement_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an skill_requirement_history instance",
        "operationId": "updateSkill_requirement_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an skill_requirement_history instance",
        "operationId": "deleteSkill_requirement_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the skill_requirement_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/skill_requirement_history": {
      "x-swagger-router-controller": "skill_requirement_history",
      "post": {
        "description": "creates a new instance of skill_requirement_history entity",
        "operationId": "createNewSkill_requirement_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution/{id}": {
      "x-swagger-router-controller": "solution",
      "get": {
        "description": "Returns solution instances by id",
        "operationId": "findSolutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an solution instance",
        "operationId": "updateSolutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an solution instance",
        "operationId": "deleteSolutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution": {
      "x-swagger-router-controller": "solution",
      "post": {
        "description": "creates a new instance of solution entity",
        "operationId": "createNewSolution",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_feed/{id}": {
      "x-swagger-router-controller": "solution_feed",
      "get": {
        "description": "Returns solution_feed instances by id",
        "operationId": "findSolution_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an solution_feed instance",
        "operationId": "updateSolution_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an solution_feed instance",
        "operationId": "deleteSolution_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_feed": {
      "x-swagger-router-controller": "solution_feed",
      "post": {
        "description": "creates a new instance of solution_feed entity",
        "operationId": "createNewSolution_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_history/{id}": {
      "x-swagger-router-controller": "solution_history",
      "get": {
        "description": "Returns solution_history instances by id",
        "operationId": "findSolution_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an solution_history instance",
        "operationId": "updateSolution_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an solution_history instance",
        "operationId": "deleteSolution_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_history": {
      "x-swagger-router-controller": "solution_history",
      "post": {
        "description": "creates a new instance of solution_history entity",
        "operationId": "createNewSolution_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_status_value/{id}": {
      "x-swagger-router-controller": "solution_status_value",
      "get": {
        "description": "Returns solution_status_value instances by id",
        "operationId": "findSolution_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an solution_status_value instance",
        "operationId": "updateSolution_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an solution_status_value instance",
        "operationId": "deleteSolution_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the solution_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/solution_status_value": {
      "x-swagger-router-controller": "solution_status_value",
      "post": {
        "description": "creates a new instance of solution_status_value entity",
        "operationId": "createNewSolution_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/stamp/{id}": {
      "x-swagger-router-controller": "stamp",
      "get": {
        "description": "Returns stamp instances by id",
        "operationId": "findStampById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an stamp instance",
        "operationId": "updateStampById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an stamp instance",
        "operationId": "deleteStampById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/stamp": {
      "x-swagger-router-controller": "stamp",
      "post": {
        "description": "creates a new instance of stamp entity",
        "operationId": "createNewStamp",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/stamp_assignment/{id}": {
      "x-swagger-router-controller": "stamp_assignment",
      "get": {
        "description": "Returns stamp_assignment instances by id",
        "operationId": "findStamp_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp_assignment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an stamp_assignment instance",
        "operationId": "updateStamp_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp_assignment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an stamp_assignment instance",
        "operationId": "deleteStamp_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the stamp_assignment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/stamp_assignment": {
      "x-swagger-router-controller": "stamp_assignment",
      "post": {
        "description": "creates a new instance of stamp_assignment entity",
        "operationId": "createNewStamp_assignment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/static_resource/{id}": {
      "x-swagger-router-controller": "static_resource",
      "get": {
        "description": "Returns static_resource instances by id",
        "operationId": "findStatic_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the static_resource to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an static_resource instance",
        "operationId": "updateStatic_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the static_resource to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an static_resource instance",
        "operationId": "deleteStatic_resourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the static_resource to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/static_resource": {
      "x-swagger-router-controller": "static_resource",
      "post": {
        "description": "creates a new instance of static_resource entity",
        "operationId": "createNewStatic_resource",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/streaming_channel/{id}": {
      "x-swagger-router-controller": "streaming_channel",
      "get": {
        "description": "Returns streaming_channel instances by id",
        "operationId": "findStreaming_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an streaming_channel instance",
        "operationId": "updateStreaming_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an streaming_channel instance",
        "operationId": "deleteStreaming_channelById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/streaming_channel": {
      "x-swagger-router-controller": "streaming_channel",
      "post": {
        "description": "creates a new instance of streaming_channel entity",
        "operationId": "createNewStreaming_channel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/streaming_channel_share/{id}": {
      "x-swagger-router-controller": "streaming_channel_share",
      "get": {
        "description": "Returns streaming_channel_share instances by id",
        "operationId": "findStreaming_channel_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an streaming_channel_share instance",
        "operationId": "updateStreaming_channel_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an streaming_channel_share instance",
        "operationId": "deleteStreaming_channel_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the streaming_channel_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/streaming_channel_share": {
      "x-swagger-router-controller": "streaming_channel_share",
      "post": {
        "description": "creates a new instance of streaming_channel_share entity",
        "operationId": "createNewStreaming_channel_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task/{id}": {
      "x-swagger-router-controller": "task",
      "get": {
        "description": "Returns task instances by id",
        "operationId": "findTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an task instance",
        "operationId": "updateTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an task instance",
        "operationId": "deleteTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task": {
      "x-swagger-router-controller": "task",
      "post": {
        "description": "creates a new instance of task entity",
        "operationId": "createNewTask",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_change_event/{id}": {
      "x-swagger-router-controller": "task_change_event",
      "get": {
        "description": "Returns task_change_event instances by id",
        "operationId": "findTask_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_change_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an task_change_event instance",
        "operationId": "updateTask_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_change_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an task_change_event instance",
        "operationId": "deleteTask_change_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_change_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_change_event": {
      "x-swagger-router-controller": "task_change_event",
      "post": {
        "description": "creates a new instance of task_change_event entity",
        "operationId": "createNewTask_change_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_feed/{id}": {
      "x-swagger-router-controller": "task_feed",
      "get": {
        "description": "Returns task_feed instances by id",
        "operationId": "findTask_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an task_feed instance",
        "operationId": "updateTask_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an task_feed instance",
        "operationId": "deleteTask_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_feed": {
      "x-swagger-router-controller": "task_feed",
      "post": {
        "description": "creates a new instance of task_feed entity",
        "operationId": "createNewTask_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_priority_value/{id}": {
      "x-swagger-router-controller": "task_priority_value",
      "get": {
        "description": "Returns task_priority_value instances by id",
        "operationId": "findTask_priority_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_priority_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an task_priority_value instance",
        "operationId": "updateTask_priority_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_priority_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an task_priority_value instance",
        "operationId": "deleteTask_priority_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_priority_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_priority_value": {
      "x-swagger-router-controller": "task_priority_value",
      "post": {
        "description": "creates a new instance of task_priority_value entity",
        "operationId": "createNewTask_priority_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_status_value/{id}": {
      "x-swagger-router-controller": "task_status_value",
      "get": {
        "description": "Returns task_status_value instances by id",
        "operationId": "findTask_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_status_value to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an task_status_value instance",
        "operationId": "updateTask_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_status_value to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an task_status_value instance",
        "operationId": "deleteTask_status_valueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task_status_value to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/task_status_value": {
      "x-swagger-router-controller": "task_status_value",
      "post": {
        "description": "creates a new instance of task_status_value entity",
        "operationId": "createNewTask_status_value",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tenant_usage_entitlement/{id}": {
      "x-swagger-router-controller": "tenant_usage_entitlement",
      "get": {
        "description": "Returns tenant_usage_entitlement instances by id",
        "operationId": "findTenant_usage_entitlementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the tenant_usage_entitlement to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an tenant_usage_entitlement instance",
        "operationId": "updateTenant_usage_entitlementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the tenant_usage_entitlement to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an tenant_usage_entitlement instance",
        "operationId": "deleteTenant_usage_entitlementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the tenant_usage_entitlement to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tenant_usage_entitlement": {
      "x-swagger-router-controller": "tenant_usage_entitlement",
      "post": {
        "description": "creates a new instance of tenant_usage_entitlement entity",
        "operationId": "createNewTenant_usage_entitlement",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/test_suite_membership/{id}": {
      "x-swagger-router-controller": "test_suite_membership",
      "get": {
        "description": "Returns test_suite_membership instances by id",
        "operationId": "findTest_suite_membershipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the test_suite_membership to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an test_suite_membership instance",
        "operationId": "updateTest_suite_membershipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the test_suite_membership to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an test_suite_membership instance",
        "operationId": "deleteTest_suite_membershipById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the test_suite_membership to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/test_suite_membership": {
      "x-swagger-router-controller": "test_suite_membership",
      "post": {
        "description": "creates a new instance of test_suite_membership entity",
        "operationId": "createNewTest_suite_membership",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/third_party_account_link/{id}": {
      "x-swagger-router-controller": "third_party_account_link",
      "get": {
        "description": "Returns third_party_account_link instances by id",
        "operationId": "findThird_party_account_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the third_party_account_link to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an third_party_account_link instance",
        "operationId": "updateThird_party_account_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the third_party_account_link to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an third_party_account_link instance",
        "operationId": "deleteThird_party_account_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the third_party_account_link to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/third_party_account_link": {
      "x-swagger-router-controller": "third_party_account_link",
      "post": {
        "description": "creates a new instance of third_party_account_link entity",
        "operationId": "createNewThird_party_account_link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/time_slot/{id}": {
      "x-swagger-router-controller": "time_slot",
      "get": {
        "description": "Returns time_slot instances by id",
        "operationId": "findTime_slotById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the time_slot to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an time_slot instance",
        "operationId": "updateTime_slotById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the time_slot to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an time_slot instance",
        "operationId": "deleteTime_slotById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the time_slot to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/time_slot": {
      "x-swagger-router-controller": "time_slot",
      "post": {
        "description": "creates a new instance of time_slot entity",
        "operationId": "createNewTime_slot",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/goal/{id}": {
      "x-swagger-router-controller": "goal",
      "get": {
        "description": "Returns goal instances by id",
        "operationId": "findGoalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an goal instance",
        "operationId": "updateGoalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an goal instance",
        "operationId": "deleteGoalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/goal": {
      "x-swagger-router-controller": "goal",
      "post": {
        "description": "creates a new instance of goal entity",
        "operationId": "createNewGoal",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/goal_share/{id}": {
      "x-swagger-router-controller": "goal_share",
      "get": {
        "description": "Returns goal_share instances by id",
        "operationId": "findGoal_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an goal_share instance",
        "operationId": "updateGoal_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an goal_share instance",
        "operationId": "deleteGoal_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the goal_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/goal_share": {
      "x-swagger-router-controller": "goal_share",
      "post": {
        "description": "creates a new instance of goal_share entity",
        "operationId": "createNewGoal_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic/{id}": {
      "x-swagger-router-controller": "topic",
      "get": {
        "description": "Returns topic instances by id",
        "operationId": "findTopicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an topic instance",
        "operationId": "updateTopicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an topic instance",
        "operationId": "deleteTopicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic": {
      "x-swagger-router-controller": "topic",
      "post": {
        "description": "creates a new instance of topic entity",
        "operationId": "createNewTopic",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_assignment/{id}": {
      "x-swagger-router-controller": "topic_assignment",
      "get": {
        "description": "Returns topic_assignment instances by id",
        "operationId": "findTopic_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_assignment to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an topic_assignment instance",
        "operationId": "updateTopic_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_assignment to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an topic_assignment instance",
        "operationId": "deleteTopic_assignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_assignment to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_assignment": {
      "x-swagger-router-controller": "topic_assignment",
      "post": {
        "description": "creates a new instance of topic_assignment entity",
        "operationId": "createNewTopic_assignment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_feed/{id}": {
      "x-swagger-router-controller": "topic_feed",
      "get": {
        "description": "Returns topic_feed instances by id",
        "operationId": "findTopic_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an topic_feed instance",
        "operationId": "updateTopic_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an topic_feed instance",
        "operationId": "deleteTopic_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_feed": {
      "x-swagger-router-controller": "topic_feed",
      "post": {
        "description": "creates a new instance of topic_feed entity",
        "operationId": "createNewTopic_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_user_event/{id}": {
      "x-swagger-router-controller": "topic_user_event",
      "get": {
        "description": "Returns topic_user_event instances by id",
        "operationId": "findTopic_user_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_user_event to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an topic_user_event instance",
        "operationId": "updateTopic_user_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_user_event to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an topic_user_event instance",
        "operationId": "deleteTopic_user_eventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the topic_user_event to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic_user_event": {
      "x-swagger-router-controller": "topic_user_event",
      "post": {
        "description": "creates a new instance of topic_user_event entity",
        "operationId": "createNewTopic_user_event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction_security_policy/{id}": {
      "x-swagger-router-controller": "transaction_security_policy",
      "get": {
        "description": "Returns transaction_security_policy instances by id",
        "operationId": "findTransaction_security_policyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the transaction_security_policy to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an transaction_security_policy instance",
        "operationId": "updateTransaction_security_policyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the transaction_security_policy to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an transaction_security_policy instance",
        "operationId": "deleteTransaction_security_policyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the transaction_security_policy to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction_security_policy": {
      "x-swagger-router-controller": "transaction_security_policy",
      "post": {
        "description": "creates a new instance of transaction_security_policy entity",
        "operationId": "createNewTransaction_security_policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/undecided_event_relation/{id}": {
      "x-swagger-router-controller": "undecided_event_relation",
      "get": {
        "description": "Returns undecided_event_relation instances by id",
        "operationId": "findUndecided_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the undecided_event_relation to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an undecided_event_relation instance",
        "operationId": "updateUndecided_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the undecided_event_relation to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an undecided_event_relation instance",
        "operationId": "deleteUndecided_event_relationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the undecided_event_relation to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/undecided_event_relation": {
      "x-swagger-router-controller": "undecided_event_relation",
      "post": {
        "description": "creates a new instance of undecided_event_relation entity",
        "operationId": "createNewUndecided_event_relation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "x-swagger-router-controller": "user",
      "get": {
        "description": "Returns user instances by id",
        "operationId": "findUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user instance",
        "operationId": "updateUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user instance",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user": {
      "x-swagger-router-controller": "user",
      "post": {
        "description": "creates a new instance of user entity",
        "operationId": "createNewUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/last_used_app/{id}": {
      "x-swagger-router-controller": "last_used_app",
      "get": {
        "description": "Returns last_used_app instances by id",
        "operationId": "findLast_used_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the last_used_app to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an last_used_app instance",
        "operationId": "updateLast_used_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the last_used_app to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an last_used_app instance",
        "operationId": "deleteLast_used_appById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the last_used_app to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/last_used_app": {
      "x-swagger-router-controller": "last_used_app",
      "post": {
        "description": "creates a new instance of last_used_app entity",
        "operationId": "createNewLast_used_app",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userappmenucustomization/{id}": {
      "x-swagger-router-controller": "userappmenucustomization",
      "get": {
        "description": "Returns userappmenucustomization instances by id",
        "operationId": "findUserappmenucustomizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an userappmenucustomization instance",
        "operationId": "updateUserappmenucustomizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an userappmenucustomization instance",
        "operationId": "deleteUserappmenucustomizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userappmenucustomization": {
      "x-swagger-router-controller": "userappmenucustomization",
      "post": {
        "description": "creates a new instance of userappmenucustomization entity",
        "operationId": "createNewUserappmenucustomization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userappmenucustomization_share/{id}": {
      "x-swagger-router-controller": "userappmenucustomization_share",
      "get": {
        "description": "Returns userappmenucustomization_share instances by id",
        "operationId": "findUserappmenucustomization_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an userappmenucustomization_share instance",
        "operationId": "updateUserappmenucustomization_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an userappmenucustomization_share instance",
        "operationId": "deleteUserappmenucustomization_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the userappmenucustomization_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userappmenucustomization_share": {
      "x-swagger-router-controller": "userappmenucustomization_share",
      "post": {
        "description": "creates a new instance of userappmenucustomization_share entity",
        "operationId": "createNewUserappmenucustomization_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/application/{id}": {
      "x-swagger-router-controller": "application",
      "get": {
        "description": "Returns application instances by id",
        "operationId": "findApplicationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the application to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an application instance",
        "operationId": "updateApplicationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the application to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an application instance",
        "operationId": "deleteApplicationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the application to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/application": {
      "x-swagger-router-controller": "application",
      "post": {
        "description": "creates a new instance of application entity",
        "operationId": "createNewApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_entity_access/{id}": {
      "x-swagger-router-controller": "user_entity_access",
      "get": {
        "description": "Returns user_entity_access instances by id",
        "operationId": "findUser_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_entity_access to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_entity_access instance",
        "operationId": "updateUser_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_entity_access to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_entity_access instance",
        "operationId": "deleteUser_entity_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_entity_access to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_entity_access": {
      "x-swagger-router-controller": "user_entity_access",
      "post": {
        "description": "creates a new instance of user_entity_access entity",
        "operationId": "createNewUser_entity_access",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_feed/{id}": {
      "x-swagger-router-controller": "user_feed",
      "get": {
        "description": "Returns user_feed instances by id",
        "operationId": "findUser_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_feed instance",
        "operationId": "updateUser_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_feed instance",
        "operationId": "deleteUser_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_feed": {
      "x-swagger-router-controller": "user_feed",
      "post": {
        "description": "creates a new instance of user_feed entity",
        "operationId": "createNewUser_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_field_access/{id}": {
      "x-swagger-router-controller": "user_field_access",
      "get": {
        "description": "Returns user_field_access instances by id",
        "operationId": "findUser_field_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_field_access to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_field_access instance",
        "operationId": "updateUser_field_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_field_access to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_field_access instance",
        "operationId": "deleteUser_field_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_field_access to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_field_access": {
      "x-swagger-router-controller": "user_field_access",
      "post": {
        "description": "creates a new instance of user_field_access entity",
        "operationId": "createNewUser_field_access",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_license/{id}": {
      "x-swagger-router-controller": "user_license",
      "get": {
        "description": "Returns user_license instances by id",
        "operationId": "findUser_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_license to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_license instance",
        "operationId": "updateUser_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_license to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_license instance",
        "operationId": "deleteUser_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_license to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_license": {
      "x-swagger-router-controller": "user_license",
      "post": {
        "description": "creates a new instance of user_license entity",
        "operationId": "createNewUser_license",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_list_view/{id}": {
      "x-swagger-router-controller": "user_list_view",
      "get": {
        "description": "Returns user_list_view instances by id",
        "operationId": "findUser_list_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_list_view instance",
        "operationId": "updateUser_list_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_list_view instance",
        "operationId": "deleteUser_list_viewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_list_view": {
      "x-swagger-router-controller": "user_list_view",
      "post": {
        "description": "creates a new instance of user_list_view entity",
        "operationId": "createNewUser_list_view",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_list_view_criteria/{id}": {
      "x-swagger-router-controller": "user_list_view_criteria",
      "get": {
        "description": "Returns user_list_view_criteria instances by id",
        "operationId": "findUser_list_view_criteriaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view_criteria to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_list_view_criteria instance",
        "operationId": "updateUser_list_view_criteriaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view_criteria to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_list_view_criteria instance",
        "operationId": "deleteUser_list_view_criteriaById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_list_view_criteria to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_list_view_criteria": {
      "x-swagger-router-controller": "user_list_view_criteria",
      "post": {
        "description": "creates a new instance of user_list_view_criteria entity",
        "operationId": "createNewUser_list_view_criteria",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_login/{id}": {
      "x-swagger-router-controller": "user_login",
      "get": {
        "description": "Returns user_login instances by id",
        "operationId": "findUser_loginById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_login to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_login instance",
        "operationId": "updateUser_loginById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_login to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_login instance",
        "operationId": "deleteUser_loginById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_login to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_login": {
      "x-swagger-router-controller": "user_login",
      "post": {
        "description": "creates a new instance of user_login entity",
        "operationId": "createNewUser_login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_package_license/{id}": {
      "x-swagger-router-controller": "user_package_license",
      "get": {
        "description": "Returns user_package_license instances by id",
        "operationId": "findUser_package_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_package_license to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_package_license instance",
        "operationId": "updateUser_package_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_package_license to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_package_license instance",
        "operationId": "deleteUser_package_licenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_package_license to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_package_license": {
      "x-swagger-router-controller": "user_package_license",
      "post": {
        "description": "creates a new instance of user_package_license entity",
        "operationId": "createNewUser_package_license",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_permission_access/{id}": {
      "x-swagger-router-controller": "user_permission_access",
      "get": {
        "description": "Returns user_permission_access instances by id",
        "operationId": "findUser_permission_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_permission_access to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_permission_access instance",
        "operationId": "updateUser_permission_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_permission_access to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_permission_access instance",
        "operationId": "deleteUser_permission_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_permission_access to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_permission_access": {
      "x-swagger-router-controller": "user_permission_access",
      "post": {
        "description": "creates a new instance of user_permission_access entity",
        "operationId": "createNewUser_permission_access",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_preference/{id}": {
      "x-swagger-router-controller": "user_preference",
      "get": {
        "description": "Returns user_preference instances by id",
        "operationId": "findUser_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_preference to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_preference instance",
        "operationId": "updateUser_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_preference to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_preference instance",
        "operationId": "deleteUser_preferenceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_preference to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_preference": {
      "x-swagger-router-controller": "user_preference",
      "post": {
        "description": "creates a new instance of user_preference entity",
        "operationId": "createNewUser_preference",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_account/{id}": {
      "x-swagger-router-controller": "user_provisioning_account",
      "get": {
        "description": "Returns user_provisioning_account instances by id",
        "operationId": "findUser_provisioning_accountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_account instance",
        "operationId": "updateUser_provisioning_accountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_account instance",
        "operationId": "deleteUser_provisioning_accountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_account": {
      "x-swagger-router-controller": "user_provisioning_account",
      "post": {
        "description": "creates a new instance of user_provisioning_account entity",
        "operationId": "createNewUser_provisioning_account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_account_staging/{id}": {
      "x-swagger-router-controller": "user_provisioning_account_staging",
      "get": {
        "description": "Returns user_provisioning_account_staging instances by id",
        "operationId": "findUser_provisioning_account_stagingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account_staging to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_account_staging instance",
        "operationId": "updateUser_provisioning_account_stagingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account_staging to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_account_staging instance",
        "operationId": "deleteUser_provisioning_account_stagingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_account_staging to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_account_staging": {
      "x-swagger-router-controller": "user_provisioning_account_staging",
      "post": {
        "description": "creates a new instance of user_provisioning_account_staging entity",
        "operationId": "createNewUser_provisioning_account_staging",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_mock_target/{id}": {
      "x-swagger-router-controller": "user_provisioning_mock_target",
      "get": {
        "description": "Returns user_provisioning_mock_target instances by id",
        "operationId": "findUser_provisioning_mock_targetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_mock_target to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_mock_target instance",
        "operationId": "updateUser_provisioning_mock_targetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_mock_target to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_mock_target instance",
        "operationId": "deleteUser_provisioning_mock_targetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_mock_target to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_mock_target": {
      "x-swagger-router-controller": "user_provisioning_mock_target",
      "post": {
        "description": "creates a new instance of user_provisioning_mock_target entity",
        "operationId": "createNewUser_provisioning_mock_target",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_config/{id}": {
      "x-swagger-router-controller": "user_provisioning_config",
      "get": {
        "description": "Returns user_provisioning_config instances by id",
        "operationId": "findUser_provisioning_configById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_config to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_config instance",
        "operationId": "updateUser_provisioning_configById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_config to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_config instance",
        "operationId": "deleteUser_provisioning_configById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_config to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_config": {
      "x-swagger-router-controller": "user_provisioning_config",
      "post": {
        "description": "creates a new instance of user_provisioning_config entity",
        "operationId": "createNewUser_provisioning_config",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_log/{id}": {
      "x-swagger-router-controller": "user_provisioning_log",
      "get": {
        "description": "Returns user_provisioning_log instances by id",
        "operationId": "findUser_provisioning_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_log to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_log instance",
        "operationId": "updateUser_provisioning_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_log to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_log instance",
        "operationId": "deleteUser_provisioning_logById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_log to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_log": {
      "x-swagger-router-controller": "user_provisioning_log",
      "post": {
        "description": "creates a new instance of user_provisioning_log entity",
        "operationId": "createNewUser_provisioning_log",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_request/{id}": {
      "x-swagger-router-controller": "user_provisioning_request",
      "get": {
        "description": "Returns user_provisioning_request instances by id",
        "operationId": "findUser_provisioning_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_request instance",
        "operationId": "updateUser_provisioning_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_request instance",
        "operationId": "deleteUser_provisioning_requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_request": {
      "x-swagger-router-controller": "user_provisioning_request",
      "post": {
        "description": "creates a new instance of user_provisioning_request entity",
        "operationId": "createNewUser_provisioning_request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_request_share/{id}": {
      "x-swagger-router-controller": "user_provisioning_request_share",
      "get": {
        "description": "Returns user_provisioning_request_share instances by id",
        "operationId": "findUser_provisioning_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_provisioning_request_share instance",
        "operationId": "updateUser_provisioning_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_provisioning_request_share instance",
        "operationId": "deleteUser_provisioning_request_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_provisioning_request_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_provisioning_request_share": {
      "x-swagger-router-controller": "user_provisioning_request_share",
      "post": {
        "description": "creates a new instance of user_provisioning_request_share entity",
        "operationId": "createNewUser_provisioning_request_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_record_access/{id}": {
      "x-swagger-router-controller": "user_record_access",
      "get": {
        "description": "Returns user_record_access instances by id",
        "operationId": "findUser_record_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_record_access to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_record_access instance",
        "operationId": "updateUser_record_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_record_access to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_record_access instance",
        "operationId": "deleteUser_record_accessById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_record_access to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_record_access": {
      "x-swagger-router-controller": "user_record_access",
      "post": {
        "description": "creates a new instance of user_record_access entity",
        "operationId": "createNewUser_record_access",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/role/{id}": {
      "x-swagger-router-controller": "role",
      "get": {
        "description": "Returns role instances by id",
        "operationId": "findRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the role to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an role instance",
        "operationId": "updateRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the role to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an role instance",
        "operationId": "deleteRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the role to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/role": {
      "x-swagger-router-controller": "role",
      "post": {
        "description": "creates a new instance of role entity",
        "operationId": "createNewRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_share/{id}": {
      "x-swagger-router-controller": "user_share",
      "get": {
        "description": "Returns user_share instances by id",
        "operationId": "findUser_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an user_share instance",
        "operationId": "updateUser_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an user_share instance",
        "operationId": "deleteUser_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user_share": {
      "x-swagger-router-controller": "user_share",
      "post": {
        "description": "creates a new instance of user_share entity",
        "operationId": "createNewUser_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/identity_verification_history/{id}": {
      "x-swagger-router-controller": "identity_verification_history",
      "get": {
        "description": "Returns identity_verification_history instances by id",
        "operationId": "findIdentity_verification_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_verification_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an identity_verification_history instance",
        "operationId": "updateIdentity_verification_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_verification_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an identity_verification_history instance",
        "operationId": "deleteIdentity_verification_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the identity_verification_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/identity_verification_history": {
      "x-swagger-router-controller": "identity_verification_history",
      "post": {
        "description": "creates a new instance of identity_verification_history entity",
        "operationId": "createNewIdentity_verification_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_access_metric/{id}": {
      "x-swagger-router-controller": "visualforce_access_metric",
      "get": {
        "description": "Returns visualforce_access_metric instances by id",
        "operationId": "findVisualforce_access_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_access_metric to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an visualforce_access_metric instance",
        "operationId": "updateVisualforce_access_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_access_metric to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an visualforce_access_metric instance",
        "operationId": "deleteVisualforce_access_metricById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the visualforce_access_metric to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/visualforce_access_metric": {
      "x-swagger-router-controller": "visualforce_access_metric",
      "post": {
        "description": "creates a new instance of visualforce_access_metric entity",
        "operationId": "createNewVisualforce_access_metric",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/vote/{id}": {
      "x-swagger-router-controller": "vote",
      "get": {
        "description": "Returns vote instances by id",
        "operationId": "findVoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the vote to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an vote instance",
        "operationId": "updateVoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the vote to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an vote instance",
        "operationId": "deleteVoteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the vote to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/vote": {
      "x-swagger-router-controller": "vote",
      "post": {
        "description": "creates a new instance of vote entity",
        "operationId": "createNewVote",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/wave_compatibility_check_item/{id}": {
      "x-swagger-router-controller": "wave_compatibility_check_item",
      "get": {
        "description": "Returns wave_compatibility_check_item instances by id",
        "operationId": "findWave_compatibility_check_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the wave_compatibility_check_item to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an wave_compatibility_check_item instance",
        "operationId": "updateWave_compatibility_check_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the wave_compatibility_check_item to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an wave_compatibility_check_item instance",
        "operationId": "deleteWave_compatibility_check_itemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the wave_compatibility_check_item to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/wave_compatibility_check_item": {
      "x-swagger-router-controller": "wave_compatibility_check_item",
      "post": {
        "description": "creates a new instance of wave_compatibility_check_item entity",
        "operationId": "createNewWave_compatibility_check_item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_button_or_link/{id}": {
      "x-swagger-router-controller": "custom_button_or_link",
      "get": {
        "description": "Returns custom_button_or_link instances by id",
        "operationId": "findCustom_button_or_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_button_or_link to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an custom_button_or_link instance",
        "operationId": "updateCustom_button_or_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_button_or_link to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an custom_button_or_link instance",
        "operationId": "deleteCustom_button_or_linkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the custom_button_or_link to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/custom_button_or_link": {
      "x-swagger-router-controller": "custom_button_or_link",
      "post": {
        "description": "creates a new instance of custom_button_or_link entity",
        "operationId": "createNewCustom_button_or_link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type/{id}": {
      "x-swagger-router-controller": "work_type",
      "get": {
        "description": "Returns work_type instances by id",
        "operationId": "findWork_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an work_type instance",
        "operationId": "updateWork_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an work_type instance",
        "operationId": "deleteWork_typeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type": {
      "x-swagger-router-controller": "work_type",
      "post": {
        "description": "creates a new instance of work_type entity",
        "operationId": "createNewWork_type",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_feed/{id}": {
      "x-swagger-router-controller": "work_type_feed",
      "get": {
        "description": "Returns work_type_feed instances by id",
        "operationId": "findWork_type_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_feed to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an work_type_feed instance",
        "operationId": "updateWork_type_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_feed to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an work_type_feed instance",
        "operationId": "deleteWork_type_feedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_feed to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_feed": {
      "x-swagger-router-controller": "work_type_feed",
      "post": {
        "description": "creates a new instance of work_type_feed entity",
        "operationId": "createNewWork_type_feed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_history/{id}": {
      "x-swagger-router-controller": "work_type_history",
      "get": {
        "description": "Returns work_type_history instances by id",
        "operationId": "findWork_type_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_history to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an work_type_history instance",
        "operationId": "updateWork_type_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_history to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an work_type_history instance",
        "operationId": "deleteWork_type_historyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_history to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_history": {
      "x-swagger-router-controller": "work_type_history",
      "post": {
        "description": "creates a new instance of work_type_history entity",
        "operationId": "createNewWork_type_history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_share/{id}": {
      "x-swagger-router-controller": "work_type_share",
      "get": {
        "description": "Returns work_type_share instances by id",
        "operationId": "findWork_type_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_share to get",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updates an work_type_share instance",
        "operationId": "updateWork_type_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_share to update",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes an work_type_share instance",
        "operationId": "deleteWork_type_shareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work_type_share to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/work_type_share": {
      "x-swagger-router-controller": "work_type_share",
      "post": {
        "description": "creates a new instance of work_type_share entity",
        "operationId": "createNewWork_type_share",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "entity data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}